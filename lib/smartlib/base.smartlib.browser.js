(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("baseSmartLibModule", [], factory);
	else if(typeof exports === 'object')
		exports["baseSmartLibModule"] = factory();
	else
		root["baseSmartLibModule"] = factory();
})((function() { return (typeof self !== 'undefined' ? self : global)})(), function() {
return /******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/ad/AdInteractionType.js":
/*!*************************************!*\
  !*** ./src/ad/AdInteractionType.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AdInteractionType; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);






function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var AdInteractionType = /*#__PURE__*/_createClass(function AdInteractionType() {
  _classCallCheck(this, AdInteractionType);
});
/**
 * Ad user click interaction type
 */
_defineProperty(AdInteractionType, "CLICK", 'click');
/**
 * Ad user invitation accept interaction type
 */
_defineProperty(AdInteractionType, "INVITATION_ACCEPTED", 'invitationAccept');


/***/ }),

/***/ "./src/ad/pal/BrowserAdPalManager.js":
/*!*******************************************!*\
  !*** ./src/ad/pal/BrowserAdPalManager.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BrowserAdPalManager: function() { return /* binding */ BrowserAdPalManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ "./node_modules/core-js/modules/es.object.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.reflect.to-string-tag.js */ "./node_modules/core-js/modules/es.reflect.to-string-tag.js");
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.reflect.construct.js */ "./node_modules/core-js/modules/es.reflect.construct.js");
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core */ "./src_core/index.js");
/* harmony import */ var _BrowserAdPalSession__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./BrowserAdPalSession */ "./src/ad/pal/BrowserAdPalSession.js");









function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var TAG = 'BpkBrowserAdPalManager';
var BrowserAdPalManager = /*#__PURE__*/function (_AdPalManager) {
  _inherits(BrowserAdPalManager, _AdPalManager);
  var _super = _createSuper(BrowserAdPalManager);
  function BrowserAdPalManager() {
    var _this;
    _classCallCheck(this, BrowserAdPalManager);
    _this = _super.call(this);
    _defineProperty(_assertThisInitialized(_this), "palSDK", void 0);
    _defineProperty(_assertThisInitialized(_this), "consentSettings", void 0);
    _defineProperty(_assertThisInitialized(_this), "nonceLoader", void 0);
    _defineProperty(_assertThisInitialized(_this), "descriptionURL", void 0);
    _defineProperty(_assertThisInitialized(_this), "partnerName", void 0);
    _defineProperty(_assertThisInitialized(_this), "partnerVersion", void 0);
    _defineProperty(_assertThisInitialized(_this), "omidVersion", void 0);
    _defineProperty(_assertThisInitialized(_this), "playerType", void 0);
    _defineProperty(_assertThisInitialized(_this), "playerVersion", void 0);
    _defineProperty(_assertThisInitialized(_this), "ppid", void 0);
    _defineProperty(_assertThisInitialized(_this), "videoPlayerHeight", void 0);
    _defineProperty(_assertThisInitialized(_this), "videoPlayerWidth", void 0);
    _defineProperty(_assertThisInitialized(_this), "willAdAutoPlay", void 0);
    _defineProperty(_assertThisInitialized(_this), "willAdPlayMuted", void 0);
    return _this;
  }
  _createClass(BrowserAdPalManager, [{
    key: "loadPALSDK",
    value: function loadPALSDK() {
      this.palSDK = core__WEBPACK_IMPORTED_MODULE_9__.AdManager.getInstance().palSDK;
    }
  }, {
    key: "setConsentSettings",
    value: function setConsentSettings(consentSettings) {
      this.loadPALSDK();
      if (this.palSDK === undefined) {
        core__WEBPACK_IMPORTED_MODULE_9__.LoggerManager.e(TAG, 'PAL SDK not attached, please set it through AdManager.getInstance().attachPALSDK(...)');
        return;
      }
      this.consentSettings = consentSettings;
      this.nonceLoader = new this.palSDK.pal.NonceLoader(consentSettings);
    }
  }, {
    key: "generateAdPalSession",
    value: function generateAdPalSession(callback) {
      if (this.nonceLoader === undefined || this.consentSettings === undefined) {
        core__WEBPACK_IMPORTED_MODULE_9__.LoggerManager.e(TAG, 'Cannot generate a nonce, please set a ConsentSettings through AdManager.getInstance().setConsentSettings(...)');
        callback(undefined);
        return;
      }
      var request = new this.palSDK.pal.NonceRequest();
      if (this.descriptionURL !== undefined) {
        request.descriptionUrl = this.descriptionURL;
      }
      if (this.partnerName !== undefined) {
        request.omidPartnerName = this.partnerName;
      }
      if (this.partnerVersion !== undefined) {
        request.omidPartnerVersion = this.partnerVersion;
      }
      if (this.omidVersion !== undefined) {
        request.omidVersion = this.omidVersion;
      }
      if (this.playerType !== undefined) {
        request.playerType = this.playerType;
      }
      if (this.playerVersion !== undefined) {
        request.playerVersion = this.playerVersion;
      }
      if (this.ppid !== undefined) {
        request.ppid = this.ppid;
      }
      if (this.videoPlayerHeight !== undefined) {
        request.videoHeight = this.videoPlayerHeight;
      }
      if (this.videoPlayerWidth !== undefined) {
        request.videoWidth = this.videoPlayerWidth;
      }
      if (this.willAdAutoPlay !== undefined) {
        request.adWillAutoPlay = this.willAdAutoPlay;
      }
      if (this.willAdPlayMuted !== undefined) {
        request.adWillPlayMuted = this.willAdPlayMuted;
      }
      this.nonceLoader.loadNonceManager(request).then(function (manager) {
        var session = new _BrowserAdPalSession__WEBPACK_IMPORTED_MODULE_10__.BrowserAdPalSession(manager);
        callback(session);
      }).catch(function (error) {
        core__WEBPACK_IMPORTED_MODULE_9__.LoggerManager.e(TAG, 'Error when generating the nonce');
        console.log(error);
        callback(undefined);
      });
    }
  }, {
    key: "reset",
    value: function reset() {}
  }, {
    key: "release",
    value: function release() {
      this.consentSettings = undefined;
      this.nonceLoader = undefined;
    }
  }, {
    key: "setDescriptionURL",
    value: function setDescriptionURL(var1) {
      this.descriptionURL = var1;
    }
  }, {
    key: "setOmidPartner",
    value: function setOmidPartner(var1, var2) {
      this.partnerName = var1;
      this.partnerVersion = var2;
    }
  }, {
    key: "setOmidVersion",
    value: function setOmidVersion(var1) {
      this.omidVersion = var1;
    }
  }, {
    key: "setPlayerType",
    value: function setPlayerType(var1) {
      this.playerType = var1;
    }
  }, {
    key: "setPlayerVersion",
    value: function setPlayerVersion(var1) {
      this.playerVersion = var1;
    }
  }, {
    key: "setPpid",
    value: function setPpid(var1) {
      this.ppid = var1;
    }
  }, {
    key: "setVideoPlayerHeight",
    value: function setVideoPlayerHeight(var1) {
      this.videoPlayerHeight = var1;
    }
  }, {
    key: "setVideoPlayerWidth",
    value: function setVideoPlayerWidth(var1) {
      this.videoPlayerWidth = var1;
    }
  }, {
    key: "setWillAdAutoPlay",
    value: function setWillAdAutoPlay(var1) {
      this.willAdAutoPlay = var1;
    }
  }, {
    key: "setWillAdPlayMuted",
    value: function setWillAdPlayMuted(var1) {
      this.willAdPlayMuted = var1;
    }
  }]);
  return BrowserAdPalManager;
}(core__WEBPACK_IMPORTED_MODULE_9__.AdPalManager);

/***/ }),

/***/ "./src/ad/pal/BrowserAdPalSession.js":
/*!*******************************************!*\
  !*** ./src/ad/pal/BrowserAdPalSession.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BrowserAdPalSession: function() { return /* binding */ BrowserAdPalSession; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ "./node_modules/core-js/modules/es.object.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.reflect.to-string-tag.js */ "./node_modules/core-js/modules/es.reflect.to-string-tag.js");
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.reflect.construct.js */ "./node_modules/core-js/modules/es.reflect.construct.js");
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core */ "./src_core/index.js");









function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


// const TAG = 'BpkBrowserAdPalSession';

var BrowserAdPalSession = /*#__PURE__*/function (_AdPalSession) {
  _inherits(BrowserAdPalSession, _AdPalSession);
  var _super = _createSuper(BrowserAdPalSession);
  function BrowserAdPalSession(nonceManager) {
    var _this;
    _classCallCheck(this, BrowserAdPalSession);
    _this = _super.call(this);
    /**
     * goog.pal.NonceManager
     */
    _defineProperty(_assertThisInitialized(_this), "nonceManager", void 0);
    _this.nonceManager = nonceManager;
    return _this;
  }
  _createClass(BrowserAdPalSession, [{
    key: "getNonce",
    value: function getNonce() {
      return this.nonceManager.getNonce();
    }
  }, {
    key: "sendAdClick",
    value: function sendAdClick() {
      this.nonceManager.sendAdClick();
    }
  }, {
    key: "sendAdImpression",
    value: function sendAdImpression() {
      this.nonceManager.sendAdImpression();
    }
  }, {
    key: "sendPlaybackStart",
    value: function sendPlaybackStart() {}
  }, {
    key: "sendPlaybackEnd",
    value: function sendPlaybackEnd() {}
  }]);
  return BrowserAdPalSession;
}(core__WEBPACK_IMPORTED_MODULE_9__.AdPalSession);

/***/ }),

/***/ "./src/engine/CoreEngine.js":
/*!**********************************!*\
  !*** ./src/engine/CoreEngine.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ CoreEngine; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.assign.js */ "./node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.weak-map.js */ "./node_modules/core-js/modules/es.weak-map.js");
/* harmony import */ var core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core */ "./src_core/index.js");
/* harmony import */ var _system_LoggerHandler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./system/LoggerHandler */ "./src/engine/system/LoggerHandler.js");
/* harmony import */ var _system_RequestHandler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./system/RequestHandler */ "./src/engine/system/RequestHandler.js");
/* harmony import */ var _Revision__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Revision */ "./src/engine/Revision.js");
/* harmony import */ var _utils_NativeRequire__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/NativeRequire */ "./src/engine/utils/NativeRequire.js");
/* harmony import */ var _manager_BrowserAppStateManager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./manager/BrowserAppStateManager */ "./src/engine/manager/BrowserAppStateManager.js");
/* harmony import */ var _manager_WebOSAppStateManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./manager/WebOSAppStateManager */ "./src/engine/manager/WebOSAppStateManager.js");
/* harmony import */ var _manager_TizenAppStateManager__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./manager/TizenAppStateManager */ "./src/engine/manager/TizenAppStateManager.js");
/* harmony import */ var _ad_pal_BrowserAdPalManager__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../ad/pal/BrowserAdPalManager */ "./src/ad/pal/BrowserAdPalManager.js");
/* harmony import */ var _manager_NodeAppStateManager__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./manager/NodeAppStateManager */ "./src/engine/manager/NodeAppStateManager.js");
/* harmony import */ var _ad_AdInteractionType__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../ad/AdInteractionType */ "./src/ad/AdInteractionType.js");











function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }
/* import {
    SmartLib, LoggerManager, LogLevel, RequestManager,
    PlayerManager, PlayerEventListener, GenericPlayerApi,
    StreamingSession, StreamingSessionOptions, StreamingSessionResult,
    AdManager
} from 'core';*/



// import PlayerManagerHandler from './player/PlayerManagerHandler';








var TAG = 'BpkCoreEngine';
var _initialized = /*#__PURE__*/new WeakMap();
var _globalVar = /*#__PURE__*/new WeakMap();
var _loggerHandler = /*#__PURE__*/new WeakMap();
var _playerManagerHandler = /*#__PURE__*/new WeakMap();
var _cacheHandler = /*#__PURE__*/new WeakMap();
var _browserAppStateManager = /*#__PURE__*/new WeakMap();
var _webOSAppStateManager = /*#__PURE__*/new WeakMap();
var _tizenAppStateManager = /*#__PURE__*/new WeakMap();
var _nodeAppStateManager = /*#__PURE__*/new WeakMap();
var _reactNativeAppStateManager = /*#__PURE__*/new WeakMap();
var CoreEngine = /*#__PURE__*/function () {
  function CoreEngine() {
    _classCallCheck(this, CoreEngine);
    _classPrivateFieldInitSpec(this, _initialized, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _globalVar, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _loggerHandler, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _playerManagerHandler, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _cacheHandler, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _browserAppStateManager, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _webOSAppStateManager, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _tizenAppStateManager, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _nodeAppStateManager, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _reactNativeAppStateManager, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldSet(this, _initialized, false);
    _classPrivateFieldSet(this, _globalVar, undefined);
    _classPrivateFieldSet(this, _loggerHandler, new _system_LoggerHandler__WEBPACK_IMPORTED_MODULE_12__["default"]());
  }
  _createClass(CoreEngine, [{
    key: "init",
    value: function init() {
      if (!_classPrivateFieldGet(this, _initialized)) {
        _classPrivateFieldSet(this, _initialized, true);
        var initStartTime = Date.now();
        this.log(core__WEBPACK_IMPORTED_MODULE_11__.LogLevel.VERBOSE, TAG, 'Loading engine...');
        this.log(core__WEBPACK_IMPORTED_MODULE_11__.LogLevel.VERBOSE, TAG, 'Version: ' + _Revision__WEBPACK_IMPORTED_MODULE_14__["default"]);
        this.registerSystemFunctions();
        // this.registerPlayerAdapters();
        if (typeof window === 'object') {
          // browser
          this.registerSmartLibFunctions(window);
          /* } else if (typeof quickjs === 'object') {
              // quickjs
              this.registerSmartLibFunctions(quickjs.global);*/
        } else {
          // node
          this.registerSmartLibFunctions();
          if (typeof XMLHttpRequest === 'undefined') {
            __webpack_require__.g.XMLHttpRequest = (0,_utils_NativeRequire__WEBPACK_IMPORTED_MODULE_15__.nativeRequire)('xmlhttprequest').XMLHttpRequest;
          }
        }
        this.log(core__WEBPACK_IMPORTED_MODULE_11__.LogLevel.VERBOSE, TAG, 'Took ' + (Date.now() - initStartTime) + 'ms to load');
      }
    }
  }, {
    key: "registerSystemFunctions",
    value: function registerSystemFunctions() {
      this.log(core__WEBPACK_IMPORTED_MODULE_11__.LogLevel.VERBOSE, TAG, 'Registering system functions...');
      core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.getInstance().init(_classPrivateFieldGet(this, _loggerHandler));

      /* if (typeof quickjs === 'object') {
          RequestManager.getInstance().init({
              get: (url, headers, timeout, callback) => {
                  setTimeout(() => {
                      quickjs.request.get(url, headers, timeout, callback);
                  }, 0);
              },
              post: (url, headers, body, timeout, callback) => {
                  setTimeout(() => {
                      quickjs.request.post(url, headers, body, timeout, callback);
                  }, 0);
              }
          });
      } else {
          RequestManager.getInstance().init(new RequestHandler());
      }*/
      core__WEBPACK_IMPORTED_MODULE_11__.RequestManager.getInstance().init(new _system_RequestHandler__WEBPACK_IMPORTED_MODULE_13__["default"]());
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.getInstance().internalAdManager.setPalManager(new _ad_pal_BrowserAdPalManager__WEBPACK_IMPORTED_MODULE_19__.BrowserAdPalManager());
    }
  }, {
    key: "registerPlayerAdapters",
    value: function registerPlayerAdapters() {
      // this.#playerManagerHandler = new PlayerManagerHandler();
      if (CoreEngine.analyticsModule !== undefined) {
        _classPrivateFieldSet(this, _playerManagerHandler, new CoreEngine.analyticsModule.PlayerManagerHandler());
        if (typeof window === 'object') {
          window.PlayerEventListener = CoreEngine.analyticsModule.PlayerEventListener;
          window.GenericPlayerApi = CoreEngine.analyticsModule.GenericPlayerApi;
        }
      }
    }
  }, {
    key: "loadModules",
    value: function loadModules() {
      if (typeof window === 'object') {
        // browser
        core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule = this.getBrowserModule('analyticsSmartLibModule', 'Analytics', core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule);
        core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.adModule = this.getBrowserModule('adSmartLibModule', 'Ad', core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.adModule);
        core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.nanoCDNModule = this.getBrowserModule('nanocdnSmartLibModule', 'nanoCDN', core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.nanoCDNModule);
        core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.diversityModule = this.getBrowserModule('diversitySmartLibModule', 'Diversity', core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.diversityModule);
        core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.monitoringModule = this.getBrowserModule('monitoringSmartLibModule', 'Monitoring', core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.monitoringModule);
        CoreEngine.reactNativeModule = this.getBrowserModule('reactnativeSmartLibModule', 'React Native', CoreEngine.reactNativeModule);

        // players
        CoreEngine.shakaModule = this.getBrowserModule('shakaSmartLibModule', 'Shaka Player', CoreEngine.shakaModule);
        if (CoreEngine.shakaModule !== undefined) {
          window.ShakaPlayerAdapter = CoreEngine.shakaModule.ShakaPlayerAdapter;
        }
        CoreEngine.dashjsModule = this.getBrowserModule('dashjsSmartLibModule', 'Dash.js', CoreEngine.dashjsModule);
        if (CoreEngine.dashjsModule !== undefined) {
          window.DashJsPlayerAdapter = CoreEngine.dashjsModule.DashJsPlayerAdapter;
        }
        CoreEngine.html5Module = this.getBrowserModule('html5SmartLibModule', 'HTML5 player', CoreEngine.html5Module);
        CoreEngine.avplayModule = this.getBrowserModule('avplaySmartLibModule', 'AVPlay', CoreEngine.avplayModule);
        CoreEngine.diw387Module = this.getBrowserModule('diw387SmartLibModule', 'Sagemcom', CoreEngine.diw387Module);
        CoreEngine.hbbtv1Module = this.getBrowserModule('hbbtv1SmartLibModule', 'HbbTV1', CoreEngine.hbbtv1Module);
        CoreEngine.kalturaModule = this.getBrowserModule('kalturaSmartLibModule', 'Kaltura', CoreEngine.kalturaModule);
        CoreEngine.connectplayerModule = this.getBrowserModule('connectplayerSmartLibModule', 'CONNECT Player', CoreEngine.connectplayerModule);
        if (CoreEngine.connectplayerModule !== undefined) {
          window.ConnectPlayerAdapter = CoreEngine.connectplayerModule.ConnectPlayerAdapter;
        }
        CoreEngine.rxplayerModule = this.getBrowserModule('rxplayerSmartLibModule', 'RxPlayer', CoreEngine.rxplayerModule);
        CoreEngine.hlsjsModule = this.getBrowserModule('hlsjsModule', 'HLS.js', CoreEngine.hlsjsModule);
        CoreEngine.bitmovinModule = this.getBrowserModule('bitmovinModule', 'Bitmovin', CoreEngine.bitmovinModule);
        CoreEngine.theoplayerModule = this.getBrowserModule('theoplayerModule', 'THEOplayer', CoreEngine.theoplayerModule);
        if (CoreEngine.theoplayerModule !== undefined) {
          window.THEOPlayerAdapter = CoreEngine.theoplayerModule.THEOPlayerAdapter;
        }
        CoreEngine.reactnativeconnectplayerModule = this.getBrowserModule('reactnativeconnectplayerModule', 'React Native CONNECT Player', CoreEngine.reactnativeconnectplayerModule);
        CoreEngine.reactnativetheoplayerModule = this.getBrowserModule('reactnativetheoplayerModule', 'React Native THEOplayer', CoreEngine.reactnativetheoplayerModule);
        CoreEngine.chromecastModule = this.getBrowserModule('chromecastModule', 'Chromecast', CoreEngine.chromecastModule);
      } else {
        if (CoreEngine.modular === true) {
          // node
          core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule = this.getNodeModule('analytics', 'Analytics');
          core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.adModule = this.getNodeModule('ad', 'Ad');
          core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.nanoCDNModule = this.getNodeModule('nanocdn', 'nanoCDN');
          core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.diversityModule = this.getNodeModule('diversity', 'Diversity');
          core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.monitoringModule = this.getNodeModule('monitoring', 'Monitoring');
          CoreEngine.reactNativeModule = this.getNodeModule('reactnative', 'React Native');

          // players
          CoreEngine.shakaModule = this.getNodeModule('shaka', 'Shaka Player');
          CoreEngine.dashjsModule = this.getNodeModule('dashjs', 'Dash.js');
          CoreEngine.html5Module = this.getNodeModule('html5', 'HTML5 player');
          CoreEngine.avplayModule = this.getNodeModule('avplay', 'AVPlay');
          CoreEngine.diw387Module = this.getNodeModule('diw387', 'Sagemcom');
          CoreEngine.hbbtv1Module = this.getNodeModule('hbbtv1', 'HbbTV1');
          CoreEngine.kalturaModule = this.getNodeModule('kaltura', 'Kaltura');
          CoreEngine.connectplayerModule = this.getNodeModule('connectplayer', 'CONNECT Player');
          CoreEngine.rxplayerModule = this.getNodeModule('rxplayer', 'RxPlayer');
          CoreEngine.hlsjsModule = this.getNodeModule('hlsjs', 'HLS.js');
          CoreEngine.bitmovinModule = this.getNodeModule('bitmovin', 'Bitmovin');
          CoreEngine.theoplayerModule = this.getNodeModule('theoplayer', 'THEOplayer');
          CoreEngine.reactnativeconnectplayerModule = this.getNodeModule('reactnativeconnectplayer', 'React Native CONNECT Player');
          CoreEngine.reactnativetheoplayerModule = this.getNodeModule('reactnativetheoplayer', 'React Native THEOplayer');
          CoreEngine.chromecastModule = this.getNodeModule('chromecast', 'Chromecast');
        }
      }

      // Register global vars
      if (_classPrivateFieldGet(this, _globalVar) !== undefined) {
        if (core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.monitoringModule !== undefined) {
          _classPrivateFieldGet(this, _globalVar).RealTimeMonitoringManager = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.monitoringModule.RealTimeMonitoringManager;
        }
      }
    }
  }, {
    key: "getBrowserModule",
    value: function getBrowserModule(name, printName, currentModule) {
      if (currentModule !== undefined) {
        core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, printName + ' module loaded (from index)');
        return currentModule;
      }
      core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, printName + ' module not loaded');
      return undefined;

      /* let module = typeof window[name] !== 'undefined' ? window[name] : undefined;
      if (module === undefined && typeof window['smartlib.browser'] !== 'undefined') {
          module = typeof window['smartlib.browser'][name] !== 'undefined' ? window['smartlib.browser'][name] : undefined;
      }
      if (module !== undefined) {
          LoggerManager.i(TAG, printName + ' module loaded (from import)');
      } else {
          LoggerManager.i(TAG, printName + ' module not loaded');
      }
       return module;*/
    }
  }, {
    key: "getNodeModule",
    value: function getNodeModule(name, printName) {
      try {
        var module = (0,_utils_NativeRequire__WEBPACK_IMPORTED_MODULE_15__.nativeMainRequire)('@broadpeak/smartlib-' + name);
        core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, printName + ' module loaded');
        return module;
      } catch (e) {
        // console.log(name + ' nativeMainRequire error 1', e, e.stack);

        try {
          var _module = (0,_utils_NativeRequire__WEBPACK_IMPORTED_MODULE_15__.nativeRequire)('./' + name + '.smartlib.browser');
          core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, printName + ' module loaded');
          return _module;
        } catch (e) {
          // console.log(name + ' nativeRequire error 1', e, e.stack);

          core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, printName + ' module not loaded');
        }
      }
      return undefined;
    }
  }, {
    key: "registerSmartLibFunctions",
    value: function registerSmartLibFunctions(globalVar) {
      var instance = this;
      _classPrivateFieldSet(this, _globalVar, globalVar);
      var browserInit = function browserInit() {
        var _CoreEngine$reactNati, _SmartLib$analyticsMo;
        if (typeof webOS !== 'undefined') {
          if (_classPrivateFieldGet(instance, _webOSAppStateManager) === undefined) {
            _classPrivateFieldSet(instance, _webOSAppStateManager, new _manager_WebOSAppStateManager__WEBPACK_IMPORTED_MODULE_17__.WebOSAppStateManager());
          }
          _classPrivateFieldGet(instance, _webOSAppStateManager).init();
        } else if (typeof tizen !== 'undefined' && typeof webapis !== 'undefined') {
          if (_classPrivateFieldGet(instance, _tizenAppStateManager) === undefined) {
            _classPrivateFieldSet(instance, _tizenAppStateManager, new _manager_TizenAppStateManager__WEBPACK_IMPORTED_MODULE_18__.TizenAppStateManager());
          }
          _classPrivateFieldGet(instance, _tizenAppStateManager).init();
        } else if (typeof sagem !== 'undefined') {
          // in player adapter
        } else if (((_CoreEngine$reactNati = CoreEngine.reactNativeModule) === null || _CoreEngine$reactNati === void 0 ? void 0 : _CoreEngine$reactNati.ReactNativeAppStateManager.platform) !== undefined) {
          if (_classPrivateFieldGet(instance, _reactNativeAppStateManager) === undefined) {
            _classPrivateFieldSet(instance, _reactNativeAppStateManager, new CoreEngine.reactNativeModule.ReactNativeAppStateManager());
          }
          _classPrivateFieldGet(instance, _reactNativeAppStateManager).init();
        } else if (typeof window !== 'undefined') {
          if (_classPrivateFieldGet(instance, _browserAppStateManager) === undefined) {
            _classPrivateFieldSet(instance, _browserAppStateManager, new _manager_BrowserAppStateManager__WEBPACK_IMPORTED_MODULE_16__.BrowserAppStateManager());
          }
          _classPrivateFieldGet(instance, _browserAppStateManager).init();
        } else if (typeof process !== 'undefined' && process.release.name === 'node') {
          if (_classPrivateFieldGet(instance, _nodeAppStateManager) === undefined) {
            _classPrivateFieldSet(instance, _nodeAppStateManager, new _manager_NodeAppStateManager__WEBPACK_IMPORTED_MODULE_20__.NodeAppStateManager());
          }
          _classPrivateFieldGet(instance, _nodeAppStateManager).init();
        }
        instance.loadModules();

        // Create cache handler
        if (_classPrivateFieldGet(instance, _reactNativeAppStateManager) !== undefined) {
          _classPrivateFieldSet(instance, _cacheHandler, new CoreEngine.reactNativeModule.ReactNativeCacheHandler(CoreEngine.reactNativeModule.ReactNativeAppStateManager.asyncCache));
        } else if (CoreEngine.analyticsModule !== undefined) {
          _classPrivateFieldSet(instance, _cacheHandler, new CoreEngine.analyticsModule.CacheHandler());
        }

        // Init cache manager with cache handler
        (_SmartLib$analyticsMo = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule) === null || _SmartLib$analyticsMo === void 0 || _SmartLib$analyticsMo.CacheManager.getInstance().init(_classPrivateFieldGet(instance, _cacheHandler));
      };
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.defaultInit = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.init;
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.init = function (analyticsAddress, nanoCDNHost, broadpeakDomainNames, arg4) {
        browserInit();
        this.defaultInit(analyticsAddress, nanoCDNHost, broadpeakDomainNames, arg4);
      };
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.defaultInitAnalytics = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.initAnalytics;
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.initAnalytics = function (analyticsAddress) {
        browserInit();
        this.defaultInitAnalytics(analyticsAddress);
      };
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.defaultAttachPlayer = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.attachPlayer;
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.attachPlayer = function (player, listener) {
        var _SmartLib$analyticsMo2, _classPrivateFieldGet2;
        (_SmartLib$analyticsMo2 = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule) === null || _SmartLib$analyticsMo2 === void 0 || _SmartLib$analyticsMo2.PlayerManager.getInstance().init(_classPrivateFieldGet(instance, _playerManagerHandler));
        var playerAdapter = (_classPrivateFieldGet2 = _classPrivateFieldGet(instance, _playerManagerHandler)) === null || _classPrivateFieldGet2 === void 0 ? void 0 : _classPrivateFieldGet2.attachPlayer(player, listener);
        this.defaultAttachPlayer(playerAdapter);
      };
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.defaultRelease = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.release;
      core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.prototype.release = function () {
        this.defaultRelease();
        if (_classPrivateFieldGet(instance, _browserAppStateManager) !== undefined) {
          _classPrivateFieldGet(instance, _browserAppStateManager).release();
          _classPrivateFieldSet(instance, _browserAppStateManager, undefined);
        }
        if (_classPrivateFieldGet(instance, _webOSAppStateManager) !== undefined) {
          _classPrivateFieldGet(instance, _webOSAppStateManager).release();
          _classPrivateFieldSet(instance, _webOSAppStateManager, undefined);
        }
        if (_classPrivateFieldGet(instance, _tizenAppStateManager) !== undefined) {
          _classPrivateFieldGet(instance, _tizenAppStateManager).release();
          _classPrivateFieldSet(instance, _tizenAppStateManager, undefined);
        }
        if (_classPrivateFieldGet(instance, _nodeAppStateManager) !== undefined) {
          _classPrivateFieldGet(instance, _nodeAppStateManager).release();
          _classPrivateFieldSet(instance, _nodeAppStateManager, undefined);
        }
        if (_classPrivateFieldGet(instance, _reactNativeAppStateManager) !== undefined) {
          _classPrivateFieldGet(instance, _reactNativeAppStateManager).release();
          _classPrivateFieldSet(instance, _reactNativeAppStateManager, undefined);
        }
      };

      // overriding methods in order to add behaviour according to target
      core__WEBPACK_IMPORTED_MODULE_11__.StreamingSession.prototype.defaultAttachPlayer = core__WEBPACK_IMPORTED_MODULE_11__.StreamingSession.prototype.attachPlayer;
      core__WEBPACK_IMPORTED_MODULE_11__.StreamingSession.prototype.attachPlayer = function (player, listener) {
        var _SmartLib$analyticsMo3, _classPrivateFieldGet3;
        (_SmartLib$analyticsMo3 = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule) === null || _SmartLib$analyticsMo3 === void 0 || _SmartLib$analyticsMo3.PlayerManager.getInstance().init(_classPrivateFieldGet(instance, _playerManagerHandler));
        var playerAdapter = (_classPrivateFieldGet3 = _classPrivateFieldGet(instance, _playerManagerHandler)) === null || _classPrivateFieldGet3 === void 0 ? void 0 : _classPrivateFieldGet3.attachPlayer(player, listener);
        this.defaultAttachPlayer(playerAdapter);
      };
      if (typeof globalVar === 'object') {
        var _CoreEngine$analytics, _CoreEngine$analytics2;
        globalVar.SmartLib = Object.assign(core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.getInstance(), core__WEBPACK_IMPORTED_MODULE_11__.SmartLib);
        globalVar.SmartLib.getInstance = function () {
          return core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.getInstance();
        };
        globalVar.LoggerManager = core__WEBPACK_IMPORTED_MODULE_11__.LoggerManager;
        globalVar.PlayerEventListener = (_CoreEngine$analytics = CoreEngine.analyticsModule) === null || _CoreEngine$analytics === void 0 ? void 0 : _CoreEngine$analytics.PlayerEventListener;
        globalVar.GenericPlayerApi = (_CoreEngine$analytics2 = CoreEngine.analyticsModule) === null || _CoreEngine$analytics2 === void 0 ? void 0 : _CoreEngine$analytics2.GenericPlayerApi;
        globalVar.PlayerApiImp = {
          getVersion: function getVersion() {
            var _SmartLib$analyticsMo4;
            var adapter = (_SmartLib$analyticsMo4 = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule) === null || _SmartLib$analyticsMo4 === void 0 ? void 0 : _SmartLib$analyticsMo4.PlayerManager.getInstance().getPlayerAdapter();
            if (adapter !== undefined && typeof adapter['getVersion'] === 'function') {
              return adapter['getVersion']();
            }
            return 'undefined';
          },
          getErrorCode: function getErrorCode(code) {
            var _SmartLib$analyticsMo5;
            var adapter = (_SmartLib$analyticsMo5 = core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.analyticsModule) === null || _SmartLib$analyticsMo5 === void 0 ? void 0 : _SmartLib$analyticsMo5.PlayerManager.getInstance().getPlayerAdapter();
            if (adapter !== undefined && typeof adapter['getErrorCode'] === 'function') {
              return adapter['getErrorCode'](code);
            }
            return core__WEBPACK_IMPORTED_MODULE_11__.SmartLib.BPUnspecifiedError;
          }
        };
        globalVar.StreamingSession = core__WEBPACK_IMPORTED_MODULE_11__.StreamingSession;
        globalVar.StreamingSessionOptions = core__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions;
        globalVar.StreamingSessionResult = core__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionResult;
        globalVar.AdManager = core__WEBPACK_IMPORTED_MODULE_11__.AdManager;
        globalVar.AdInteractionType = _ad_AdInteractionType__WEBPACK_IMPORTED_MODULE_21__["default"];
      }
    }
  }, {
    key: "log",
    value: function log(level, tag, logs) {
      _classPrivateFieldGet(this, _loggerHandler).log(level, tag, logs);
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!_classStaticPrivateFieldSpecGet(CoreEngine, CoreEngine, _instance)) {
        _classStaticPrivateFieldSpecSet(CoreEngine, CoreEngine, _instance, new CoreEngine());
      }
      return _classStaticPrivateFieldSpecGet(CoreEngine, CoreEngine, _instance);
    }
  }]);
  return CoreEngine;
}();
/**
 * Singleton
 */
var _instance = {
  writable: true,
  value: void 0
};
_defineProperty(CoreEngine, "modular", true);
_defineProperty(CoreEngine, "analyticsModule", void 0);
_defineProperty(CoreEngine, "reactNativeModule", void 0);
// players
_defineProperty(CoreEngine, "shakaModule", void 0);
_defineProperty(CoreEngine, "dashjsModule", void 0);
_defineProperty(CoreEngine, "html5Module", void 0);
_defineProperty(CoreEngine, "avplayModule", void 0);
_defineProperty(CoreEngine, "diw387Module", void 0);
_defineProperty(CoreEngine, "hbbtv1Module", void 0);
_defineProperty(CoreEngine, "kalturaModule", void 0);
_defineProperty(CoreEngine, "connectplayerModule", void 0);
_defineProperty(CoreEngine, "rxplayerModule", void 0);
_defineProperty(CoreEngine, "hlsjsModule", void 0);
_defineProperty(CoreEngine, "bitmovinModule", void 0);
_defineProperty(CoreEngine, "theoplayerModule", void 0);
_defineProperty(CoreEngine, "reactnativeconnectplayerModule", void 0);
_defineProperty(CoreEngine, "reactnativetheoplayerModule", void 0);
_defineProperty(CoreEngine, "chromecastModule", void 0);


/***/ }),

/***/ "./src/engine/Revision.js":
/*!********************************!*\
  !*** ./src/engine/Revision.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
var revision = '3fbd673';
/* harmony default export */ __webpack_exports__["default"] = (revision);

/***/ }),

/***/ "./src/engine/manager/BrowserAppStateManager.js":
/*!******************************************************!*\
  !*** ./src/engine/manager/BrowserAppStateManager.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BrowserAppStateManager: function() { return /* binding */ BrowserAppStateManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core */ "./src_core/index.js");








function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkBrowserAppStateMgr';
var BrowserAppStateManager = /*#__PURE__*/function () {
  function BrowserAppStateManager() {
    _classCallCheck(this, BrowserAppStateManager);
    _defineProperty(this, "initialized", void 0);
    _defineProperty(this, "listeners", void 0);
  }
  _createClass(BrowserAppStateManager, [{
    key: "init",
    value: function init() {
      core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Initializing browser app state manager...');
      if (!this.initialized) {
        core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().setDeviceInfo(this.getOSName(), this.getOSVersion(), this.getDeviceType());
        core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().bind();
        this.listeners = {};
        if (typeof window !== 'undefined' && typeof window.addEventListener === 'undefined') {
          core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.w(TAG, 'Are you running a React Native app? If yes, please import module \'@broadpeak/smartlib-react-native\'');
        }
        this.registerNetworkObserver();

        // Disabled for now
        // this.registerLifecycleEvents();

        this.initialized = true;
      }
    }
  }, {
    key: "getOSName",
    value: function getOSName() {
      if (typeof device !== 'undefined' && device.platform !== undefined) {
        return device.platform;
      }
      if (typeof window !== 'undefined' && window.navigator !== undefined && window.navigator.platform !== undefined) {
        return window.navigator.platform;
      }
      return 'NA';
    }
  }, {
    key: "getOSVersion",
    value: function getOSVersion() {
      var deviceVersion;
      if (typeof device !== 'undefined' && device.version !== undefined) {
        deviceVersion = device.version;
      } else if (typeof window !== 'undefined' && window.navigator !== undefined && window.navigator.appVersion !== undefined) {
        deviceVersion = window.navigator.appVersion;
      }
      if (deviceVersion === undefined) {
        deviceVersion = '';
      }
      var appVersion = deviceVersion.replace(/ /g, '_').replace(/;/g, '_');
      if (appVersion.length >= 30) {
        return appVersion.substring(0, 30);
      }
      if (appVersion.length === 0) {
        return 'NA';
      }
      return appVersion;
    }
  }, {
    key: "getDeviceType",
    value: function getDeviceType() {
      if (typeof cast !== 'undefined' && cast.receiver !== undefined) {
        return 'chromecast';
      }
      return 'browser';
    }
  }, {
    key: "release",
    value: function release() {
      if (this.initialized) {
        this.unregisterNetworkObserver();
        // this.unregisterLifecycleEvents();

        this.initialized = false;
      }
    }
  }, {
    key: "registerNetworkObserver",
    value: function registerNetworkObserver() {
      this.listeners[0] = this.onNetworkOnline.bind(this);
      this.listeners[1] = this.onNetworkOffline.bind(this);
      if (typeof window !== 'undefined' && window.navigator !== undefined && window.navigator.onLine !== undefined) {
        if (window.navigator.onLine === true) {
          core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkAvailable(1);
        } else {
          core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkLost();
        }
      }
      window.addEventListener('online', this.listeners[0]);
      window.addEventListener('offline', this.listeners[1]);
    }
  }, {
    key: "unregisterNetworkObserver",
    value: function unregisterNetworkObserver() {
      window.removeEventListener('online', this.listeners[0]);
      window.removeEventListener('offline', this.listeners[1]);
      this.listeners[0] = undefined;
      this.listeners[1] = undefined;
    }
  }, {
    key: "onNetworkOnline",
    value: function onNetworkOnline() {
      core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkAvailable(1);
    }
  }, {
    key: "onNetworkOffline",
    value: function onNetworkOffline() {
      core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkLost();
    }
  }, {
    key: "registerLifecycleEvents",
    value: function registerLifecycleEvents() {
      this.listeners[2] = this.onMoveToForeground.bind(this);
      this.listeners[3] = this.onMoveToBackground.bind(this);
      window.addEventListener('focus', this.listeners[2]);
      window.addEventListener('blur', this.listeners[3]);
    }
  }, {
    key: "unregisterLifecycleEvents",
    value: function unregisterLifecycleEvents() {
      window.removeEventListener('focus', this.listeners[2]);
      window.removeEventListener('blur', this.listeners[3]);
      this.listeners[2] = undefined;
      this.listeners[3] = undefined;
    }
  }, {
    key: "onMoveToForeground",
    value: function onMoveToForeground() {
      core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyForeground();
    }
  }, {
    key: "onMoveToBackground",
    value: function onMoveToBackground() {
      core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyBackground();
    }
  }]);
  return BrowserAppStateManager;
}();

/***/ }),

/***/ "./src/engine/manager/NodeAppStateManager.js":
/*!***************************************************!*\
  !*** ./src/engine/manager/NodeAppStateManager.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NodeAppStateManager: function() { return /* binding */ NodeAppStateManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core */ "./src_core/index.js");
/* harmony import */ var _utils_NativeRequire__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/NativeRequire */ "./src/engine/utils/NativeRequire.js");






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var TAG = 'BpkNodeAppStateMgr';
var NodeAppStateManager = /*#__PURE__*/function () {
  function NodeAppStateManager() {
    _classCallCheck(this, NodeAppStateManager);
    _defineProperty(this, "initialized", void 0);
  }
  _createClass(NodeAppStateManager, [{
    key: "init",
    value: function init() {
      core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Initializing Node.js app state manager...');
      if (!this.initialized) {
        core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().setDeviceInfo(this.getOSName(), this.getOSVersion(), this.getDeviceType());
        core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().bind();
        this.initialized = true;
      }
    }
  }, {
    key: "getOSName",
    value: function getOSName() {
      if (typeof process !== 'undefined') {
        return process.platform;
      }
      return 'NA';
    }
  }, {
    key: "getOSVersion",
    value: function getOSVersion() {
      var os = (0,_utils_NativeRequire__WEBPACK_IMPORTED_MODULE_7__.nativeRequire)('os');
      if (typeof os !== 'undefined') {
        return os.release();
      }
      return 'NA';
    }
  }, {
    key: "getDeviceType",
    value: function getDeviceType() {
      return 'nodejs';
    }
  }, {
    key: "release",
    value: function release() {
      if (this.initialized) {
        this.initialized = false;
      }
    }
  }]);
  return NodeAppStateManager;
}();

/***/ }),

/***/ "./src/engine/manager/TizenAppStateManager.js":
/*!****************************************************!*\
  !*** ./src/engine/manager/TizenAppStateManager.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TizenAppStateManager: function() { return /* binding */ TizenAppStateManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core */ "./src_core/index.js");






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkTizenAppStateMgr';
var TizenAppStateManager = /*#__PURE__*/function () {
  function TizenAppStateManager() {
    _classCallCheck(this, TizenAppStateManager);
    _defineProperty(this, "initialized", void 0);
    _defineProperty(this, "networkInitializer", void 0);
    _defineProperty(this, "networkInitializerNumber", void 0);
    _defineProperty(this, "listeners", void 0);
  }
  _createClass(TizenAppStateManager, [{
    key: "init",
    value: function init() {
      core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Initializing tizen app state manager...');
      if (!this.initialized) {
        core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().setDeviceInfo('Tizen', this.getOSVersion(), 'tv');
        core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().bind();
        this.listeners = {};
        this.startNetworkInitializer();
        this.initialized = true;
      }
    }
  }, {
    key: "getOSVersion",
    value: function getOSVersion() {
      if (typeof tizen !== 'undefined' && tizen['systeminfo'] !== undefined) {
        return tizen.systeminfo.getCapability('http://tizen.org/feature/platform.version');
      }
      return 'NA';
    }
  }, {
    key: "release",
    value: function release() {
      if (this.initialized) {
        this.unregisterNetworkObserver();
        this.initialized = false;
      }
    }
  }, {
    key: "onNetworkChange",
    value: function onNetworkChange(data) {
      var connectionType = null;
      try {
        connectionType = webapis.network.getActiveConnectionType();
      } catch (e) {
        core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'getActiveConnectionType exception [' + e.code + '] message: ' + e.message);
      }
      if (connectionType != null) {
        switch (connectionType) {
          case webapis.network.NetworkActiveConnectionType.DISCONNECTED:
            core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().notifyNetworkLost();
            break;
          case webapis.network.NetworkActiveConnectionType.WIFI:
            core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().notifyNetworkAvailable(10);
            break;
          case webapis.network.NetworkActiveConnectionType.ETHERNET:
            core__WEBPACK_IMPORTED_MODULE_6__.AppStateManager.getInstance().notifyNetworkAvailable(30);
            break;
        }
        core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Active connection type: ' + connectionType);
      }
    }
  }, {
    key: "startNetworkInitializer",
    value: function startNetworkInitializer() {
      var _this = this;
      if (this.networkInitializer !== undefined) {
        clearInterval(this.networkInitializer);
      }
      this.networkInitializerNumber = 0;
      this.networkInitializer = setInterval(function () {
        if (typeof webapis.network !== 'undefined') {
          // Init ok
          core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Network API is now available');
          clearInterval(_this.networkInitializer);
          _this.networkInitializer = undefined;
          _this.registerNetworkObserver();
        } else if (_this.networkInitializerNumber > 30) {
          // 30 * 100ms => 3 secs
          // Init failed
          core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'The webapis.js script is required in order to get the network type.');
          clearInterval(_this.networkInitializer);
          _this.networkInitializer = undefined;
        } else {
          // Wait more
          _this.networkInitializerNumber++;
        }
      }, 100);
    }
  }, {
    key: "registerNetworkObserver",
    value: function registerNetworkObserver() {
      if (typeof webapis.network === 'undefined') {
        core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'The webapis.js script is required in order to get the network type.');
      }
      this.onNetworkChange(undefined);
      try {
        this.listeners[0] = webapis.network.addNetworkStateChangeListener(this.onNetworkChange);
      } catch (e) {
        core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'addNetworkStateChangeListener exception [' + e.code + '] name: ' + e.name + ' message: ' + e.message);
      }
    }
  }, {
    key: "unregisterNetworkObserver",
    value: function unregisterNetworkObserver() {
      try {
        webapis.network.removeNetworkStateChangeListener(this.listeners[0]);
      } catch (e) {
        core__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'removeNetworkStateChangeListener exception [' + e.code + '] name: ' + e.name + ' message: ' + e.message);
      }
      this.listeners[0] = undefined;
    }
  }]);
  return TizenAppStateManager;
}();

/***/ }),

/***/ "./src/engine/manager/WebOSAppStateManager.js":
/*!****************************************************!*\
  !*** ./src/engine/manager/WebOSAppStateManager.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WebOSAppStateManager: function() { return /* binding */ WebOSAppStateManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.json.stringify.js */ "./node_modules/core-js/modules/es.json.stringify.js");
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.starts-with.js */ "./node_modules/core-js/modules/es.string.starts-with.js");
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core */ "./src_core/index.js");








function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkWebOSAppStateMgr';
var WebOSAppStateManager = /*#__PURE__*/function () {
  function WebOSAppStateManager() {
    _classCallCheck(this, WebOSAppStateManager);
    _defineProperty(this, "initialized", void 0);
    _defineProperty(this, "subscriptionHandle", void 0);
    _defineProperty(this, "webOSVersion", void 0);
  }
  _createClass(WebOSAppStateManager, [{
    key: "init",
    value: function init() {
      var _this = this;
      core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Initializing webOS app state manager...');
      if (!this.initialized) {
        this.webOSVersion = '';
        webOS.deviceInfo(function (info) {
          _this.webOSVersion = info.sdkVersion;
          if (_this.webOSVersion !== undefined) {
            core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Receiving sdk version through deviceInfo: ' + _this.webOSVersion);
            _this.registerNetworkObserver();
            core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().setDeviceInfo('webOS', _this.webOSVersion, 'tv');
            core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().bind();
          } else {
            webOS.service.request('luna://com.webos.service.tv.systemproperty', {
              method: 'getSystemInfo',
              parameters: {
                'keys': ['sdkVersion']
              },
              onSuccess: function onSuccess(response) {
                if (response['sdkVersion'] !== undefined) {
                  _this.webOSVersion = response['sdkVersion'];
                  core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Receiving sdk version through luna API: ' + _this.webOSVersion);
                  _this.registerNetworkObserver();
                  core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().setDeviceInfo('webOS', _this.webOSVersion, 'tv');
                  core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().bind();
                }
              },
              onFailure: function onFailure(inError) {
                core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Error while receiving webOS version (' + JSON.stringify(inError) + ')');
              }
            });
          }
        });
        this.initialized = true;
      }
    }
  }, {
    key: "release",
    value: function release() {
      if (this.initialized) {
        this.unregisterNetworkObserver();
        this.initialized = false;
      }
    }
  }, {
    key: "updateNetworkState",
    value: function updateNetworkState(response) {
      var _response$wifi, _response$wired;
      var wifi = ((_response$wifi = response.wifi) === null || _response$wifi === void 0 ? void 0 : _response$wifi.onInternet) === 'yes';
      var ethernet = ((_response$wired = response.wired) === null || _response$wired === void 0 ? void 0 : _response$wired.onInternet) === 'yes';

      // LoggerManager.d(TAG, 'Wi-Fi connected: ' + wifiState);
      // LoggerManager.d(TAG, 'Ethernet connected: ' + ethernetState);

      if (ethernet === true) {
        core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkAvailable(30);
      } else if (wifi === true) {
        core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkAvailable(10);
      } else {
        core__WEBPACK_IMPORTED_MODULE_8__.AppStateManager.getInstance().notifyNetworkLost();
      }
    }
  }, {
    key: "registerNetworkObserver",
    value: function registerNetworkObserver() {
      var serviceURL = this.webOSVersion.startsWith('3') ? 'luna://com.webos.service.connectionmanager' : 'luna://com.palm.connectionmanager';
      // LoggerManager.d(TAG, 'Listening to ' + serviceURL);

      // Get first state
      var instance = this;
      webOS.service.request(serviceURL, {
        method: 'getStatus',
        onSuccess: function onSuccess(response) {
          instance.updateNetworkState(response);
        },
        onFailure: function onFailure(inError) {
          core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, 'Failed to get network state');
          core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, '[' + inError.errorCode + ']: ' + inError.errorText);
        }
      });

      // Register to network events
      this.subscriptionHandle = webOS.service.request(serviceURL, {
        method: 'getStatus',
        parameters: {
          'subscribe': true
        },
        onSuccess: function onSuccess(response) {
          if (typeof response.subscribed !== 'undefined') {
            if (!response.subscribed) {
              core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, 'Failed to subscribe network state');
              return;
            }
          }
          instance.updateNetworkState(response);
        },
        onFailure: function onFailure(inError) {
          core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, 'Failed to get network state');
          core__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, '[' + inError.errorCode + ']: ' + inError.errorText);
        }
      });
    }
  }, {
    key: "unregisterNetworkObserver",
    value: function unregisterNetworkObserver() {
      if (this.subscriptionHandle !== undefined) {
        this.subscriptionHandle.cancel();
        this.subscriptionHandle = undefined;
      }
    }
  }]);
  return WebOSAppStateManager;
}();

/***/ }),

/***/ "./src/engine/system/LoggerHandler.js":
/*!********************************************!*\
  !*** ./src/engine/system/LoggerHandler.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ LoggerHandler; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core */ "./src_core/index.js");






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var LoggerHandler = /*#__PURE__*/function () {
  function LoggerHandler() {
    _classCallCheck(this, LoggerHandler);
  }
  _createClass(LoggerHandler, [{
    key: "log",
    value: function log(level, tag, logs) {
      var timeString = core__WEBPACK_IMPORTED_MODULE_6__.DateUtils.formatDate();
      switch (level) {
        case 0:
          console.log(timeString + ' V/' + tag + ': ' + logs);
          break;
        case 1:
          console.log(timeString + ' D/' + tag + ': ' + logs);
          break;
        case 2:
          console.log(timeString + ' I/' + tag + ': ' + logs);
          break;
        case 3:
          console.log(timeString + ' W/' + tag + ': ' + logs);
          break;
        case 4:
          console.log(timeString + ' E/' + tag + ': ' + logs);
          break;
        default:
          console.log(timeString + ' ?/' + tag + ': ' + logs);
          break;
      }
    }
  }]);
  return LoggerHandler;
}();


/***/ }),

/***/ "./src/engine/system/RequestHandler.js":
/*!*********************************************!*\
  !*** ./src/engine/system/RequestHandler.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ RequestHandler; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.split.js */ "./node_modules/core-js/modules/es.string.split.js");
/* harmony import */ var core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_split_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.trim.js */ "./node_modules/core-js/modules/es.string.trim.js");
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core */ "./src_core/index.js");










function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkRequestHandler';
var RequestHandler = /*#__PURE__*/function () {
  function RequestHandler() {
    _classCallCheck(this, RequestHandler);
  }
  _createClass(RequestHandler, [{
    key: "get",
    value: function get(url, headers, timeout, callback) {
      var xhr = new XMLHttpRequest();
      var requestAborted = false;
      var headerMap = {};
      xhr.onreadystatechange = function () {
        if (xhr.readyState === xhr.DONE) {
          var _xhr$getAllResponseHe;
          var _headers = (_xhr$getAllResponseHe = xhr.getAllResponseHeaders()) === null || _xhr$getAllResponseHe === void 0 ? void 0 : _xhr$getAllResponseHe.trim().split(/[\r\n]+/);

          // Create a map of header names to values
          _headers === null || _headers === void 0 || _headers.forEach(function (line) {
            var parts = line.split(': ');
            var header = parts.shift().toLowerCase();
            headerMap[header] = parts.join(': ');
          });
          if (xhr.status >= 200 && xhr.status < 300) {
            callback({
              body: xhr.responseText,
              headers: headerMap,
              statusCode: xhr.status,
              message: xhr.statusText
            });
          } else if (xhr.status !== 0) {
            callback({
              body: '',
              headers: headerMap,
              statusCode: xhr.status,
              message: xhr.statusText
            });
          }
        }
      };
      xhr.onerror = function () {
        if (!requestAborted) {
          if (xhr.status <= 0) {
            core__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Request ended with error (CORS error, connection error...)');
          }
          callback({
            body: '',
            headers: headerMap,
            statusCode: xhr.status,
            message: xhr.statusText
          });
        }
      };
      xhr.ontimeout = function () {
        core__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Request ended with timeout (xhr)');
        callback({
          body: '',
          headers: headerMap,
          statusCode: xhr.status,
          message: xhr.statusText
        });
      };
      xhr.open('GET', url, true);
      xhr.timeout = timeout;
      this.deleteUnsafeHeaders(headers);
      for (var headerName in headers) {
        xhr.setRequestHeader(headerName, headers[headerName]);
      }
      xhr.send();
      setTimeout(function () {
        if (xhr.readyState !== xhr.DONE) {
          requestAborted = true;
          xhr.abort();
          core__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Request ended with timeout (setTimeout)');
          callback({
            body: '',
            headers: headerMap,
            statusCode: xhr.status,
            message: xhr.statusText
          });
        }
      }, timeout + 100);
    }
  }, {
    key: "post",
    value: function post(url, headers, body, timeout, callback) {
      var xhr = new XMLHttpRequest();
      var requestAborted = false;
      var headerMap = {};
      xhr.onreadystatechange = function () {
        if (xhr.readyState === xhr.DONE) {
          var _xhr$getAllResponseHe2;
          var _headers2 = (_xhr$getAllResponseHe2 = xhr.getAllResponseHeaders()) === null || _xhr$getAllResponseHe2 === void 0 ? void 0 : _xhr$getAllResponseHe2.trim().split(/[\r\n]+/);

          // Create a map of header names to values
          _headers2 === null || _headers2 === void 0 || _headers2.forEach(function (line) {
            var parts = line.split(': ');
            var header = parts.shift().toLowerCase();
            headerMap[header] = parts.join(': ');
          });
          if (xhr.status >= 200 && xhr.status < 300) {
            callback({
              body: xhr.responseText,
              headers: headerMap,
              statusCode: xhr.status,
              message: xhr.statusText
            });
          } else if (xhr.status !== 0) {
            callback({
              body: '',
              headers: headerMap,
              statusCode: xhr.status,
              message: xhr.statusText
            });
          }
        }
      };
      xhr.onerror = function () {
        if (!requestAborted) {
          if (xhr.status <= 0) {
            core__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Request ended with error (CORS error, connection error...)');
          }
          callback({
            body: '',
            headers: headerMap,
            statusCode: xhr.status,
            message: xhr.statusText
          });
        }
      };
      xhr.ontimeout = function () {
        core__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Request ended with timeout (xhr)');
        callback({
          body: '',
          headers: headerMap,
          statusCode: xhr.status,
          message: xhr.statusText
        });
      };
      xhr.open('POST', url, true);
      xhr.timeout = timeout;
      this.deleteUnsafeHeaders(headers);
      for (var headerName in headers) {
        xhr.setRequestHeader(headerName, headers[headerName]);
      }
      xhr.send(body);
      setTimeout(function () {
        if (xhr.readyState !== xhr.DONE) {
          requestAborted = true;
          xhr.abort();
          core__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Request ended with timeout (setTimeout)');
          callback({
            body: '',
            headers: headerMap,
            statusCode: xhr.status,
            message: xhr.statusText
          });
        }
      }, timeout + 100);
    }
  }, {
    key: "deleteUnsafeHeaders",
    value: function deleteUnsafeHeaders(headers) {
      if (typeof window === 'object' || typeof XMLHttpRequest === 'function') {
        delete headers['User-Agent'];
        delete headers['Accept-Charset'];
        delete headers['Accept-Encoding'];
        delete headers['Access-Control-Request-Headers'];
        delete headers['Access-Control-Request-Method'];
        delete headers['Connection'];
        delete headers['Content-Length'];
        delete headers['Cookie'];
        delete headers['Cookie2'];
        delete headers['Date'];
        delete headers['DNT'];
        delete headers['Expect'];
        delete headers['Host'];
        delete headers['Keep-Alive'];
        delete headers['Origin'];
        delete headers['Referer'];
        delete headers['TE'];
        delete headers['Trailer'];
        delete headers['Transfer-Encoding'];
        delete headers['Upgrade'];
        delete headers['Via'];
      }
    }
  }]);
  return RequestHandler;
}();


/***/ }),

/***/ "./src/engine/utils/NativeRequire.js":
/*!*******************************************!*\
  !*** ./src/engine/utils/NativeRequire.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   nativeMainRequire: function() { return /* binding */ nativeMainRequire; },
/* harmony export */   nativeRequire: function() { return /* binding */ nativeRequire; }
/* harmony export */ });
function nativeRequire(lib) {
  // eslint-disable-next-line no-eval
  return eval('require')(lib);
}
function nativeMainRequire(lib) {
  // eslint-disable-next-line no-eval
  return eval('require').main.require(lib);
}

/***/ }),

/***/ "./src_core/SmartLib.js":
/*!******************************!*\
  !*** ./src_core/SmartLib.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ SmartLib; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.weak-map.js */ "./node_modules/core-js/modules/es.weak-map.js");
/* harmony import */ var core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _request_RequestManager__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./request/RequestManager */ "./src_core/request/RequestManager.js");
/* harmony import */ var _Version__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Version */ "./src_core/Version.js");
/* harmony import */ var _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/ValidatorUtils */ "./src_core/utils/ValidatorUtils.js");
/* harmony import */ var _session_SessionManager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./session/SessionManager */ "./src_core/session/SessionManager.js");
/* harmony import */ var _session_ProxySessionHandler__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./session/ProxySessionHandler */ "./src_core/session/ProxySessionHandler.js");
/* harmony import */ var _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./service/AppStateManager */ "./src_core/service/AppStateManager.js");
/* harmony import */ var _ad_AdManager__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ad/AdManager */ "./src_core/ad/AdManager.js");
/* harmony import */ var _ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ad/InternalAdManager */ "./src_core/ad/InternalAdManager.js");
/* harmony import */ var _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./session/streaming/StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");
/* harmony import */ var _ad_AdSession__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ad/AdSession */ "./src_core/ad/AdSession.js");













function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }


// import PlayerManager from './analytics/player/PlayerManager';




// import NanoCDNHostManager from './network/NanoCDNHostManager';
// import MdnsManager from './network/MdnsManager';



// import DiversityManager from './DiversityManager';


// import OMSDKManager from './plugins/omsdk/OMSDKManager';

var TAG = 'BpkSmartLib';

/**
 * @module SmartLib
 */

/**
 * SmartLib
 * @alias SmartLib
 */
var _initialized = /*#__PURE__*/new WeakMap();
var _analyticsInitialized = /*#__PURE__*/new WeakMap();
var _parameters = /*#__PURE__*/new WeakMap();
var _setAnalyticsAddress = /*#__PURE__*/new WeakMap();
var _setNanoCDNHost = /*#__PURE__*/new WeakMap();
var _setBroadpeakDomainNames = /*#__PURE__*/new WeakMap();
var SmartLib = /*#__PURE__*/function () {
  function SmartLib() {
    var _this = this;
    _classCallCheck(this, SmartLib);
    _classPrivateFieldInitSpec(this, _initialized, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _analyticsInitialized, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _parameters, {
      writable: true,
      value: void 0
    });
    _defineProperty(this, "options", void 0);
    _defineProperty(this, "sessionManager", void 0);
    _defineProperty(this, "nanoCDNHostManager", void 0);
    _defineProperty(this, "adManager", void 0);
    _defineProperty(this, "internalAdManager", void 0);
    _defineProperty(this, "monitoringManager", void 0);
    _defineProperty(this, "handler", void 0);
    _defineProperty(this, "nanoCDNReceiver", void 0);
    _defineProperty(this, "nanoCDNHttpsEnabled", void 0);
    _classPrivateFieldInitSpec(this, _setAnalyticsAddress, {
      writable: true,
      value: function value(analyticsAddress) {
        if (typeof analyticsAddress === 'undefined' || analyticsAddress === null || analyticsAddress.length === 0) {
          _classPrivateFieldGet(_this, _parameters).analyticsAddress = '';
          return;
        }

        /* if (analyticsAddress.endsWith('/')) {
            this.#parameters.analyticsAddress = analyticsAddress;
        } else {
            this.#parameters.analyticsAddress = analyticsAddress + '/';
        }*/
        _classPrivateFieldGet(_this, _parameters).analyticsAddress = analyticsAddress;
      }
    });
    _classPrivateFieldInitSpec(this, _setNanoCDNHost, {
      writable: true,
      value: function value(nanoCDNHost) {
        if (typeof nanoCDNHost === 'undefined' || nanoCDNHost === null || nanoCDNHost.length === 0) {
          _classPrivateFieldGet(_this, _parameters).nanoCDNHost = '';
          return;
        }
        if (SmartLib.nanoCDNModule === undefined) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.w(TAG, 'Warning: nanoCDNHost is set while the module is not loaded.');
        }
        _classPrivateFieldGet(_this, _parameters).nanoCDNHost = nanoCDNHost.replace(/\s/g, '');
      }
    });
    _classPrivateFieldInitSpec(this, _setBroadpeakDomainNames, {
      writable: true,
      value: function value(broadpeakDomainNames) {
        if (typeof broadpeakDomainNames === 'undefined' || broadpeakDomainNames === null || broadpeakDomainNames.length === 0) {
          _classPrivateFieldGet(_this, _parameters).broadpeakDomainNames = '';
          return;
        }
        _classPrivateFieldGet(_this, _parameters).broadpeakDomainNames = broadpeakDomainNames.replace(/\s/g, '');
      }
    });
    _classPrivateFieldSet(this, _initialized, false);
    _classPrivateFieldSet(this, _analyticsInitialized, false);
    _classPrivateFieldSet(this, _parameters, {
      analyticsAddress: '',
      nanoCDNHost: '',
      broadpeakDomainNames: '',
      forceTeardown: SmartLib.FORCE_TEARDOWN_DEFAULT,
      uuid: '',
      userAgent: undefined,
      deviceType: '',
      customParameters: {}
    });
    this.options = new _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions();
    this.sessionManager = new _session_SessionManager__WEBPACK_IMPORTED_MODULE_17__["default"]();
    // move nanoCDNHostManager creation to init method because of module not yet loaded
    this.adManager = new _ad_AdManager__WEBPACK_IMPORTED_MODULE_20__.AdManager();
    this.internalAdManager = new _ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_21__["default"]();
  }

  /**
   * Init SmartLib for all use cases
   * Core, async nanoCDN resolution, register to app and system events
   *
   * <p>Note: To be called once when the app starts</p>
   *
   * @param analyticsAddress Address of the analytics server (i.e. "http://server-host:8080") or
   *                         a analytics server list (i.e. "http://server-host:8080,https://server-host-2,http://server-host-3") or
   *                         an empty string for no analytics server.
   *                         Add "nocache=" as prefix to prevent caching failed reports (i.e. "nocache=http://server-host:8080")
   * @param nanoCDNHost A nanoCDN host configuration. null/empty string "" or
   *                    "discover" to enable discovery on the local network or
   *                    "127.0.0.1" to enable discovery on the local device or
   *                    "*" to enable discovery on the local network and the local device or
   *                    a nanoCDN host list (i.e "192.168.1.1,192.168.1.10")
   * @param broadpeakDomainNames The domain name list used to identify Broadpeak sessions (i.e "cdn.broadpeak.com,cdn2.broadpeak.com")
   *                             "*" specific value is used to declare that all sessions are using a Broadpeak CDN
   *                             null/empty string "" is used to declare that all given url are not hosted on a Broadpeak CDN
   * @param arg4 Backward compatibility argument
   * @returns {boolean}
   */
  _createClass(SmartLib, [{
    key: "init",
    value: function init(analyticsAddress, nanoCDNHost, broadpeakDomainNames, arg4) {
      var _this$nanoCDNHostMana, _SmartLib$analyticsMo, _SmartLib$analyticsMo2, _SmartLib$nanoCDNModu, _SmartLib$diversityMo, _SmartLib$adModule, _SmartLib$analyticsMo3;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Init SmartLib...');
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Version: ' + _Version__WEBPACK_IMPORTED_MODULE_15__["default"]);
      if (_classPrivateFieldGet(this, _initialized) || _classPrivateFieldGet(this, _analyticsInitialized)) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: SmartLib already initialized, please use SmartLib.release() before initializing.');
        return false;
      }
      if (arg4 !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: this init method has been removed, please use SmartLib.init(analyticsAddress, nanoCDNHost, broadpeakDomainNames) instead.');
        return false;
      }
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeOrNullParameter(analyticsAddress, 'string', 'Error: analyticsAddress should be a string or null') || !_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeOrNullParameter(nanoCDNHost, 'string', 'Error: nanoCDNHost should be a string or null') || !_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeOrNullParameter(broadpeakDomainNames, 'string', 'Error: broadpeakDomainNames should be a string or null')) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: initialization aborted');
        return false;
      }

      // Set SmartLib parameters
      _classPrivateFieldGet(this, _setAnalyticsAddress).call(this, analyticsAddress);
      _classPrivateFieldGet(this, _setNanoCDNHost).call(this, nanoCDNHost);
      _classPrivateFieldGet(this, _setBroadpeakDomainNames).call(this, broadpeakDomainNames);
      this.setForceTeardown(SmartLib.FORCE_TEARDOWN_DEFAULT);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Parameters:analyticsAddress=' + analyticsAddress + ', nanoCDNHost=' + nanoCDNHost + ', broadpeakDomainNames=' + broadpeakDomainNames);

      // Init global managers
      if (SmartLib.nanoCDNModule !== undefined && this.nanoCDNHostManager === undefined) {
        this.nanoCDNHostManager = new SmartLib.nanoCDNModule.NanoCDNHostManager();
        if (this.nanoCDNReceiver !== undefined) {
          this.nanoCDNHostManager.registerNanoCDNReceiver(this.nanoCDNReceiver);
          this.nanoCDNReceiver = undefined;
        }
        if (this.nanoCDNHttpsEnabled !== undefined) {
          this.nanoCDNHostManager.setNanoCDNHttpsEnabled(this.nanoCDNHttpsEnabled);
          this.nanoCDNHttpsEnabled = undefined;
        }
      }
      this.sessionManager.init(this);
      (_this$nanoCDNHostMana = this.nanoCDNHostManager) === null || _this$nanoCDNHostMana === void 0 || _this$nanoCDNHostMana.init(this, nanoCDNHost);
      this.adManager.init(this);
      this.internalAdManager.init(this);
      if (SmartLib.monitoringModule !== undefined) {
        this.monitoringManager = new SmartLib.monitoringModule.RealTimeMonitoringManager(this);
      }

      // Attach native managers
      _request_RequestManager__WEBPACK_IMPORTED_MODULE_14__["default"].getInstance().attachInstance(this);
      // PlayerManager.getInstance().attachInstance(this);
      (_SmartLib$analyticsMo = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo === void 0 || _SmartLib$analyticsMo.CacheManager.getInstance().attachInstance(this);
      (_SmartLib$analyticsMo2 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo2 === void 0 || _SmartLib$analyticsMo2.PlayerManager.getInstance().attachInstance(this);
      (_SmartLib$nanoCDNModu = SmartLib.nanoCDNModule) === null || _SmartLib$nanoCDNModu === void 0 || _SmartLib$nanoCDNModu.MdnsManager.getInstance().attachInstance(this);
      (_SmartLib$diversityMo = SmartLib.diversityModule) === null || _SmartLib$diversityMo === void 0 || _SmartLib$diversityMo.DiversityManager.getInstance().attachInstance(this);
      // DiversityManager2.getInstance().attachInstance(this);
      // OMSDKManager.getInstance().attachInstance(this);
      (_SmartLib$adModule = SmartLib.adModule) === null || _SmartLib$adModule === void 0 || _SmartLib$adModule.OMSDKManager.getInstance().attachInstance(this);

      // Register to app events
      _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__["default"].getInstance().init(this);
      _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__["default"].getInstance().addListener(this.nanoCDNHostManager);

      // Clean cache
      (_SmartLib$analyticsMo3 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo3 === void 0 || _SmartLib$analyticsMo3.CacheManager.getInstance().clean();
      _classPrivateFieldSet(this, _initialized, true);
      return true;
    }

    /**
     * Init SmartLib for analytics only
     *
     * <p>Note: To be called once when the app starts</p>
     *
     * @param analyticsAddress Address of the analytics server (i.e. "http://server-host:8080") or
     *                         a analytics server list (i.e. "http://server-host:8080,https://server-host-2,http://server-host-3").
     *                         Add "nocache=" as prefix to prevent caching failed reports (i.e. "nocache=http://server-host:8080")
     * @returns {boolean}
     */
  }, {
    key: "initAnalytics",
    value: function initAnalytics(analyticsAddress) {
      var _SmartLib$analyticsMo4, _SmartLib$analyticsMo5, _SmartLib$adModule2, _SmartLib$analyticsMo6;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Init SmartLib analytics...');
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Version: ' + _Version__WEBPACK_IMPORTED_MODULE_15__["default"]);
      if (_classPrivateFieldGet(this, _analyticsInitialized) || _classPrivateFieldGet(this, _initialized)) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: SmartLib analytics already initialized, please use SmartLib.release() before initializing.');
        return false;
      }
      if (SmartLib.analyticsModule === undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: Analytics module not loaded, please import it.');
        return false;
      }
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeOrNullParameter(analyticsAddress, 'string', 'Error: analyticsAddress should be a string or null')) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: initialization aborted');
        return false;
      }

      // Set SmartLib parameters
      _classPrivateFieldGet(this, _setAnalyticsAddress).call(this, analyticsAddress);

      // Reset options
      this.options = new _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions();
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Parameters:analyticsAddress=' + analyticsAddress);

      // Init global managers
      this.sessionManager.init(this);
      this.adManager.init(this);
      this.internalAdManager.init(this);
      if (SmartLib.monitoringModule !== undefined) {
        this.monitoringManager = new SmartLib.monitoringModule.RealTimeMonitoringManager(this);
      }

      // Attach native managers
      _request_RequestManager__WEBPACK_IMPORTED_MODULE_14__["default"].getInstance().attachInstance(this);
      (_SmartLib$analyticsMo4 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo4 === void 0 || _SmartLib$analyticsMo4.CacheManager.getInstance().attachInstance(this);
      (_SmartLib$analyticsMo5 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo5 === void 0 || _SmartLib$analyticsMo5.PlayerManager.getInstance().attachInstance(this);
      (_SmartLib$adModule2 = SmartLib.adModule) === null || _SmartLib$adModule2 === void 0 || _SmartLib$adModule2.OMSDKManager.getInstance().attachInstance(this);

      // Register to app events
      _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__["default"].getInstance().init(this);

      // Clean cache
      (_SmartLib$analyticsMo6 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo6 === void 0 || _SmartLib$analyticsMo6.CacheManager.getInstance().clean();
      _classPrivateFieldSet(this, _analyticsInitialized, true);
      return true;
    }

    /**
     * @deprecated Use session.getURL(...)
     *
     * Create and start a StreamingSession with the getURL workflow
     * Note: Only one session can be used at a time
     * @param requestedURL
     * @param callback
     * @returns {Promise<string>|*}
     */
  }, {
    key: "getURL",
    value: function getURL(requestedURL, callback) {
      var _this$handler, _SmartLib$analyticsMo7;
      if (this.handler !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: A session is already running, please use SmartLib.stopStreamingSession(...) before. Stopping the current one...', this.handler.id);
        this.stopStreamingSession();
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'getURL with ' + requestedURL, (_this$handler = this.handler) === null || _this$handler === void 0 ? void 0 : _this$handler.id);
      if (callback === undefined) {
        callback = function callback() {};
      }
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeParameter(callback, 'function', 'Error: callback should be a function')) {
        return Promise.resolve('');
      }
      if (!_classPrivateFieldGet(this, _initialized)) {
        var _this$handler2;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.init(...) should be called prior to SmartLib.getURL(...)', (_this$handler2 = this.handler) === null || _this$handler2 === void 0 ? void 0 : _this$handler2.id);
        callback('');
        return Promise.resolve('');
      }
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeParameter(requestedURL, 'string', 'Error: requestedURL should be a string') || !_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].stringNonEmpty(requestedURL, 'Error: requestedURL is empty')) {
        callback('');
        return Promise.resolve('');
      }
      this.handler = this.sessionManager.createSessionHandler();
      this.handler.options = _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions.create(this.options);
      this.handler.playerAdapter = (_SmartLib$analyticsMo7 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo7 === void 0 ? void 0 : _SmartLib$analyticsMo7.PlayerManager.getInstance().getPlayerAdapter();
      this.handler.adSession = this.internalAdManager.adSession;
      if (this.internalAdManager.adSession !== undefined) {
        this.internalAdManager.adSession.handler = this.handler;
      }
      this.internalAdManager.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_23__.AdSession();
      this.internalAdManager.adSession.setEventCallbackEnabled(this.internalAdManager.eventCallbackEnabled);
      this.internalAdManager.adSession.setAdEventsListener(this.internalAdManager.adEventsListener);
      return this.handler.start(requestedURL, callback);
    }

    /**
     * @deprecated Use session.getQuery()
     *
     * Create a StreamingSession with the getQuery workflow
     * Note: Only one session can be used at a time
     * @returns {string|string|*|string}
     */
  }, {
    key: "getQuery",
    value: function getQuery() {
      var _SmartLib$analyticsMo8;
      if (this.handler !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: A session is already running, please use SmartLib.stopStreamingSession(...) before. Stopping the current one...');
        this.stopStreamingSession();
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'getQuery');
      if (!_classPrivateFieldGet(this, _initialized)) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.init(...) should be called prior to SmartLib.getQuery(...)');
        return '';
      }
      this.handler = this.sessionManager.createProxySessionHandler();
      this.handler.options = _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions.create(this.options);
      this.handler.playerAdapter = (_SmartLib$analyticsMo8 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo8 === void 0 ? void 0 : _SmartLib$analyticsMo8.PlayerManager.getInstance().getPlayerAdapter();
      return this.handler.getQuery();
    }

    /**
     * @deprecated Use session.startStreamingSession(...)
     *
     * Start a StreamingSession with the getQuery workflow
     * Note: Only one session can be used at a time
     * @param contentURL
     * @param redirectedURL
     * @returns {boolean}
     */
  }, {
    key: "startStreamingSession",
    value: function startStreamingSession(contentURL, redirectedURL) {
      var _this$handler3;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'startStreamingSession with ' + contentURL + ' and ' + redirectedURL, (_this$handler3 = this.handler) === null || _this$handler3 === void 0 ? void 0 : _this$handler3.id);
      if (!_classPrivateFieldGet(this, _initialized)) {
        var _this$handler4;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.init(...) should be called prior to SmartLib.startStreamingSession(...)', (_this$handler4 = this.handler) === null || _this$handler4 === void 0 ? void 0 : _this$handler4.id);
        return false;
      }
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeParameter(contentURL, 'string', 'Error: contentURL should be a string') || !_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeParameter(redirectedURL, 'string', 'Error: redirectedURL should be a string')) {
        return false;
      }
      if (this.handler === undefined) {
        var _this$handler5;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.getQuery() should be called prior to SmartLib.startStreamingSession(...)', (_this$handler5 = this.handler) === null || _this$handler5 === void 0 ? void 0 : _this$handler5.id);
        return false;
      }
      if (!(this.handler instanceof _session_ProxySessionHandler__WEBPACK_IMPORTED_MODULE_18__["default"])) {
        var _this$handler6;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.startStreamingSession(...) cannot be called with SmartLib.getURL(...)', (_this$handler6 = this.handler) === null || _this$handler6 === void 0 ? void 0 : _this$handler6.id);
        return false;
      }
      this.handler.start(contentURL, redirectedURL);
      return true;
    }

    /**
     * @deprecated Use session.stopStreamingSession(...)
     *
     * Stop the current StreamingSession
     * @param statusCode
     */
  }, {
    key: "stopStreamingSession",
    value: function stopStreamingSession(statusCode) {
      if (statusCode !== undefined) {
        var _this$handler7;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Stopping streaming session with statusCode ' + statusCode + '...', (_this$handler7 = this.handler) === null || _this$handler7 === void 0 ? void 0 : _this$handler7.id);
      } else {
        var _this$handler8;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Stopping streaming session...', (_this$handler8 = this.handler) === null || _this$handler8 === void 0 ? void 0 : _this$handler8.id);
      }
      var handler = this.handler;
      if (this.handler !== undefined) {
        this.handler.stop(statusCode);
        this.handler = undefined;
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.d(TAG, 'Stopping streaming session aborted, no session started');
      }
      return handler;
    }

    /**
     * Create a streaming session with options
     * This object has to be stored by the app, it handles the session lifecycle (request to the CDN, mABR availability, error handling, generic event reporting, advanced parameters)
     * @param options Optional. An option map that specify all customized values for that session. If a parameter is not set, the global value is used.
     * @return streaming session object
     */
  }, {
    key: "createStreamingSession",
    value: function createStreamingSession(options) {
      if (_classPrivateFieldGet(this, _initialized)) {
        var defaultOptionsUsed = options === undefined;
        if (defaultOptionsUsed) {
          options = this.options;
        }
        var streamingSession = this.sessionManager.createStreamingSession(this.options, options);
        if (!defaultOptionsUsed) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Creating streaming session with options...', streamingSession.id);
          options.printUpdates(TAG, '', streamingSession.id);
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Creating streaming session...', streamingSession.id);
        }
        return streamingSession;
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.init(...) should be called prior to SmartLib.createStreamingSession(...)');
      return undefined;
    }

    /**
     * Create an analytics session with options
     * This object has to be stored by the app, it handles the session lifecycle (player metrics, generic event reporting, custom parameters)
     * @param options An option map that specify all customized values for that session. If a parameter is not set, the global value is used.
     * @return analytics session object
     */
  }, {
    key: "createAnalyticsSession",
    value: function createAnalyticsSession(options) {
      if (_classPrivateFieldGet(this, _analyticsInitialized)) {
        var defaultOptionsUsed = options === undefined;
        if (defaultOptionsUsed) {
          options = this.options;
        }
        var streamingSession = this.sessionManager.createAnalyticsSession(this.options, options);
        if (!defaultOptionsUsed) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Creating analytics session with options...', streamingSession.id);
          options.printUpdates(TAG, '', streamingSession.id);
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Creating analytics session...', streamingSession.id);
        }
        return streamingSession;
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.initAnalytics(...) should be called prior to SmartLib.createAnalyticsSession(...)');
      return undefined;
    }

    /**
     * Release sessions, nanoCDN resolution, unregister to app and system events
     *
     * Note: To be called once when the app is destroyed or when SmartLib will be not used for a while
     * Note: SmartLib can be re-init if needed
     */
  }, {
    key: "release",
    value: function release() {
      if (_classPrivateFieldGet(this, _initialized)) {
        var _this$nanoCDNHostMana2, _this$monitoringManag, _SmartLib$diversityMo2, _SmartLib$nanoCDNModu2, _SmartLib$analyticsMo9, _SmartLib$analyticsMo10, _SmartLib$adModule3;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Releasing SmartLib...');
        this.stopStreamingSession();
        this.internalAdManager.release();
        this.adManager.release();
        (_this$nanoCDNHostMana2 = this.nanoCDNHostManager) === null || _this$nanoCDNHostMana2 === void 0 || _this$nanoCDNHostMana2.release();
        this.sessionManager.release();
        (_this$monitoringManag = this.monitoringManager) === null || _this$monitoringManag === void 0 || _this$monitoringManag.release();

        // TODO release other?
        // TODO attachInstance to undefined

        _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__["default"].getInstance().release();
        (_SmartLib$diversityMo2 = SmartLib.diversityModule) === null || _SmartLib$diversityMo2 === void 0 || _SmartLib$diversityMo2.DiversityManager.getInstance().release();
        (_SmartLib$nanoCDNModu2 = SmartLib.nanoCDNModule) === null || _SmartLib$nanoCDNModu2 === void 0 || _SmartLib$nanoCDNModu2.MdnsManager.getInstance().release();
        (_SmartLib$analyticsMo9 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo9 === void 0 || _SmartLib$analyticsMo9.PlayerManager.getInstance().release();
        (_SmartLib$analyticsMo10 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo10 === void 0 || _SmartLib$analyticsMo10.CacheManager.getInstance().release();
        _request_RequestManager__WEBPACK_IMPORTED_MODULE_14__["default"].getInstance().release();
        // DiversityManager2.getInstance().release();
        (_SmartLib$adModule3 = SmartLib.adModule) === null || _SmartLib$adModule3 === void 0 || _SmartLib$adModule3.OMSDKManager.getInstance().release(this);
        _classPrivateFieldSet(this, _initialized, false);
      }
      if (_classPrivateFieldGet(this, _analyticsInitialized)) {
        var _this$monitoringManag2, _SmartLib$analyticsMo11, _SmartLib$analyticsMo12, _SmartLib$adModule4;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.i(TAG, 'Releasing SmartLib analytics...');
        this.stopStreamingSession();
        this.internalAdManager.release();
        this.adManager.release();
        // this.nanoCDNHostManager?.release();
        this.sessionManager.release();
        (_this$monitoringManag2 = this.monitoringManager) === null || _this$monitoringManag2 === void 0 || _this$monitoringManag2.release();
        _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__["default"].getInstance().release();
        (_SmartLib$analyticsMo11 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo11 === void 0 || _SmartLib$analyticsMo11.PlayerManager.getInstance().release();
        (_SmartLib$analyticsMo12 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo12 === void 0 || _SmartLib$analyticsMo12.CacheManager.getInstance().release();
        _request_RequestManager__WEBPACK_IMPORTED_MODULE_14__["default"].getInstance().release();
        (_SmartLib$adModule4 = SmartLib.adModule) === null || _SmartLib$adModule4 === void 0 || _SmartLib$adModule4.OMSDKManager.getInstance().release(this);
        _classPrivateFieldSet(this, _analyticsInitialized, false);
      }

      // Reset options
      this.options = new _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions();
      _classPrivateFieldGet(this, _setAnalyticsAddress).call(this, '');
      _classPrivateFieldGet(this, _setNanoCDNHost).call(this, '');
      _classPrivateFieldGet(this, _setBroadpeakDomainNames).call(this, '');
    }

    /**
     * @deprecated Use session.attachPlayer(...)
     *
     * @param player
     * @param listener
     */
  }, {
    key: "attachPlayer",
    value: function attachPlayer(player, listener) {
      // TODO Session add to streamingsession
      if (player !== undefined) {
        var _SmartLib$analyticsMo13;
        (_SmartLib$analyticsMo13 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo13 === void 0 || _SmartLib$analyticsMo13.PlayerManager.getInstance().setPlayerAdapter(player);
        if (this.handler !== undefined) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: You cannot attach a player when a session is running, this player will be used for the next session.', this.handler.id);
        }
      } else {
        if (SmartLib.analyticsModule === undefined) {
          var _this$handler9;
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.w(TAG, 'Try to attach a player, but analytics module not loaded', (_this$handler9 = this.handler) === null || _this$handler9 === void 0 ? void 0 : _this$handler9.id);
        } else {
          var _this$handler10;
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.w(TAG, 'Try to attach a player, but it is not recognized', (_this$handler10 = this.handler) === null || _this$handler10 === void 0 ? void 0 : _this$handler10.id);
        }
      }
    }

    /**
     * @deprecated Use the session lifecycle
     *
     * @returns {boolean}
     */
  }, {
    key: "detachPlayer",
    value: function detachPlayer() {
      var _SmartLib$analyticsMo14;
      // TODO Session add to streamingsession
      if (this.handler !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: You cannot detach the player when a session is running', this.handler.id);
        return false;
      }
      (_SmartLib$analyticsMo14 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo14 === void 0 || _SmartLib$analyticsMo14.PlayerManager.getInstance().setPlayerAdapter(undefined);
      return true;
    }
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      return _classPrivateFieldGet(this, _initialized);
    }
  }, {
    key: "isAnalyticsInitialized",
    value: function isAnalyticsInitialized() {
      return _classPrivateFieldGet(this, _analyticsInitialized);
    }
  }, {
    key: "getMetricsManager",
    value: function getMetricsManager() {
      if (this.handler !== undefined) {
        return this.handler.metricsManager;
      }
      return undefined;
    }
  }, {
    key: "getListener",
    value: function getListener() {
      var _SmartLib$analyticsMo15;
      return (_SmartLib$analyticsMo15 = SmartLib.analyticsModule) === null || _SmartLib$analyticsMo15 === void 0 ? void 0 : _SmartLib$analyticsMo15.PlayerManager.getInstance().getPlayerAdapter();
    }

    /**
     * Return the SmartLib version
     * @returns {string} SmartLib version
     */
  }, {
    key: "getVersion",
    value: function getVersion() {
      return _Version__WEBPACK_IMPORTED_MODULE_15__["default"];
    }
  }, {
    key: "getParameters",
    value: function getParameters() {
      return _classPrivateFieldGet(this, _parameters);
    }

    /**
     * Allows SmartLib to have a unique identifier (account id, device id...)
     * This uuid will be sent to the analytics server
     * @param uuid uuid
     */
  }, {
    key: "setUUID",
    value: function setUUID(uuid) {
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeParameter(uuid, 'string', 'Error: uuid should be a string')) {
        return;
      }
      if (uuid.length > 36) {
        _classPrivateFieldGet(this, _parameters).uuid = uuid.substring(0, 36);
      } else {
        _classPrivateFieldGet(this, _parameters).uuid = uuid;
      }
    }

    /**
     * Set the user agent used by SmartLib
     *
     * @param userAgent User agent
     */
  }, {
    key: "setUserAgent",
    value: function setUserAgent(userAgent) {
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeOrUndefinedParameter(userAgent, 'string', 'Error: userAgent should be a string')) {
        return;
      }
      _classPrivateFieldGet(this, _parameters).userAgent = userAgent;
    }

    /**
     * Set the device type used by SmartLib
     *
     * @param deviceType Device type
     */
  }, {
    key: "setDeviceType",
    value: function setDeviceType(deviceType) {
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].typeParameter(deviceType, 'string', 'Error: deviceType should be a string')) {
        return;
      }
      _classPrivateFieldGet(this, _parameters).deviceType = deviceType;
      _service_AppStateManager__WEBPACK_IMPORTED_MODULE_19__["default"].getInstance().deviceType = deviceType;
    }

    /**
     * @deprecated Use session.setCustomParameter(...)
     *
     * Set a custom parameter to be added to the session report
     *
     * <p>Note: Only sent during non-Broadpeak sessions</p>
     *
     * @param name Parameter name
     * @param value Parameter value
     */
  }, {
    key: "setCustomParameter",
    value: function setCustomParameter(name, value) {
      if (typeof name === 'string') {
        _classPrivateFieldGet(this, _parameters).customParameters[name] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(String(value));
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Error: Only string values are accepted for custom parameters');
      }
    }

    /**
     * Reset custom parameters
     */
  }, {
    key: "resetCustomParameters",
    value: function resetCustomParameters() {
      _classPrivateFieldGet(this, _parameters).customParameters = {};
    }

    /**
     * @deprecated Use session.setOption(...)
     * @param forceTeardown
     */
  }, {
    key: "setForceTeardown",
    value: function setForceTeardown(forceTeardown) {
      if (typeof forceTeardown !== 'number') {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: parameter forceTeardown must be SmartLib.FORCE_TEARDOWN_DISABLED, SmartLib.FORCE_TEARDOWN_DEFAULT or SmartLib.FORCE_TEARDOWN_ENABLED');
        return;
      }
      if (forceTeardown >= 1) {
        _classPrivateFieldGet(this, _parameters).forceTeardown = SmartLib.FORCE_TEARDOWN_ENABLED;
      } else if (forceTeardown <= -1) {
        _classPrivateFieldGet(this, _parameters).forceTeardown = SmartLib.FORCE_TEARDOWN_DISABLED;
      } else {
        _classPrivateFieldGet(this, _parameters).forceTeardown = SmartLib.FORCE_TEARDOWN_DEFAULT;
      }
    }

    /**
     * Set the retry delay to resolve the nanoCDN
     *
     * Note: Only works with static nanoCDN hosts defined during init
     *
     * @param delayMs Delay between requests in milliseconds
     */
  }, {
    key: "setNanoCDNResolvingRetryDelay",
    value: function setNanoCDNResolvingRetryDelay(delayMs) {
      if (this.nanoCDNHostManager !== undefined) {
        var _this$nanoCDNHostMana3;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.v(TAG, 'Updating nanoCDN resolving retry asyncDelay to ' + delayMs + 'ms');
        (_this$nanoCDNHostMana3 = this.nanoCDNHostManager) === null || _this$nanoCDNHostMana3 === void 0 || _this$nanoCDNHostMana3.setNanoCDNResolvingRetryDelay(delayMs);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.e(TAG, 'Exception: Implementation error, SmartLib.init(...) should be called prior to SmartLib.setNanoCDNResolvingRetryDelay(...)');
      }
    }

    /**
     * Listen to nanoCDN resolution events
     * <code>
     * <p>receiver type: {</p>
     * <p>    onNanoCDNFound: function(jsonAccountId, nanoCDNHost) {</p>
     *
     * <p>    },</p>
     *
     * <p>    onNanoCDNNotFound: function(nanoCDNHost) {</p>
     *
     * <p>    },</p>
     *
     * <p>    onNanoCDNLost: function(nanoCDNHost) {</p>
     *
     * <p>    } }</p>
     * </code>
     *
     * The nanoCDNHost parameter is equal to the actual hostname/ip, or 'discover' is if using the auto-discovery
     *
     * @param receiver Receiver
     */
  }, {
    key: "registerNanoCDNReceiver",
    value: function registerNanoCDNReceiver(receiver) {
      if (this.nanoCDNHostManager !== undefined) {
        this.nanoCDNReceiver = undefined;
        this.nanoCDNHostManager.registerNanoCDNReceiver(receiver);
      } else {
        this.nanoCDNReceiver = receiver;
      }
    }

    /**
     * Enable https nanoCDN resolution
     * Enabled by default
     *
     * @param enabled enable https
     */
  }, {
    key: "setNanoCDNHttpsEnabled",
    value: function setNanoCDNHttpsEnabled(enabled) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.v(TAG, 'Updating nanoCDN https enabled to ' + enabled);
      if (this.nanoCDNHostManager !== undefined) {
        this.nanoCDNHttpsEnabled = undefined;
        this.nanoCDNHostManager.setNanoCDNHttpsEnabled(enabled);
      } else {
        this.nanoCDNHttpsEnabled = enabled;
      }
    }

    /**
     * Clear all resolved nanoCDN and restart resolving with all nanoCDN defined in nanoCDNHost init parameter
     */
  }, {
    key: "restartNanoCDNResolving",
    value: function restartNanoCDNResolving() {
      var _this$nanoCDNHostMana4;
      (_this$nanoCDNHostMana4 = this.nanoCDNHostManager) === null || _this$nanoCDNHostMana4 === void 0 || _this$nanoCDNHostMana4.restartNanoCDNResolving();
    }

    /**
     * Set an option at the global level.
     * It replaces the default value and will be used for the next createStreamingSession. Options are reset to default values at SmartLib init.
     * @param option The option to update. The list if available as static constants values in class StreamingSessionOptions.
     * @param value Option value
     */
  }, {
    key: "setOption",
    value: function setOption(option, value) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_13__.LoggerManager.d(TAG, 'Setting global option ' + _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions.optionToString(option) + ' to ' + _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_22__.StreamingSessionOptions.valueToString(option, value));
      this.options.set(option, value);
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!_classStaticPrivateFieldSpecGet(SmartLib, SmartLib, _instance)) {
        _classStaticPrivateFieldSpecSet(SmartLib, SmartLib, _instance, new SmartLib());
      }
      return _classStaticPrivateFieldSpecGet(SmartLib, SmartLib, _instance);
    }
  }]);
  return SmartLib;
}();
var _instance = {
  writable: true,
  value: void 0
};
_defineProperty(SmartLib, "FORCE_TEARDOWN_DISABLED", -1);
_defineProperty(SmartLib, "FORCE_TEARDOWN_DEFAULT", 0);
_defineProperty(SmartLib, "FORCE_TEARDOWN_ENABLED", 1);
/**
 * Session ends normally status code
 * @type {number}
 */
_defineProperty(SmartLib, "BPSessionEndsNormally", 200);
/**
 * Format not supported status code
 *
 * An error has occurred because the format is not supported by the player (i.e. HLS not supported)
 * @type {number}
 */
_defineProperty(SmartLib, "BPFormatNotSupportedError", 3001);
/**
 * Decoding error status code
 *
 * An error has occurred during the decoding of the video content. This error can be triggered during video playback.
 * @type {number}
 */
_defineProperty(SmartLib, "BPDecodingError", 3002);
/**
 * Networking error status code
 *
 * An error has occurred during the transmission/reception of data over the network.
 * @type {number}
 */
_defineProperty(SmartLib, "BPNetworkingError", 3003);
/**
 * Access right error status code
 *
 * An error has occurred because user does not have sufficient rights to display the video. This error is triggered when there is a problem to connect to the DRM server.
 * @type {number}
 */
_defineProperty(SmartLib, "BPAccessRightError", 3004);
/**
 * Unspecified error status code
 *
 * An unspecified error has occurred.
 * @type {number}
 */
_defineProperty(SmartLib, "BPUnspecifiedError", 3005);
_defineProperty(SmartLib, "analyticsModule", void 0);
_defineProperty(SmartLib, "adModule", void 0);
_defineProperty(SmartLib, "nanoCDNModule", void 0);
_defineProperty(SmartLib, "diversityModule", void 0);
_defineProperty(SmartLib, "monitoringModule", void 0);


/***/ }),

/***/ "./src_core/Version.js":
/*!*****************************!*\
  !*** ./src_core/Version.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
var version = '04.06.03.3fbd673';
/* harmony default export */ __webpack_exports__["default"] = (version);

/***/ }),

/***/ "./src_core/ad/AdManager.js":
/*!**********************************!*\
  !*** ./src_core/ad/AdManager.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdFriendlyObstructionPurpose: function() { return /* binding */ AdFriendlyObstructionPurpose; },
/* harmony export */   AdManager: function() { return /* binding */ AdManager; },
/* harmony export */   AdViewState: function() { return /* binding */ AdViewState; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../SmartLib */ "./src_core/SmartLib.js");
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



/** @module Ad */

/**
 * Ad events interface
 */
var AdEventsListener = /*#__PURE__*/function () {
  function AdEventsListener() {
    _classCallCheck(this, AdEventsListener);
  }
  _createClass(AdEventsListener, null, [{
    key: "onAdBreakBegin",
    value:
    // eslint-disable-line no-unused-vars
    /**
     * Triggered when an ad break begin
     * @param adBreakData Ad break data
     */
    function onAdBreakBegin(adBreakData) {}

    /**
     * Triggered when an ad begin
     * @param adData Ad data
     * @param adBreakData Ad break data
     */
  }, {
    key: "onAdBegin",
    value: function onAdBegin(adData, adBreakData) {}

    /**
     * Triggered when an ad is skippable
     * @param adData Ad data
     * @param adBreakData Ad break data
     * @param adSkippablePosition position in millis where skip becomes allowed
     * @param adEndPosition position in millis of ad end
     * @param adBreakEndPosition position in millis of ad break end
     */
  }, {
    key: "onAdSkippable",
    value: function onAdSkippable(adData, adBreakData, adSkippablePosition, adEndPosition, adBreakEndPosition) {}

    /**
     * Triggered when the ad is ended, not called if skipped
     * @param adData Ad data
     * @param adBreakData Ad break data
     */
  }, {
    key: "onAdEnd",
    value: function onAdEnd(adData, adBreakData) {}

    /**
     * Triggered when ad break ended, even in case of skipping
     * @param adBreakData Ad break data
     */
  }, {
    key: "onAdBreakEnd",
    value: function onAdBreakEnd(adBreakData) {}
  }]);
  return AdEventsListener;
}();
/**
 * Ad view state
 */
var AdViewState = /*#__PURE__*/function () {
  function AdViewState() {
    _classCallCheck(this, AdViewState);
  }
  _createClass(AdViewState, null, [{
    key: "isAdViewState",
    value: function isAdViewState(state) {
      switch (state) {
        case AdViewState.MINIMIZED:
          return true;
        case AdViewState.COLLAPSED:
          return true;
        case AdViewState.NORMAL:
          return true;
        case AdViewState.EXPANDED:
          return true;
        case AdViewState.FULLSCREEN:
          return true;
      }
      return false;
    }
  }]);
  return AdViewState;
}();

/**
 * Ad friendly obstruction purpose
 */
_defineProperty(AdViewState, "MINIMIZED", 'minimized');
_defineProperty(AdViewState, "COLLAPSED", 'collapsed');
_defineProperty(AdViewState, "NORMAL", 'normal');
_defineProperty(AdViewState, "EXPANDED", 'expanded');
_defineProperty(AdViewState, "FULLSCREEN", 'fullscreen');
var AdFriendlyObstructionPurpose = /*#__PURE__*/function () {
  function AdFriendlyObstructionPurpose() {
    _classCallCheck(this, AdFriendlyObstructionPurpose);
  }
  _createClass(AdFriendlyObstructionPurpose, null, [{
    key: "isAdFriendlyObstructionPurpose",
    value: function isAdFriendlyObstructionPurpose(purpose) {
      return purpose >= 0 && purpose <= 3;
    }
  }]);
  return AdFriendlyObstructionPurpose;
}();
_defineProperty(AdFriendlyObstructionPurpose, "VIDEO_CONTROLS", 0);
_defineProperty(AdFriendlyObstructionPurpose, "CLOSE_AD", 1);
_defineProperty(AdFriendlyObstructionPurpose, "NOT_VISIBLE", 2);
_defineProperty(AdFriendlyObstructionPurpose, "OTHER", 3);
var TAG = 'BpkAdMgr';

/**
 * Ad manager
 */
var AdManager = /*#__PURE__*/function () {
  function AdManager() {
    _classCallCheck(this, AdManager);
    _defineProperty(this, "smartLib", void 0);
    _defineProperty(this, "palSDK", void 0);
  } /* if (typeof goog === 'object') {
        // this.attachPALSDK(goog);
    }*/
  _createClass(AdManager, [{
    key: "init",
    value: function init(smartLib) {
      this.smartLib = smartLib;
    }
  }, {
    key: "release",
    value: function release() {}

    /**
     * Get ad manager version
     * @returns {string} ad manager version
     */
  }, {
    key: "getVersion",
    value: function getVersion() {
      return '04.05.00';
    }

    /**
     * Attach Google PAL SDK to SmartLib
     * @param sdk Google PAL SDK
     */
  }, {
    key: "attachPALSDK",
    value: function attachPALSDK(sdk) {
      if (typeof sdk['pal'] !== 'object') {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_7__.LoggerManager.e(TAG, 'Try to attach PAL SDK, but it is not recognized');
        return;
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_7__.LoggerManager.d(TAG, 'PAL SDK attached');
      this.palSDK = sdk;
    }

    /**
     * Set Google consent settings
     * It has to be set before PAL parameters
     * @param consentSettings consent settings object, please refer to the Google PAL documentation
     */
  }, {
    key: "setConsentSettings",
    value: function setConsentSettings(consentSettings) {
      this.smartLib.internalAdManager.setConsentSettings(consentSettings);
    }

    /**
     * Set Google PAL parameters
     * Global setting
     *
     * @param descriptionURL Google PAL parameter, set null if not used
     * @param partnerName Google PAL parameter, set null if not used
     * @param partnerVersion Google PAL parameter, set null if not used
     * @param omidVersion Google PAL parameter, set null if not used
     * @param playerType Google PAL parameter, set null if not used
     * @param playerVersion Google PAL parameter, set null if not used
     * @param ppid Google PAL parameter, set null if not used
     * @param videoPlayerHeight Google PAL parameter, set 0 if not used
     * @param videoPlayerWidth Google PAL parameter, set 0 if not used
     * @param willAdAutoPlay Google PAL parameter, set false if not used
     * @param willAdPlayMuted Google PAL parameter, set false if not used
     */
  }, {
    key: "setPalParameters",
    value: function setPalParameters(descriptionURL, partnerName, partnerVersion, omidVersion, playerType, playerVersion, ppid, videoPlayerHeight, videoPlayerWidth, willAdAutoPlay, willAdPlayMuted) {
      this.smartLib.internalAdManager.setPalParameters(descriptionURL, partnerName, partnerVersion, omidVersion, playerType, playerVersion, ppid, videoPlayerHeight, videoPlayerWidth, willAdAutoPlay, willAdPlayMuted);
    }

    /**
     * @deprecated Use session.activateAdvertising
     *
     * Activate advertising workflow (including analytics and tracking)
     * The method setAdParameter automatically calls this method
     */
  }, {
    key: "activateAdvertising",
    value: function activateAdvertising() {
      this.smartLib.internalAdManager.adSession.activateAdvertising();
    }

    /**
     * @deprecated Use session.setAdParameter
     *
     * This method set a parameter used for the ad insertion
     * Activate the advertising workflow
     * Session setting
     *
     * @param name  Parameter name
     * @param value Parameter value
     */
  }, {
    key: "setAdParameter",
    value: function setAdParameter(name, value) {
      this.smartLib.internalAdManager.adSession.setAdParameter(name, value);
    }

    /**
     * @deprecated Event stream workflow disabled
     *
     * If enabled (true by default), SmartLib will parse urls contained in:
     *   - Dash: urn:mpeg:dash:event:callback:2015
     *   - HLS: not implemented
     * Session setting
     *
     * @param eventCallbackEnabled enabled
     */
  }, {
    key: "setEventCallbackEnabled",
    value: function setEventCallbackEnabled(eventCallbackEnabled) {
      this.smartLib.internalAdManager.eventCallbackEnabled = eventCallbackEnabled;
      this.smartLib.internalAdManager.adSession.setEventCallbackEnabled(eventCallbackEnabled);
    }

    /**
     * @deprecated Use session.setAdEventsListener
     *
     * Set the ad events listener
     * Reset at SmartLib release
     * Session setting
     *
     * @param listener Ad events listener
     */
  }, {
    key: "setAdEventsListener",
    value: function setAdEventsListener(listener) {
      this.smartLib.internalAdManager.adEventsListener = listener;
      this.smartLib.internalAdManager.adSession.setAdEventsListener(listener);
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      return _SmartLib__WEBPACK_IMPORTED_MODULE_6__["default"].getInstance().adManager;
    }
  }]);
  return AdManager;
}();

/***/ }),

/***/ "./src_core/ad/AdSession.js":
/*!**********************************!*\
  !*** ./src_core/ad/AdSession.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdSession: function() { return /* binding */ AdSession; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _AdManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./AdManager */ "./src_core/ad/AdManager.js");








function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var TAG = 'BpkAdSession';
var AdSession = /*#__PURE__*/function () {
  function AdSession() {
    _classCallCheck(this, AdSession);
    _defineProperty(this, "handler", void 0);
    /**
     * Ad events listener
     */
    _defineProperty(this, "adEventsListener", void 0);
    /**
     * Ad data listener
     */
    _defineProperty(this, "adDataListener", void 0);
    /**
     * Ad session activated
     */
    _defineProperty(this, "adActivated", void 0);
    /**
     * Ad parameters
     */
    _defineProperty(this, "adParameters", void 0);
    /**
     * Enable event callback.
     * Enabled by default.
     *
     * Dash: filtering on urn:mpeg:dash:event:callback:2015
     * HLS: not implemented
     */
    _defineProperty(this, "eventCallbackEnabled", void 0);
    /**
     * Id or view object
     */
    _defineProperty(this, "adView", void 0);
    /**
     * State of the ad view
     * @see AdViewState
     */
    _defineProperty(this, "adViewState", void 0);
    /**
     * List of friendly obstructions views with info
     * {view, purpose, reason}
     */
    _defineProperty(this, "adFriendlyObstructionViews", void 0);
    /**
     * Custom reference used by the OM SDK
     */
    _defineProperty(this, "adCustomReference", void 0);
    /**
     * Array of ad verification data used bu the OM SDK
     * {verificationVendor, verificationURL, verificationParameters}
     */
    _defineProperty(this, "adVerificationData", void 0);
    _defineProperty(this, "adPalSession", void 0);
    this.adEventsListener = undefined;
    this.adActivated = false;
    this.adParameters = {};
    this.eventCallbackEnabled = true;
    this.adView = undefined;
    this.adViewState = _AdManager__WEBPACK_IMPORTED_MODULE_9__.AdViewState.NORMAL;
    this.adFriendlyObstructionViews = [];
    this.adCustomReference = '';
    this.adVerificationData = [];
  }
  _createClass(AdSession, [{
    key: "setAdEventsListener",
    value: function setAdEventsListener(adEventsListener) {
      var _this$handler;
      this.adEventsListener = adEventsListener;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Ad events listener ' + (adEventsListener !== undefined ? 'set' : 'unset'), (_this$handler = this.handler) === null || _this$handler === void 0 ? void 0 : _this$handler.id);
    }
  }, {
    key: "setAdDataListener",
    value: function setAdDataListener(adDataListener) {
      var _this$handler2;
      this.adDataListener = adDataListener;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Ad data listener ' + (adDataListener !== undefined ? 'set' : 'unset'), (_this$handler2 = this.handler) === null || _this$handler2 === void 0 ? void 0 : _this$handler2.id);
    }
  }, {
    key: "activateAdvertising",
    value: function activateAdvertising() {
      if (this.adActivated !== true) {
        var _this$handler3;
        this.adActivated = true;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Ad session activated', (_this$handler3 = this.handler) === null || _this$handler3 === void 0 ? void 0 : _this$handler3.id);
      }
    }
  }, {
    key: "setAdParameter",
    value: function setAdParameter(name, value) {
      var _this$handler4;
      this.activateAdvertising();
      this.adParameters[name] = String(value);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Adding parameter ' + name + '=' + value, (_this$handler4 = this.handler) === null || _this$handler4 === void 0 ? void 0 : _this$handler4.id);
    }
  }, {
    key: "setEventCallbackEnabled",
    value: function setEventCallbackEnabled(eventCallbackEnabled) {
      this.eventCallbackEnabled = eventCallbackEnabled;
    }
  }, {
    key: "isAdActivated",
    value: function isAdActivated() {
      return this.adActivated === true;
    }
  }, {
    key: "getAdAllowedQuery",
    value: function getAdAllowedQuery() {
      var _this = this;
      var keys = ['ad_allowed', 'adallowed'];
      var values = ['0', 'false'];
      var adAllowed = true;
      Object.keys(this.adParameters).forEach(function (key) {
        if (keys.indexOf(key.toLowerCase()) >= 0 && values.indexOf(_this.adParameters[key].toLowerCase()) >= 0) {
          adAllowed = false;
        }
      });
      return adAllowed;
    }
  }, {
    key: "resetAdParameters",
    value: function resetAdParameters() {
      this.adParameters = {};
    }
  }, {
    key: "hasAdParameters",
    value: function hasAdParameters() {
      return Object.keys(this.adParameters).length > 0;
    }
  }, {
    key: "onDashEvent",
    value: function onDashEvent(data) {
      if (!this.isAdActivated()) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Event received but ad not enabled (advertising not activated)', this.handler.id);
        return;
      }
      if (this.eventCallbackEnabled) {
        /* if (this.handler.adTrackingManager?.firstFileReceived === false) {
            let url = data;
             // Parse CDATA block
            if (url.indexOf('<![CDATA[') !== -1 && url.indexOf(']]>') !== -1) {
                url = url.trim().replace(/^(\/\/\s*)?<!\[CDATA\[|(\/\/\s*)?\]\]>$/g, '');
            }
             // Patch bad Exoplayer url decode (&amp; to &&;)
            url = url.replace(/&&;/g, '&').trim();
             if (SmartLib.adModule !== undefined) {
                const event = SmartLib.adModule.AdEventFactory.parseDashEvent(this.handler, url);
                event.tracker.process();
            } else {
                LoggerManager.d(TAG, 'Event received but ad module not loaded', this.handler.id);
            }
        } else {
            LoggerManager.d(TAG, 'Event received but legacy mode not enabled', this.handler.id);
        }*/
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Event received but legacy mode has been deprecated', this.handler.id);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Event received but callbacks are disabled', this.handler.id);
      }
    }
  }]);
  return AdSession;
}();

/***/ }),

/***/ "./src_core/ad/InternalAdManager.js":
/*!******************************************!*\
  !*** ./src_core/ad/InternalAdManager.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ InternalAdManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _pal_AdPalSessionRequest__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pal/AdPalSessionRequest */ "./src_core/ad/pal/AdPalSessionRequest.js");
/* harmony import */ var _AdSession__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./AdSession */ "./src_core/ad/AdSession.js");






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var TAG = 'BpkInternalAdMgr';
var InternalAdManager = /*#__PURE__*/function () {
  function InternalAdManager() {
    _classCallCheck(this, InternalAdManager);
    _defineProperty(this, "smartLib", void 0);
    /**
     * AdManager initialized flag
     */
    _defineProperty(this, "initialized", void 0);
    /**
     * Google PAL manager
     */
    _defineProperty(this, "adPalManager", void 0);
    /**
     * OM partner name
     */
    _defineProperty(this, "omPartnerName", void 0);
    /**
     * OM partner version
     */
    _defineProperty(this, "omPartnerVersion", void 0);
    /**
     * First nonce request
     * Used when setPalParameters called
     */
    _defineProperty(this, "firstAdPalSessionRequest", void 0);
    /**
     * Can request nonces flag
     * Set to true once setPalParameters called
     */
    _defineProperty(this, "palSessionEnabled", false);
    /**
     * Ad session data
     */
    _defineProperty(this, "adSession", void 0);
    /**
     * Enable event callback.
     * Enabled by default.
     *
     * Dash: filtering on urn:mpeg:dash:event:callback:2015
     * HLS: not implemented
     */
    _defineProperty(this, "eventCallbackEnabled", void 0);
    /**
     * Ad events listener
     */
    _defineProperty(this, "adEventsListener", void 0);
    this.initialized = false;
    this.palSessionEnabled = false;
    this.adSession = new _AdSession__WEBPACK_IMPORTED_MODULE_8__.AdSession();
    this.eventCallbackEnabled = true;
    this.adEventsListener = undefined;
  }
  _createClass(InternalAdManager, [{
    key: "init",
    value: function init(smartLib) {
      this.smartLib = smartLib;
      if (!this.initialized) {
        this.initialized = true;
        this.adSession = new _AdSession__WEBPACK_IMPORTED_MODULE_8__.AdSession();
        this.eventCallbackEnabled = true;
        this.adEventsListener = undefined;
        this.omPartnerName = 'Broadpeak_tv';
        this.omPartnerVersion = smartLib.adManager.getVersion();
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Ad manager version: ' + this.omPartnerVersion);
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Ad manager loaded');
      }
    }
  }, {
    key: "setPalManager",
    value: function setPalManager(palManager) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Native PAL manager registered');
      this.adPalManager = palManager;
    }
  }, {
    key: "requestAdPalSession",
    value: function requestAdPalSession() {
      // if first request during init
      var request = this.firstAdPalSessionRequest;
      if (request !== undefined && request.adPalSession === undefined && request.active === true && request.timeout === false) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Using first nonce request...');
        this.firstAdPalSessionRequest = undefined;
        return request;
      }
      this.firstAdPalSessionRequest = undefined;

      // create a new request
      request = new _pal_AdPalSessionRequest__WEBPACK_IMPORTED_MODULE_7__["default"](this.adPalManager);
      if (this.initialized && this.palSessionEnabled) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Generating nonce...');
        request.generateAdPalSession();
        if (this.adPalManager === undefined) {
          // request.setNonce(undefined);
          request.setAdPalSession(undefined);
        }
      } else {
        // request.setNonce(undefined);
        request.setAdPalSession(undefined);
      }
      return request;
    }
  }, {
    key: "release",
    value: function release() {
      this.initialized = false;
      this.palSessionEnabled = false;
      this.adSession = new _AdSession__WEBPACK_IMPORTED_MODULE_8__.AdSession();
      this.eventCallbackEnabled = true;
      this.adEventsListener = undefined;
      if (this.firstAdPalSessionRequest !== undefined) {
        // this.firstAdPalSessionRequest.setNonce(undefined);
        this.firstAdPalSessionRequest.setAdPalSession(undefined);
        this.firstAdPalSessionRequest = undefined;
      }
      if (this.adPalManager !== undefined) {
        // this.adPalManager.unregisterPalManagerCallback(undefined);
        this.adPalManager.reset();
        // this.adPalManager = undefined;
      }
    }
  }, {
    key: "setConsentSettings",
    value: function setConsentSettings(consentSettings) {
      var _this$adPalManager;
      (_this$adPalManager = this.adPalManager) === null || _this$adPalManager === void 0 || _this$adPalManager.setConsentSettings(consentSettings);
    }

    /**
     * Set Google PAL parameters
     *
     * @param descriptionURL Google PAL parameter, set undefined if not used
     * @param partnerName Google PAL parameter, set undefined if not used
     * @param partnerVersion Google PAL parameter, set undefined if not used
     * @param omidVersion Google PAL parameter, set undefined if not used
     * @param playerType Google PAL parameter, set undefined if not used
     * @param playerVersion Google PAL parameter, set undefined if not used
     * @param ppid Google PAL parameter, set undefined if not used
     * @param videoPlayerHeight Google PAL parameter, set 0 if not used
     * @param videoPlayerWidth Google PAL parameter, set 0 if not used
     * @param willAdAutoPlay Google PAL parameter, set false if not used
     * @param willAdPlayMuted Google PAL parameter, set false if not used
     */
  }, {
    key: "setPalParameters",
    value: function setPalParameters(descriptionURL, partnerName, partnerVersion, omidVersion, playerType, playerVersion, ppid, videoPlayerHeight, videoPlayerWidth, willAdAutoPlay, willAdPlayMuted) {
      if (this.adPalManager !== undefined) {
        if (descriptionURL !== undefined) {
          this.adPalManager.setDescriptionURL(descriptionURL);
        }
        if (partnerName !== undefined && partnerVersion !== undefined) {
          this.adPalManager.setOmidPartner(partnerName, partnerVersion);
        }
        if (omidVersion !== undefined) {
          this.adPalManager.setOmidVersion(omidVersion);
        }
        if (playerType !== undefined) {
          this.adPalManager.setPlayerType(playerType);
        }
        if (playerVersion !== undefined) {
          this.adPalManager.setPlayerVersion(playerVersion);
        }
        if (ppid !== undefined) {
          this.adPalManager.setPpid(ppid);
        }
        if (videoPlayerHeight !== 0) {
          this.adPalManager.setVideoPlayerHeight(videoPlayerHeight);
        }
        if (videoPlayerWidth !== 0) {
          this.adPalManager.setVideoPlayerWidth(videoPlayerWidth);
        }
        this.adPalManager.setWillAdAutoPlay(willAdAutoPlay);
        this.adPalManager.setWillAdPlayMuted(willAdPlayMuted);
        if (!this.palSessionEnabled) {
          this.palSessionEnabled = true;
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.d(TAG, 'Generating first nonce...');
          this.firstAdPalSessionRequest = new _pal_AdPalSessionRequest__WEBPACK_IMPORTED_MODULE_7__["default"](this.adPalManager);
          this.firstAdPalSessionRequest.generateAdPalSession();
        }
      }
    }
  }]);
  return InternalAdManager;
}();
_defineProperty(InternalAdManager, "AD_NONCE_QUERY_PARAMETER", 'paln');


/***/ }),

/***/ "./src_core/ad/pal/AdPalManager.js":
/*!*****************************************!*\
  !*** ./src_core/ad/pal/AdPalManager.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AdPalManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../index */ "./src_core/index.js");






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkAdPalMgr';
var AdPalManager = /*#__PURE__*/function () {
  function AdPalManager() {
    _classCallCheck(this, AdPalManager);
  }
  _createClass(AdPalManager, [{
    key: "setConsentSettings",
    value: function setConsentSettings(consentSettings) {
      _index__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'setConsentSettings not implemented');
    }
  }, {
    key: "registerPalManagerCallback",
    value: function registerPalManagerCallback(callback) {
      _index__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'registerPalManagerCallback not implemented');
    }
  }, {
    key: "unregisterPalManagerCallback",
    value: function unregisterPalManagerCallback() {
      _index__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'unregisterPalManagerCallback not implemented');
    }
  }, {
    key: "generateAdPalSession",
    value: function generateAdPalSession(callback) {
      _index__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'generateAdPalSession not implemented');
    }
  }, {
    key: "reset",
    value: function reset() {
      _index__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'reset not implemented');
    }
  }, {
    key: "release",
    value: function release() {}
  }, {
    key: "setValue",
    value: function setValue(methodName, value1, value2) {
      _index__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'setValue not implemented');
    }
  }, {
    key: "setDescriptionURL",
    value: function setDescriptionURL(var1) {
      this.setValue('setDescriptionURL', var1);
    }
  }, {
    key: "setOmidPartner",
    value: function setOmidPartner(var1, var2) {
      this.setValue('setOmidPartner', var1, var2);
    }
  }, {
    key: "setOmidVersion",
    value: function setOmidVersion(var1) {
      this.setValue('setOmidVersion', var1);
    }
  }, {
    key: "setPlayerType",
    value: function setPlayerType(var1) {
      this.setValue('setPlayerType', var1);
    }
  }, {
    key: "setPlayerVersion",
    value: function setPlayerVersion(var1) {
      this.setValue('setPlayerVersion', var1);
    }
  }, {
    key: "setPpid",
    value: function setPpid(var1) {
      this.setValue('setPpid', var1);
    }
  }, {
    key: "setVideoPlayerHeight",
    value: function setVideoPlayerHeight(var1) {
      this.setValue('setVideoPlayerHeight', var1);
    }
  }, {
    key: "setVideoPlayerWidth",
    value: function setVideoPlayerWidth(var1) {
      this.setValue('setVideoPlayerWidth', var1);
    }
  }, {
    key: "setWillAdAutoPlay",
    value: function setWillAdAutoPlay(var1) {
      this.setValue('setWillAdAutoPlay', var1);
    }
  }, {
    key: "setWillAdPlayMuted",
    value: function setWillAdPlayMuted(var1) {
      this.setValue('setWillAdPlayMuted', var1);
    }
  }]);
  return AdPalManager;
}();


/***/ }),

/***/ "./src_core/ad/pal/AdPalSession.js":
/*!*****************************************!*\
  !*** ./src_core/ad/pal/AdPalSession.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdPalSession: function() { return /* binding */ AdPalSession; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkAdPalSession';
var AdPalSession = /*#__PURE__*/function () {
  function AdPalSession() {
    _classCallCheck(this, AdPalSession);
  }
  _createClass(AdPalSession, [{
    key: "getNonce",
    value: function getNonce() {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'getNonce not implemented');
      return '';
    }
  }, {
    key: "sendAdClick",
    value: function sendAdClick() {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'sendAdClick not implemented');
    }
  }, {
    key: "sendAdImpression",
    value: function sendAdImpression() {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'sendAdImpression not implemented');
    }
  }, {
    key: "sendPlaybackStart",
    value: function sendPlaybackStart() {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'sendPlaybackStart not implemented');
    }
  }, {
    key: "sendPlaybackEnd",
    value: function sendPlaybackEnd() {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'sendPlaybackEnd not implemented');
    }
  }, {
    key: "sendTouch",
    value: function sendTouch(e) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_6__.LoggerManager.e(TAG, 'sendTouch not implemented');
    }
  }, {
    key: "setAdView",
    value: function setAdView(view) {}
  }]);
  return AdPalSession;
}();

/***/ }),

/***/ "./src_core/ad/pal/AdPalSessionRequest.js":
/*!************************************************!*\
  !*** ./src_core/ad/pal/AdPalSessionRequest.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AdPalSessionRequest; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _service_JobManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../service/JobManager */ "./src_core/service/JobManager.js");
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");







function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var TAG = 'BpkAdPalSessionRequest';
var AdPalSessionRequest = /*#__PURE__*/function () {
  function AdPalSessionRequest(adPalManager) {
    _classCallCheck(this, AdPalSessionRequest);
    // in ms
    _defineProperty(this, "active", void 0);
    _defineProperty(this, "timeout", void 0);
    _defineProperty(this, "adPalManager", void 0);
    _defineProperty(this, "adPalSession", void 0);
    _defineProperty(this, "generatingAdPalSession", void 0);
    _defineProperty(this, "waitNonceResolveCallback", void 0);
    this.active = true;
    this.timeout = false;
    this.adPalManager = adPalManager;
    this.generatingAdPalSession = false;
  }
  _createClass(AdPalSessionRequest, [{
    key: "setAdPalSession",
    value: function setAdPalSession(adPalSession) {
      this.adPalSession = adPalSession;
      this.active = false;
    }
  }, {
    key: "generateAdPalSession",
    value: function generateAdPalSession() {
      var _this = this;
      var timeoutTask = function timeoutTask() {
        // timeout callback
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'Nonce generation timeout');
        _this.timeout = true;
        if (_this.waitNonceResolveCallback !== undefined) {
          _this.setAdPalSession(undefined);
          _this.waitNonceResolveCallback(undefined);
        }
      };
      _service_JobManager__WEBPACK_IMPORTED_MODULE_7__["default"].getInstance().asyncNonce(AdPalSessionRequest.TIMEOUT_DELAY, function (result) {
        // result callback
        var adPalSession = result['adPalSession'];
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'AdPalSession async nonce=' + (adPalSession === null || adPalSession === void 0 ? void 0 : adPalSession.getNonce()));
        _this.setAdPalSession(adPalSession);
      }, timeoutTask, function () {
        // legacy callback
        // LoggerManager.d(TAG, 'generateAdPalSession request');
        _this.generatingAdPalSession = true;
        var task = setTimeout(timeoutTask, AdPalSessionRequest.TIMEOUT_DELAY);
        _this.adPalManager.generateAdPalSession(function (adPalSession) {
          clearTimeout(task);

          // LoggerManager.d(TAG, 'generateAdPalSession result with timeout=' + this.timeout + ' callback=' + (this.waitNonceResolveCallback !== undefined));
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'AdPalSession nonce=' + (adPalSession === null || adPalSession === void 0 ? void 0 : adPalSession.getNonce()));
          _this.setAdPalSession(adPalSession);
          if (_this.waitNonceResolveCallback !== undefined && _this.timeout === false) {
            _this.waitNonceResolveCallback(adPalSession);
          } else if (_this.waitNonceResolveCallback !== undefined && _this.timeout === true) {
            _this.waitNonceResolveCallback(undefined);
          }
        });
      });
    }
  }, {
    key: "getAdPalSession",
    value: function getAdPalSession() {
      var _this2 = this;
      if (this.adPalSession === undefined && this.active === true) {
        return new Promise(function (resolve, reject) {
          _service_JobManager__WEBPACK_IMPORTED_MODULE_7__["default"].getInstance().waitNonce(AdPalSessionRequest.TIMEOUT_DELAY, function (result) {
            // result callback
            var adPalSession = result['adPalSession'];
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'AdPalSession nonce=' + (adPalSession === null || adPalSession === void 0 ? void 0 : adPalSession.getNonce()));
            _this2.setAdPalSession(adPalSession);
            resolve(_this2.adPalSession);
          }, function () {
            // LoggerManager.d(TAG, 'getAdPalSession timeout (1)');

            // timeout callback
            _this2.active = false;
            _this2.timeout = true;
            _this2.waitNonceResolveCallback = undefined;
            resolve(_this2.adPalSession);
          }, function () {
            // legacy callback
            // LoggerManager.d(TAG, 'getAdPalSession request generatingAdPalSession=' + this.generatingAdPalSession);

            if (_this2.generatingAdPalSession === true) {
              // result will be send in generateAdPalSession method
              _this2.waitNonceResolveCallback = resolve;
              // LoggerManager.d(TAG, 'getAdPalSession waitNonceResolveCallback set');
            } else {
              // if generateAdPalSession not called
              _this2.waitNonceResolveCallback = resolve;
              _this2.generateAdPalSession();
            }
          });
        });
      }

      // LoggerManager.d(TAG, 'getAdPalSession result (not waiting)');
      return new Promise(function (resolve, reject) {
        resolve(_this2.adPalSession);
      });
    }
  }]);
  return AdPalSessionRequest;
}();
_defineProperty(AdPalSessionRequest, "TIMEOUT_DELAY", 5000);


/***/ }),

/***/ "./src_core/index.js":
/*!***************************!*\
  !*** ./src_core/index.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdFriendlyObstructionPurpose: function() { return /* reexport safe */ _ad_AdManager__WEBPACK_IMPORTED_MODULE_5__.AdFriendlyObstructionPurpose; },
/* harmony export */   AdManager: function() { return /* reexport safe */ _ad_AdManager__WEBPACK_IMPORTED_MODULE_5__.AdManager; },
/* harmony export */   AdPalManager: function() { return /* reexport safe */ _ad_pal_AdPalManager__WEBPACK_IMPORTED_MODULE_6__["default"]; },
/* harmony export */   AdPalSession: function() { return /* reexport safe */ _ad_pal_AdPalSession__WEBPACK_IMPORTED_MODULE_7__.AdPalSession; },
/* harmony export */   AdViewState: function() { return /* reexport safe */ _ad_AdManager__WEBPACK_IMPORTED_MODULE_5__.AdViewState; },
/* harmony export */   AppStateManager: function() { return /* reexport safe */ _service_AppStateManager__WEBPACK_IMPORTED_MODULE_4__["default"]; },
/* harmony export */   DateUtils: function() { return /* reexport safe */ _utils_DateUtils__WEBPACK_IMPORTED_MODULE_11__["default"]; },
/* harmony export */   JobManager: function() { return /* reexport safe */ _service_JobManager__WEBPACK_IMPORTED_MODULE_3__["default"]; },
/* harmony export */   LogLevel: function() { return /* reexport safe */ _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_2__.LogLevel; },
/* harmony export */   LoggerManager: function() { return /* reexport safe */ _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_2__.LoggerManager; },
/* harmony export */   RequestManager: function() { return /* reexport safe */ _request_RequestManager__WEBPACK_IMPORTED_MODULE_1__["default"]; },
/* harmony export */   SmartLib: function() { return /* reexport safe */ _SmartLib_js__WEBPACK_IMPORTED_MODULE_0__["default"]; },
/* harmony export */   StreamingSession: function() { return /* reexport safe */ _session_streaming_StreamingSession__WEBPACK_IMPORTED_MODULE_8__.StreamingSession; },
/* harmony export */   StreamingSessionOptions: function() { return /* reexport safe */ _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_9__.StreamingSessionOptions; },
/* harmony export */   StreamingSessionResult: function() { return /* reexport safe */ _session_streaming_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_10__.StreamingSessionResult; }
/* harmony export */ });
/* harmony import */ var _SmartLib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SmartLib.js */ "./src_core/SmartLib.js");
/* harmony import */ var _request_RequestManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request/RequestManager */ "./src_core/request/RequestManager.js");
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _service_JobManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./service/JobManager */ "./src_core/service/JobManager.js");
/* harmony import */ var _service_AppStateManager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./service/AppStateManager */ "./src_core/service/AppStateManager.js");
/* harmony import */ var _ad_AdManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ad/AdManager */ "./src_core/ad/AdManager.js");
/* harmony import */ var _ad_pal_AdPalManager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ad/pal/AdPalManager */ "./src_core/ad/pal/AdPalManager.js");
/* harmony import */ var _ad_pal_AdPalSession__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ad/pal/AdPalSession */ "./src_core/ad/pal/AdPalSession.js");
/* harmony import */ var _session_streaming_StreamingSession__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./session/streaming/StreamingSession */ "./src_core/session/streaming/StreamingSession.js");
/* harmony import */ var _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session/streaming/StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");
/* harmony import */ var _session_streaming_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./session/streaming/StreamingSessionResult */ "./src_core/session/streaming/StreamingSessionResult.js");
/* harmony import */ var _utils_DateUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/DateUtils */ "./src_core/utils/DateUtils.js");














/***/ }),

/***/ "./src_core/network/KeepAliveManager.js":
/*!**********************************************!*\
  !*** ./src_core/network/KeepAliveManager.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BroadpeakCDNKeepaliveManager: function() { return /* binding */ BroadpeakCDNKeepaliveManager; },
/* harmony export */   KeepAliveManager: function() { return /* binding */ KeepAliveManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.trim.js */ "./node_modules/core-js/modules/es.string.trim.js");
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ "./node_modules/core-js/modules/es.object.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.reflect.to-string-tag.js */ "./node_modules/core-js/modules/es.reflect.to-string-tag.js");
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.reflect.construct.js */ "./node_modules/core-js/modules/es.reflect.construct.js");
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _request_RequestManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../request/RequestManager */ "./src_core/request/RequestManager.js");
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _service_JobManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../service/JobManager */ "./src_core/service/JobManager.js");
/* harmony import */ var _session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../session/streaming/StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");










function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var TAG = 'BpkKeepAliveMgr';
var KeepAliveManager = /*#__PURE__*/function () {
  function KeepAliveManager(handler) {
    _classCallCheck(this, KeepAliveManager);
    _defineProperty(this, "handler", void 0);
    _defineProperty(this, "active", void 0);
    /**
     * Delay between keepalive requests
     */
    _defineProperty(this, "delay", void 0);
    _defineProperty(this, "job", void 0);
    this.handler = handler;
    this.active = true;
    this.delay = handler.options.get(_session_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_13__.StreamingSessionOptions.SESSION_KEEPALIVE_FREQUENCY);
  }
  _createClass(KeepAliveManager, [{
    key: "start",
    value: function start() {
      var _this = this;
      // Creating keepalive job
      this.job = _service_JobManager__WEBPACK_IMPORTED_MODULE_12__["default"].getInstance().asyncDelay(this.delay, function () {
        _this.process();
      });
    }

    /**
     * Method called to generate the keepalive
     *
     * @param parameters Request parameters
     * @param next callback has to call next or not
     */
  }, {
    key: "callback",
    value: function callback(parameters) {
      var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'callback method should be overridden');
    }

    /**
     * Process the keepalive, it will call the overridden callback method
     *
     * @param next Call next method in the callback method
     */
  }, {
    key: "process",
    value: function process() {
      var next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this.active) {
        this.handler.notifyKeepaliveSessionReportRequested(this.handler.sessionReport);
        this.handler.sessionReport.keepaliveRequestDate = Date.now();

        // LoggerManager.d(TAG, 'SessionReport: ' + this.#handler.sessionReport.toString());

        var smartLibParameters = this.handler.smartLib.getParameters();
        var parameters = {
          userAgent: smartLibParameters.userAgent
        };
        this.callback(parameters, next);
      }
    }
  }, {
    key: "next",
    value: function next() {
      var _this2 = this;
      var _next = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this.job = _service_JobManager__WEBPACK_IMPORTED_MODULE_12__["default"].getInstance().asyncDelay(this.delay, function () {
        _this2.process();
      });
    }
  }, {
    key: "stop",
    value: function stop() {
      this.active = false;
      _service_JobManager__WEBPACK_IMPORTED_MODULE_12__["default"].getInstance().cancel(this.job);
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return this.active;
    }
  }]);
  return KeepAliveManager;
}();
var BroadpeakCDNKeepaliveManager = /*#__PURE__*/function (_KeepAliveManager) {
  _inherits(BroadpeakCDNKeepaliveManager, _KeepAliveManager);
  var _super = _createSuper(BroadpeakCDNKeepaliveManager);
  function BroadpeakCDNKeepaliveManager(handler) {
    var _this3;
    _classCallCheck(this, BroadpeakCDNKeepaliveManager);
    _this3 = _super.call(this, handler);
    /**
     * keepalive request method (GET, POST)
     * POST will send SR report as JSON in the body (require a recent version of BkS400)
     * GET will send metrics as queries (old method)
     */
    _defineProperty(_assertThisInitialized(_this3), "method", void 0);
    _this3.method = 'POST';
    _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Using Broadpeak CDN keepalive manager...', _this3.handler.id);
    return _this3;
  }
  _createClass(BroadpeakCDNKeepaliveManager, [{
    key: "callback",
    value: function callback(parameters) {
      var _this4 = this;
      var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      _request_RequestManager__WEBPACK_IMPORTED_MODULE_10__["default"].getInstance().keepalive(this.handler, parameters, this.method).then(function (result) {
        // Store method used by the BkS400
        _this4.method = result.method;
        if (result.httpStatus > 0 && (result.httpStatus < 200 || result.httpStatus >= 300)) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Stopping keepalive...', _this4.handler.id);
          _this4.stop();
        } else {
          var data = '';
          try {
            data = JSON.parse(result.body.trim());
          } catch (e) {
            data = result.body.trim();
          }
          _this4.handler.notifyKeepaliveRequestEnded(result.httpStatus, data);
          if (next === true) {
            _this4.next();
          }
        }
      });
    }
  }]);
  return BroadpeakCDNKeepaliveManager;
}(KeepAliveManager);

/***/ }),

/***/ "./src_core/request/RequestManager.js":
/*!********************************************!*\
  !*** ./src_core/request/RequestManager.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ RequestManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.starts-with.js */ "./node_modules/core-js/modules/es.string.starts-with.js");
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_string_ends_with_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.string.ends-with.js */ "./node_modules/core-js/modules/es.string.ends-with.js");
/* harmony import */ var core_js_modules_es_string_ends_with_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_ends_with_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.json.stringify.js */ "./node_modules/core-js/modules/es.json.stringify.js");
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.from.js */ "./node_modules/core-js/modules/es.array.from.js");
/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_regexp_test_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.regexp.test.js */ "./node_modules/core-js/modules/es.regexp.test.js");
/* harmony import */ var core_js_modules_es_regexp_test_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_test_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator.js */ "./node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator_js__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../utils/RequestUtils */ "./src_core/utils/RequestUtils.js");
/* harmony import */ var _Version__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../Version */ "./src_core/Version.js");
/* harmony import */ var _service_JobManager__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../service/JobManager */ "./src_core/service/JobManager.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! .. */ "./src_core/index.js");
/* harmony import */ var _ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../ad/InternalAdManager */ "./src_core/ad/InternalAdManager.js");
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../SmartLib */ "./src_core/SmartLib.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }





















function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







var TAG = 'BpkRequestMgr';
var AbstractRequestHandler = /*#__PURE__*/function () {
  function AbstractRequestHandler() {
    _classCallCheck(this, AbstractRequestHandler);
  }
  _createClass(AbstractRequestHandler, null, [{
    key: "get",
    value: function get(url, headers, timeout, callback) {
      callback({
        body: undefined,
        headers: undefined,
        statusCode: -1
      });
    }
  }, {
    key: "post",
    value: function post(url, headers, body, timeout, callback) {
      callback({
        body: undefined,
        headers: undefined,
        statusCode: -1
      });
    }
  }]);
  return AbstractRequestHandler;
}();
var RequestManager = /*#__PURE__*/function () {
  function RequestManager() {
    _classCallCheck(this, RequestManager);
    /**
     * Platform specific request handler
     */
    _defineProperty(this, "requestHandler", AbstractRequestHandler);
    _defineProperty(this, "smartLib", void 0);
  }

  /**
   * Init request manager
   * It has to init by the wrapper
   *
   * @param requestHandler platform specific request handler
   */
  _createClass(RequestManager, [{
    key: "init",
    value: function init(requestHandler) {
      this.requestHandler = requestHandler;
    }
  }, {
    key: "attachInstance",
    value: function attachInstance(smartLib) {
      this.smartLib = smartLib;
    }
  }, {
    key: "release",
    value: function release() {}
  }, {
    key: "getHeaders",
    value: function getHeaders() {
      var parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.smartLib.getParameters();
      var headers = {};
      if (parameters.userAgent !== undefined) {
        headers['User-Agent'] = parameters.userAgent;
      }
      return headers;
    }
  }, {
    key: "getURL",
    value: function getURL(requestedURL, parameters, handler) {
      var _this = this;
      var options = handler.options;
      var isNanoCDNSession = parameters.nanoCDNDescr !== undefined && options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_NANO_CDN) === true;
      var isBroadpeakDomain = RequestManager.isBroadpeakDomainName(requestedURL, parameters.broadpeakDomainNames) && options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_BROADPEAK_CDN) === true;
      var multicastOnly = options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_ONLY) === true || options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.LEGACY_MULTICAST_ONLY) === true;
      if (!isNanoCDNSession) {
        if (parameters.broadpeakDomainNames === '*') {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.1 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
        } else if (parameters.broadpeakDomainNames === '') {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.3 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
        } else {
          if (isBroadpeakDomain) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.5 => 5.1 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
          } else {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.5 => 5.3 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
          }
        }
      } else {
        if (parameters.broadpeakDomainNames === '*') {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.2 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
        } else if (parameters.broadpeakDomainNames === '') {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.4 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
        } else {
          if (isBroadpeakDomain) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.6 => 5.2 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
          } else {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Workflow 5.6 => 5.4 (v' + _Version__WEBPACK_IMPORTED_MODULE_23__["default"] + ')', handler.id);
          }
        }
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, '   Parameters', handler.id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, '      analyticsAddress=' + parameters.analyticsAddress, handler.id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, '      nanoCDNHost=' + (parameters.nanoCDNDescr === undefined ? '' : parameters.nanoCDNDescr.hostIP), handler.id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, '      broadpeakDomainNames=' + parameters.broadpeakDomainNames, handler.id);
      options.print(TAG, '   ', handler.id);

      // nanoCDN session
      if (isNanoCDNSession) {
        var _SmartLib$nanoCDNModu;
        return (_SmartLib$nanoCDNModu = _SmartLib__WEBPACK_IMPORTED_MODULE_27__["default"].nanoCDNModule) === null || _SmartLib$nanoCDNModu === void 0 ? void 0 : _SmartLib$nanoCDNModu.NanoCDNRequestManager.getInstance().processNanoCDNSession(requestedURL, parameters, handler, isBroadpeakDomain, multicastOnly);
      }

      // If multicast only enabled
      if (multicastOnly === true) {
        return Promise.resolve(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.error(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.RESULT_REQUESTED_URL_NOT_FOUND_ON_NANOCDN));
      }

      // BkM session
      if (handler.adSession === undefined || !handler.adSession.isAdActivated()) {
        return this.requestBkM(requestedURL, parameters, undefined, handler);
      }

      // Ad insertion session
      var getURLResult;
      var adPalSessionRequest;

      // Enable nonce generation only if ad_allowed=false is not present
      if (handler.adSession.getAdAllowedQuery() === true) {
        adPalSessionRequest = this.smartLib.internalAdManager.requestAdPalSession();
      }

      // Ad insertion session
      return this.requestBkM(requestedURL, parameters, undefined, handler).then(function (result) {
        var _adPalSessionRequest;
        getURLResult = result;
        if (adPalSessionRequest !== undefined && !isBroadpeakDomain) {
          return _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncDelayPromise(80).then(function () {
            return adPalSessionRequest.getAdPalSession();
          });
        }
        return (_adPalSessionRequest = adPalSessionRequest) === null || _adPalSessionRequest === void 0 ? void 0 : _adPalSessionRequest.getAdPalSession();
      }).then(function (adPalSession) {
        // Init BkYou session
        if (!getURLResult.isError()) {
          var _handler$adSession;
          // set ad query parameters only if a redirected url is available
          if (handler.adSession !== undefined && handler.adSession.isAdActivated()) {
            // Add ad parameter to the redirected url
            var adParameters = handler.adSession.adParameters;
            for (var key in adParameters) {
              getURLResult.url = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(getURLResult.url, key, encodeURIComponent(adParameters[key]));
            }
            if (adPalSession !== undefined) {
              // Add nonce to the redirected url
              getURLResult.url = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(getURLResult.url, _ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_26__["default"].AD_NONCE_QUERY_PARAMETER, adPalSession.getNonce());

              // Set ad pal session to the ad session
              handler.adSession.adPalSession = adPalSession;
              adPalSession.setAdView(handler.adSession.adView);
            }
          }

          // If ad allowed query parameter is enabled
          if (((_handler$adSession = handler.adSession) === null || _handler$adSession === void 0 ? void 0 : _handler$adSession.getAdAllowedQuery()) === true) {
            return _this.requestBkYou(getURLResult, parameters, handler, isBroadpeakDomain, adPalSession);
          }
          return getURLResult;
        }
        return getURLResult;
      });
    }
  }, {
    key: "requestBkM",
    value: function requestBkM(requestedURL, parameters, activeNanoCDNHost, handler) {
      var _this2 = this;
      var options = handler.options;
      var isBroadpeakDomain = RequestManager.isBroadpeakDomainName(requestedURL, parameters.broadpeakDomainNames) && options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_BROADPEAK_CDN) === true || options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_REDIRECT_THIRD_PARTY_CDN) === true;
      if (isBroadpeakDomain) {
        var broadpeakURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(requestedURL, 'response', '200');
        broadpeakURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(broadpeakURL, 'bk-ml', '1');
        if (typeof activeNanoCDNHost === 'string' && activeNanoCDNHost.length !== 0) {
          broadpeakURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(broadpeakURL, 'nanocdnhost', activeNanoCDNHost);
        } else if (options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_DIVERSITY_DYNAMIC_FAILOVER) === true) {
          // if not nanocdn and diversity active then add diversityhost
          broadpeakURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(broadpeakURL, 'diversityfailover', '1');
        } else if (options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_DIVERSITY) === true) {
          // if not nanocdn and diversity active then add diversityhost
          broadpeakURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(broadpeakURL, 'diversityhost', '127.0.0.1:18080');
        }
        if (RequestManager.isBroadpeakDomainName(requestedURL, parameters.broadpeakDomainNames)) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'Sending request to the BkM/umbrella: ' + broadpeakURL, handler.id);
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'Sending request to third party CDN: ' + broadpeakURL, handler.id);
        }
        return this.getRedirectionLocation(broadpeakURL, RequestManager.CDN_REQUEST_TIMEOUT, parameters, handler).then(function (response) {
          if (RequestManager.isBroadpeakDomainName(requestedURL, parameters.broadpeakDomainNames)) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkM/umbrella responded with status code ' + response.httpStatus, handler.id);
          } else {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'Third party CDN responded with status code ' + response.httpStatus, handler.id);
          }

          // Parse server timing
          _this2.parseCDNTiming(response, handler);

          // Set the CDN status code
          handler.sessionReport.cdnStatusCode = response.httpStatus;
          if (response.httpStatus >= 200 && response.httpStatus < 400 && response.redirectedURL !== '') {
            return ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.success(response.redirectedURL);
          } else if (response.httpStatus <= 0) {
            return ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.error(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.RESULT_CDN_RESPONSE_UNREADABLE);
          } else if (response.httpStatus >= 400 && response.httpStatus < 500) {
            return ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.error(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.RESULT_REQUESTED_URL_NOT_FOUND_ON_CDN, _this2.getBkMDetailedErrorMessage(response, handler));
          } else if (response.httpStatus >= 500 && response.httpStatus < 600) {
            return ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.error(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.RESULT_REQUESTED_URL_CDN_ERROR, _this2.getBkMDetailedErrorMessage(response, handler));
          }

          // Default error
          return ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.error(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.RESULT_NO_STREAMING_URL_FOUND, _this2.getBkMDetailedErrorMessage(response, handler));
        }).then(function (result) {
          // Update CDN status code with error code if needed
          if (result.isError()) {
            handler.sessionReport.cdnStatusCode = result.getDetailedErrorCode();
          }
          return result;
        });
      }
      return Promise.resolve(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionResult.success(requestedURL));
    }
  }, {
    key: "parseCDNTiming",
    value: function parseCDNTiming(response, handler) {
      var timing = response.headers[RequestManager.HEADER_CDN_TIMING];
      if (timing !== undefined && typeof timing === 'string') {
        // Value example GO,108,147;BWM,148,16676;PM=G6+0gAAAIjA=,17389,488;bpkhttpserver,19214
        var _iterator = _createForOfIteratorHelper(timing.split(';')),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var value = _step.value;
            if (value.startsWith('bpkhttpserver,')) {
              var bpkhttpserverTiming = value;
              try {
                var _bpkhttpserverTiming = parseInt(value.split(',')[1], 10);
                if (!isNaN(_bpkhttpserverTiming)) {
                  _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'bpkhttpserver response timing: ' + _bpkhttpserverTiming + 'ms', handler.id);
                  handler.sessionReport.bpkhttpserverTiming = _bpkhttpserverTiming;
                  return;
                }
              } catch (e) {}
              _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.e(TAG, 'BkM/umbrella is providing a bpkhttpserver response timing but it cannot be parsed (' + bpkhttpserverTiming + ')', handler.id);
              return;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkM/umbrella is not providing a response timing', handler.id);
    }
  }, {
    key: "getBkMDetailedErrorMessage",
    value: function getBkMDetailedErrorMessage(response, handler) {
      if (response.headers.hasOwnProperty(RequestManager.HEADER_CDN_DETAILED_ERROR_CODE) === true) {
        var error = response.headers[RequestManager.HEADER_CDN_DETAILED_ERROR_CODE];
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'Reading detailed error code from header: ' + error, handler.id);
        return error;
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'Reading detailed error code from http status: ' + response.httpStatus + ' ' + response.httpMessage, handler.id);
      return String(response.httpStatus + ' ' + response.httpMessage);
    }
  }, {
    key: "requestBkYou",
    value: function requestBkYou(getURLResult, parameters, handler, isBroadpeakDomain, adPalSession) {
      var _handler$adSession2;
      // Ad data requested
      var adDataRequested = ((_handler$adSession2 = handler.adSession) === null || _handler$adSession2 === void 0 ? void 0 : _handler$adSession2.adDataListener) !== undefined;

      // Build base URL
      var bkYouBaseURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(getURLResult.getURL(), 'bk-ml', '1.0');

      // If Broadpeak CDN and REQUEST_BKYOU_IF_BROADPEAK_CDN === false (default value), do not request BkYou yet (will be done during first image event)
      // sessiontoken and playbackqueries are ignored if this option is disabled and Broadpeak CDN
      if (handler.options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_BKYOU_IF_BROADPEAK_CDN) === false && isBroadpeakDomain && !adDataRequested) {
        var _handler$adTrackingMa;
        // Init BkYou session without the init request result
        (_handler$adTrackingMa = handler.adTrackingManager) === null || _handler$adTrackingMa === void 0 || _handler$adTrackingMa.initBkYouSession(bkYouBaseURL, undefined, {}, adPalSession, adPalSession === null || adPalSession === void 0 ? void 0 : adPalSession.getNonce());
        return getURLResult;
      }

      // Build request URL
      var bkYouRequestURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(getURLResult.getURL(), 'bk-ml', adDataRequested ? '2.0' : '1.0');

      // [SIMID-POC]: replace url by ad parameter 'url' in order to request directly th json withtout using BkM
      // const newUrl = RequestUtils.getParam(bkYouRequestURL, 'url');
      // if (newUrl.length) {
      //     bkYouRequestURL = newUrl;
      // }

      // If non-Broadpeak CDN or REQUEST_BKYOU_IF_BROADPEAK_CDN === true, request the BkYou during getURL (generating session id, get playbackqueries)
      return this.adTracking(handler, parameters, bkYouRequestURL, false).then(function (result) {
        if (result.httpStatus >= 200 && result.httpStatus < 300) {
          var _handler$adTrackingMa3;
          // Parse the BkYou JSON file
          var data;
          try {
            data = JSON.parse(result.content);
          } catch (e) {
            var _handler$adTrackingMa2;
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkYou file unreadable (parsing), falling back to legacy mode', handler.id);

            // No BkYou, send ad data without pod
            (_handler$adTrackingMa2 = handler.adTrackingManager) === null || _handler$adTrackingMa2 === void 0 || _handler$adTrackingMa2.notifyAdDataListener(true);
            return getURLResult;
          }

          // Check if it is a BkYou session
          var sessionToken = data['sessiontoken'];
          if (sessionToken === undefined) {
            return getURLResult;
          }
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkYou session token: ' + sessionToken, handler.id);

          // Add BkYou queries to the playback URL
          var playbackQueries = data['playbackqueries'];
          if (Array.isArray(playbackQueries)) {
            playbackQueries.forEach(function (query) {
              if (query.indexOf('=') !== -1) {
                var parsedQuery = query.split('=');

                // Add query to getURL result
                getURLResult.url = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(getURLResult.url, parsedQuery[0], parsedQuery[1]);

                // Add query to base BkYou request
                bkYouBaseURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].addOrReplaceParam(bkYouBaseURL, parsedQuery[0], parsedQuery[1]);
              }
            });
          }

          // Init BkYou session with the init request result
          (_handler$adTrackingMa3 = handler.adTrackingManager) === null || _handler$adTrackingMa3 === void 0 || _handler$adTrackingMa3.initBkYouSession(bkYouBaseURL, sessionToken, data, adPalSession, adPalSession === null || adPalSession === void 0 ? void 0 : adPalSession.getNonce());
        } else {
          var _handler$adTrackingMa4;
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkYou response unreadable (status code), falling back to legacy mode', handler.id);

          // No BkYou, send ad data without pod
          (_handler$adTrackingMa4 = handler.adTrackingManager) === null || _handler$adTrackingMa4 === void 0 || _handler$adTrackingMa4.notifyAdDataListener(true);
          return getURLResult;
        }
        return getURLResult;
      });
    }
  }, {
    key: "getRedirectionLocation",
    value: function getRedirectionLocation(requestedURL, timeout, parameters, handler) {
      var _this3 = this;
      return new Promise(function (resolve, reject) {
        var headers = _this3.getHeaders(parameters);
        headers['Connection'] = 'close';
        var job = _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncGet(requestedURL, headers, timeout, function (result) {
          var statusCode = 0;
          var redirectedURL = '';
          if (result['statusCode'] !== undefined) {
            statusCode = parseInt(result['statusCode'], 10);
          }
          if (result['headers'] !== undefined && result['headers']['location'] !== undefined) {
            redirectedURL = result['headers']['location'];
          } else {
            if (statusCode >= 200 && statusCode < 400) {
              _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.e(TAG, 'Location header cannot be read, please ensure "Access-Control-Expose-Headers: Location" is configured.', handler.id);
            }
          }

          // Patch relative URLs by adding protocol and hostname
          if (_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].isValidUrl(redirectedURL) && _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].isRelativeUrl(redirectedURL)) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Redirected URL is relative, patching to absolute URL', handler.id);
            redirectedURL = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].extractProtocol(requestedURL) + '://' + _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].extractHostnamePort(requestedURL) + redirectedURL;
          }
          resolve({
            httpStatus: statusCode,
            httpMessage: result['message'],
            headers: result['headers'],
            redirectedURL: redirectedURL
          });
        });
        handler.jobs.push(job);
      });
    }

    /**
     * Send request to BkS400
     * If the POST request fails, try with GET
     * The result contains the method used
     *
     * @param path request path (/keepalive, /teardown/200)
     * @param handler session handler
     * @param parameters smartlib parameters
     * @param method GET or POST
     * @returns {Promise<unknown>}
     */
  }, {
    key: "requestSession",
    value: function requestSession(path, handler, parameters, method) {
      var _this4 = this;
      var sessionReport = handler.sessionReport;
      var url = sessionReport.redirectedURL;

      // Build request URL
      var queryIndex = url.indexOf('?');
      if (queryIndex > 0) {
        url = url.substring(0, queryIndex);
      }
      if (!url.endsWith('/')) {
        url += '/';
      }
      url += path;
      var sessionReportingMode = handler.options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE);
      var sendMetrics = sessionReportingMode === ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT || sessionReportingMode === ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_KEEPALIVE_TEARDOWN;

      // Build request queries
      if (sendMetrics === true) {
        url += '?';
        if (sessionReport.timeline !== undefined && sessionReport.gdpr !== ___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.GDPR_DELETE) {
          url += RequestManager.TEARDOWN_TIMELINE_QUERY + sessionReport.timeline.data().base64() + '&';
        }
        url += RequestManager.TEARDOWN_METRICS_QUERY + sessionReport.toQuery();
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Sending session request using method ' + method + ' with metrics to ' + url, handler.id);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Sending session request using method ' + method + ' without metrics to ' + url, handler.id);
      }
      return new Promise(function (resolve, reject) {
        var headers = _this4.getHeaders(parameters);

        // Request callback
        var callback = function callback(result) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Send session request ends with status code: ' + result.statusCode, handler.id);
          var body = '';
          if (result['body'] !== undefined) {
            body = result['body'];
          }

          // If POST request is failing, switch to GET
          // If request ends with status 0, retry with POST. The server might be temporarily unavailable
          if (method === 'POST' && (result.statusCode < 200 || result.statusCode >= 300)) {
            _this4.requestSession(path, handler, parameters, 'GET').then(function (result) {
              resolve({
                httpStatus: result.httpStatus,
                body: result.body,
                method: 'GET'
              });
            });
          } else {
            resolve({
              httpStatus: result.statusCode,
              body: body,
              method: method
            });
          }
        };

        // Send request
        if (method === 'GET') {
          _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncGet(url, headers, RequestManager.BKS_REQUEST_TIMEOUT, callback);
        } else if (method === 'POST') {
          // Build request headers
          headers['Content-Type'] = 'application/json';

          // Build request body
          var body = '';
          if (sendMetrics === true) {
            body = JSON.stringify({
              Player: sessionReport.toEndSessionJSON()
            });
          }
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.v(TAG, 'Executing POST request with body: ' + body);
          _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncPost(url, headers, body, RequestManager.BKS_REQUEST_TIMEOUT, callback);
        }
      });
    }

    /**
     * Send keepalive request to BkS400
     * @param handler session handler
     * @param parameters smartlib parameters
     * @param method GET or POST
     * @returns {Promise<unknown>}
     */
  }, {
    key: "keepalive",
    value: function keepalive(handler, parameters, method) {
      return this.requestSession(RequestManager.KEEPALIVE_PATH, handler, parameters, method);
    }

    /**
     * Send teardown request to BkS400
     * @param handler session handler
     * @param parameters smartlib parameters
     * @param method GET or POST
     * @returns {Promise<unknown>}
     */
  }, {
    key: "teardown",
    value: function teardown(handler, parameters, method) {
      var path = RequestManager.TEARDOWN_PATH + handler.sessionReport.statusCode;
      return this.requestSession(path, handler, parameters, method);
    }
  }, {
    key: "adEvent",
    value: function adEvent(handler, url) {
      var headers = this.getHeaders();

      // Set ad event user agent (override SmartLib user agent)
      var adTrackingUserAgent = handler.options.get(___WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.USERAGENT_AD_EVENT);
      if (adTrackingUserAgent !== undefined) {
        headers['User-Agent'] = adTrackingUserAgent;
      }
      _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncGet(url, headers, 20000, function (result) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.i(TAG, 'Ad event request ends with status code: ' + result.statusCode, handler.id);
      });
    }
  }, {
    key: "adTracking",
    value: function adTracking(handler, parameters, url) {
      var _this5 = this;
      var async = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'Sending request to the BkYou (async:' + async + '): ' + url, handler.id);
      return new Promise(function (resolve, reject) {
        var headers = _this5.getHeaders();
        if (async === false) {
          var job = _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncGet(url, headers, RequestManager.BKS_REQUEST_TIMEOUT, function (result) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkYou responded with status code ' + result.statusCode, handler.id);
            resolve({
              httpStatus: result.statusCode,
              content: result.body
            });
          });
          handler.jobs.push(job);
        } else {
          _service_JobManager__WEBPACK_IMPORTED_MODULE_24__["default"].getInstance().asyncGet(url, headers, RequestManager.BKS_REQUEST_TIMEOUT, function (result) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_21__.LoggerManager.d(TAG, 'BkYou responded with status code ' + result.statusCode, handler.id);
            resolve({
              httpStatus: result.statusCode,
              content: result.body
            });
          });
        }
      });
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!_classStaticPrivateFieldSpecGet(RequestManager, RequestManager, _instance)) {
        _classStaticPrivateFieldSpecSet(RequestManager, RequestManager, _instance, new RequestManager());
      }
      return _classStaticPrivateFieldSpecGet(RequestManager, RequestManager, _instance);
    }
  }, {
    key: "isBroadpeakDomainName",
    value: function isBroadpeakDomainName(requestedURL, broadpeakDomainNames) {
      if (broadpeakDomainNames === null || broadpeakDomainNames === '') {
        return false;
      } else if (broadpeakDomainNames === '*') {
        return true;
      }
      var url = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_22__["default"].parseURL(requestedURL);
      if (url !== null && url.hostname !== null) {
        var names = broadpeakDomainNames.split(',');
        return names.indexOf(url.hostname) >= 0;
      }
      return false;
    }
  }]);
  return RequestManager;
}();
_defineProperty(RequestManager, "TEARDOWN_PATH", 'teardown/');
_defineProperty(RequestManager, "TEARDOWN_METRICS_QUERY", 'metrics=');
_defineProperty(RequestManager, "TEARDOWN_TIMELINE_QUERY", 'metricsTL=');
_defineProperty(RequestManager, "KEEPALIVE_PATH", 'keepalive');
_defineProperty(RequestManager, "QUERY_PARAMETER_SESSION_ID", 'bk-session_id');
_defineProperty(RequestManager, "QUERY_PARAMETER_SESSION_CREATED", 'bk-session');
_defineProperty(RequestManager, "HEADER_CDN_DETAILED_ERROR_CODE", 'x-bpk-error');
_defineProperty(RequestManager, "HEADER_CDN_TIMING", 'x-bpk-timing');
_defineProperty(RequestManager, "CDN_REQUEST_TIMEOUT", 20000);
_defineProperty(RequestManager, "BKS_REQUEST_TIMEOUT", 5000);
_defineProperty(RequestManager, "KEEPALIVE_REQUEST_INTERVAL", 5000);
/**
 * Singleton
 */
var _instance = {
  writable: true,
  value: void 0
};


/***/ }),

/***/ "./src_core/service/AppStateManager.js":
/*!*********************************************!*\
  !*** ./src_core/service/AppStateManager.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ AppStateManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! .. */ "./src_core/index.js");











function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }

var TAG = 'BpkAppStateMgr';
var AppStateManager = /*#__PURE__*/function () {
  function AppStateManager() {
    _classCallCheck(this, AppStateManager);
    _defineProperty(this, "smartLib", void 0);
    _defineProperty(this, "listeners", void 0);
    _defineProperty(this, "bound", void 0);
    _defineProperty(this, "networkAvailable", void 0);
    _defineProperty(this, "appInBackground", void 0);
    _defineProperty(this, "networkType", 99);
    _defineProperty(this, "mute", 0);
    _defineProperty(this, "osName", '');
    _defineProperty(this, "osVersion", '');
    _defineProperty(this, "deviceType", '');
    this.bound = false;
    this.release();
  }
  _createClass(AppStateManager, [{
    key: "init",
    value: function init(smartLib) {
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Initializing core app state manager...');
      this.smartLib = smartLib;

      // If the wrapped AppStateManager does not set a value before smartlib init
      if (this.bound === false) {
        this.networkAvailable = true;
        this.appInBackground = false;
      } else {
        ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Core app state manager is bound to the target, skipping default values...');
      }
      this.release();
    }
  }, {
    key: "release",
    value: function release() {
      this.listeners = [];
    }

    /**
     * Set device value before being bound
     * @param osName
     * @param osVersion
     * @param deviceType
     */
  }, {
    key: "setDeviceInfo",
    value: function setDeviceInfo(osName, osVersion, deviceType) {
      this.osName = osName;
      this.osVersion = osVersion;
      this.deviceType = deviceType;
    }
  }, {
    key: "bind",
    value: function bind() {
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, 'Device:osName=' + this.osName + ', osVersion=' + this.osVersion);
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, 'Device:type=' + this.deviceType);
      this.bound = true;
    }
  }, {
    key: "isConnectedToWifi",
    value: function isConnectedToWifi() {
      return this.networkType >= 10 && this.networkType <= 12;
    }
  }, {
    key: "addListener",
    value: function addListener(listener) {
      if (listener !== undefined && !this.listeners.includes(listener)) {
        this.listeners.push(listener);
      }
    }
  }, {
    key: "removeListener",
    value: function removeListener(listener) {
      var index = this.listeners.indexOf(listener);
      if (index !== -1) {
        this.listeners.splice(index, 1);
      }
    }
  }, {
    key: "notifyEvent",
    value: function notifyEvent(listener, eventName, arg1, arg2) {
      if (typeof listener[eventName] === 'function') {
        listener[eventName](arg1, arg2);
      }
    }
  }, {
    key: "notifyForeground",
    value: function notifyForeground() {
      var _this = this;
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'App is in foreground');
      this.appInBackground = false;
      this.listeners.forEach(function (listener) {
        _this.notifyEvent(listener, 'onForeground');
      });
    }
  }, {
    key: "notifyBackground",
    value: function notifyBackground() {
      var _this2 = this;
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'App is in background');
      this.appInBackground = true;
      this.listeners.forEach(function (listener) {
        _this2.notifyEvent(listener, 'onBackground');
      });
    }
  }, {
    key: "notifyNetworkAvailable",
    value: function notifyNetworkAvailable(networkType) {
      var _this3 = this;
      if (networkType === undefined) {
        ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Network is available (networkType:' + networkType + ')');
        this.networkAvailable = true;
        this.listeners.forEach(function (listener) {
          _this3.notifyEvent(listener, 'onNetworkAvailable', 99);
        });
      } else {
        if (this.networkType !== networkType) {
          ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Network is available (networkType:' + networkType + ')');
          this.networkAvailable = true;
          this.networkType = networkType;
          this.listeners.forEach(function (listener) {
            _this3.notifyEvent(listener, 'onNetworkAvailable', networkType);
          });
        }
      }
    }
  }, {
    key: "notifyNetworkLost",
    value: function notifyNetworkLost() {
      var _this4 = this;
      if (this.networkAvailable !== false) {
        ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Network is unavailable');
        this.networkAvailable = false;
        this.networkType = 0;
        this.listeners.forEach(function (listener) {
          _this4.notifyEvent(listener, 'onNetworkLost');
        });
      }
    }
  }, {
    key: "notifyMute",
    value: function notifyMute() {
      var _this5 = this;
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Volume is muted');
      this.mute = 1;
      this.listeners.forEach(function (listener) {
        _this5.notifyEvent(listener, 'onMute');
      });
    }
  }, {
    key: "notifyUnmute",
    value: function notifyUnmute() {
      var _this6 = this;
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.d(TAG, 'Volume is unmuted');
      this.mute = 0;
      this.listeners.forEach(function (listener) {
        _this6.notifyEvent(listener, 'onUnmute');
      });
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!_classStaticPrivateFieldSpecGet(AppStateManager, AppStateManager, _instance)) {
        _classStaticPrivateFieldSpecSet(AppStateManager, AppStateManager, _instance, new AppStateManager());
      }
      return _classStaticPrivateFieldSpecGet(AppStateManager, AppStateManager, _instance);
    }
  }]);
  return AppStateManager;
}();
var _instance = {
  writable: true,
  value: void 0
};


/***/ }),

/***/ "./src_core/service/JobManager.js":
/*!****************************************!*\
  !*** ./src_core/service/JobManager.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ JobManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils_MathUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/MathUtils */ "./src_core/utils/MathUtils.js");
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../index */ "./src_core/index.js");
/* harmony import */ var _request_RequestManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../request/RequestManager */ "./src_core/request/RequestManager.js");







function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) { _classCheckPrivateStaticAccess(receiver, classConstructor); _classCheckPrivateStaticFieldDescriptor(descriptor, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classCheckPrivateStaticFieldDescriptor(descriptor, action) { if (descriptor === undefined) { throw new TypeError("attempted to " + action + " private static field before its declaration"); } }
function _classCheckPrivateStaticAccess(receiver, classConstructor) { if (receiver !== classConstructor) { throw new TypeError("Private static access of wrong provenance"); } }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }



var TAG = 'BpkJobMgr';
var JobManager = /*#__PURE__*/function () {
  function JobManager() {
    _classCallCheck(this, JobManager);
    _defineProperty(this, "worker", void 0);
    _defineProperty(this, "jobs", void 0);
    this.jobs = {};
  }
  _createClass(JobManager, [{
    key: "async",
    value: function async(command, legacyCallback, requestInfoCallback, resultCallback) {
      return this.start(command, 0, -1, legacyCallback, requestInfoCallback, resultCallback);
    }
  }, {
    key: "asyncGet",
    value: function asyncGet(url, headers, timeout, resultCallback) {
      return this.start('get', 0, -1, function () {
        _request_RequestManager__WEBPACK_IMPORTED_MODULE_9__["default"].getInstance().requestHandler.get(url, headers, timeout, resultCallback);
      }, function () {
        return {
          url: url,
          headers: headers,
          timeout: timeout
        };
      }, resultCallback);
    }
  }, {
    key: "asyncPost",
    value: function asyncPost(url, headers, body, timeout, resultCallback) {
      return this.start('post', 0, -1, function () {
        _request_RequestManager__WEBPACK_IMPORTED_MODULE_9__["default"].getInstance().requestHandler.post(url, headers, body, timeout, resultCallback);
      }, function () {
        return {
          url: url,
          headers: headers,
          body: body,
          timeout: timeout
        };
      }, resultCallback);
    }
  }, {
    key: "asyncDelay",
    value: function asyncDelay(delayMs, resultCallback) {
      var task;
      var job = this.start('delay', delayMs, -1, function (resultCallback) {
        task = setTimeout(resultCallback, delayMs);
      }, undefined, resultCallback);
      job.task = task;
      return job;
    }
  }, {
    key: "asyncDelayPromise",
    value: function asyncDelayPromise(delayMs) {
      return new Promise(function (resolve, reject) {
        JobManager.getInstance().asyncDelay(delayMs, function () {
          resolve();
        });
      });
    }
  }, {
    key: "asyncNonce",
    value: function asyncNonce(timeout, resultCallback, timeoutCallback) {
      var legacyCallback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;
      var task;
      if (legacyCallback === undefined) {
        legacyCallback = function legacyCallback() {
          _index__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'ios async nonce');
          task = setTimeout(timeoutCallback, timeout);
        };
      }
      var job = this.start('waitNonce', 0, timeout, legacyCallback, undefined, resultCallback, timeoutCallback, true);
      job.task = task;
      return job;
    }
  }, {
    key: "waitNonce",
    value: function waitNonce(timeout, resultCallback, timeoutCallback) {
      var legacyCallback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;
      var task;
      if (legacyCallback === undefined) {
        legacyCallback = function legacyCallback() {
          _index__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.d(TAG, 'ios wait nonce');
          task = setTimeout(timeoutCallback, timeout);
        };
      }
      var job = this.start('waitNonce', 0, timeout, legacyCallback, undefined, resultCallback, timeoutCallback, false);
      job.task = task;
      return job;
    }
  }, {
    key: "start",
    value: function start(command, delayMs, timeoutMs, legacyCallback, requestInfoCallback, resultCallback) {
      var timeoutCallback = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : function () {};
      var async = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;
      if (this.worker === undefined) {
        if (typeof CoreWorker === 'function') {
          this.worker = new CoreWorker();
        } else if (typeof CoreWorker === 'object') {
          this.worker = CoreWorker;
        }
      }
      if (this.worker !== undefined) {
        var job = this.createJob();
        job.active = true;
        job.command = command;
        job.startDelay = delayMs;
        job.timeoutDelay = timeoutMs;
        job.requestInfo = requestInfoCallback;
        job.result = resultCallback;
        job.timeout = timeoutCallback;
        job.async = async;
        _index__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.v(TAG, 'Starting job "' + command + '" (id: ' + job.id + ', async: ' + job.async + ')...');
        // LoggerManager.v(TAG, 'Jobs length: ' + JSON.stringify(this.jobs, null, ' '));

        if (async) {
          this.worker.async(job.id, job.command, job.startDelay, job.timeoutDelay);
        } else {
          this.worker.sync(job.id, job.command, job.startDelay, job.timeoutDelay);
        }
        return job;
      }
      legacyCallback(resultCallback);
      return {
        command: command
      };
    }
  }, {
    key: "interrupt",
    value: function interrupt(job) {
      if (job !== undefined) {
        if (this.worker !== undefined) {
          _index__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.v(TAG, 'Interrupting job "' + job.command + '"...');
          this.worker.interrupt(job.id);
        }
      }
    }
  }, {
    key: "cancel",
    value: function cancel(job) {
      if (job !== undefined) {
        if (this.worker !== undefined) {
          _index__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.v(TAG, 'Cancelling job "' + job.command + '"...');
          job.active = false;
          this.worker.cancel(job.id);
          delete this.jobs[job.id];
        }
        if (job.task !== undefined) {
          clearTimeout(job.task);
        }
      }
    }
  }, {
    key: "requestInfo",
    value: function requestInfo(id) {
      var job = this.jobs[id];
      if (job !== undefined && typeof job.requestInfo === 'function') {
        // LoggerManager.v(TAG, 'Job "' + job.command + '" requesting info...');
        return job.requestInfo();
      }
      return {};
    }
  }, {
    key: "result",
    value: function result(id, args) {
      var job = this.jobs[id];
      if (job !== undefined && typeof job.result === 'function' && job.active === true) {
        // LoggerManager.v(TAG, 'Job "' + job.command + '" sending result...');
        // LoggerManager.v(TAG, JSON.stringify(args));

        job.active = false;
        job.result(args);
      }
      delete this.jobs[id];
    }
  }, {
    key: "timeout",
    value: function timeout(id) {
      var job = this.jobs[id];
      if (job !== undefined && typeof job.timeout === 'function' && job.active === true) {
        _index__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.v(TAG, 'Job "' + job.command + '" timeout...');
        job.active = false;
        job.timeout();
      }
      delete this.jobs[id];
    }
  }, {
    key: "createJob",
    value: function createJob() {
      var id = _utils_MathUtils__WEBPACK_IMPORTED_MODULE_7__["default"].randomIntFromInterval(1000000, 9999999);
      while (this.jobs[id] !== undefined) {
        id = _utils_MathUtils__WEBPACK_IMPORTED_MODULE_7__["default"].randomIntFromInterval(1000000, 9999999);
      }
      this.jobs[id] = {
        id: id
      };
      return this.jobs[id];
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!_classStaticPrivateFieldSpecGet(JobManager, JobManager, _instance)) {
        _classStaticPrivateFieldSpecSet(JobManager, JobManager, _instance, new JobManager());
      }
      return _classStaticPrivateFieldSpecGet(JobManager, JobManager, _instance);
    }
  }]);
  return JobManager;
}();
/**
 * Singleton
 */
var _instance = {
  writable: true,
  value: void 0
};


/***/ }),

/***/ "./src_core/session/ProxySessionHandler.js":
/*!*************************************************!*\
  !*** ./src_core/session/ProxySessionHandler.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ProxySessionHandler; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.object.get-prototype-of.js */ "./node_modules/core-js/modules/es.object.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.reflect.to-string-tag.js */ "./node_modules/core-js/modules/es.reflect.to-string-tag.js");
/* harmony import */ var core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_to_string_tag_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.reflect.construct.js */ "./node_modules/core-js/modules/es.reflect.construct.js");
/* harmony import */ var core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_construct_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _SessionHandler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./SessionHandler */ "./src_core/session/SessionHandler.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! .. */ "./src_core/index.js");
/* harmony import */ var _Version__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Version */ "./src_core/Version.js");
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../SmartLib */ "./src_core/SmartLib.js");










function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }




var TAG = 'BpkProxySessionHandler';
var ProxySessionHandler = /*#__PURE__*/function (_SessionHandler) {
  _inherits(ProxySessionHandler, _SessionHandler);
  var _super = _createSuper(ProxySessionHandler);
  function ProxySessionHandler(smartLib) {
    var _this;
    var streamingSession = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    _classCallCheck(this, ProxySessionHandler);
    _this = _super.call(this, smartLib, streamingSession);
    _defineProperty(_assertThisInitialized(_this), "startCalled", void 0);
    _this.startCalled = false;
    return _this;
  }
  _createClass(ProxySessionHandler, [{
    key: "getQuery",
    value: function getQuery() {
      var _this$smartLib$nanoCD,
        _this2 = this;
      var nanoCDNDescr = (_this$smartLib$nanoCD = this.smartLib.nanoCDNHostManager) === null || _this$smartLib$nanoCD === void 0 ? void 0 : _this$smartLib$nanoCD.getCurrentNanoCDNDescr();
      var logs = nanoCDNDescr !== undefined ? 'nanoCDN host: ' + nanoCDNDescr.hostIP : 'No nanoCDN found';
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, '' + logs + ' (' + _Version__WEBPACK_IMPORTED_MODULE_12__["default"] + ')', this.id);
      this.options.print(TAG, '', this.id);

      // Init session
      this.initPlayerAdapter();
      this.initManagers();
      this.notifyStart();
      var query = 'bk-ml=1';
      if (nanoCDNDescr !== undefined) {
        return _SmartLib__WEBPACK_IMPORTED_MODULE_13__["default"].nanoCDNModule.NanoCDNRequestManager.getInstance().getQuery(nanoCDNDescr, this).then(function (result) {
          query += result;
          ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, 'getQuery result : ' + query, _this2.id);
          return query;
        });
      }
      ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, 'getQuery result : ' + query, this.id);
      return Promise.resolve(query);
    }
  }, {
    key: "start",
    value: function start(contentURL, redirectedURL) {
      if (!this.startCalled) {
        ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(TAG, 'Starting streaming session...', this.id);
        this.startCalled = true;
        this.sessionReport.requestedURL = contentURL;
        this.sessionReport.redirectedURL = redirectedURL;
        this.sessionResult = ___WEBPACK_IMPORTED_MODULE_11__.StreamingSessionResult.success(redirectedURL);
        var smartLibParameters = this.smartLib.getParameters();
        var parameters = {
          broadpeakDomainNames: smartLibParameters.broadpeakDomainNames,
          forceTeardown: smartLibParameters.forceTeardown
        };
        this.handleRedirectedURL(parameters);
      } else {
        ___WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Implementation error: SmartLib.startStreamingSession(...) already called.', this.id);
      }
    }
  }]);
  return ProxySessionHandler;
}(_SessionHandler__WEBPACK_IMPORTED_MODULE_10__["default"]);


/***/ }),

/***/ "./src_core/session/SessionHandler.js":
/*!********************************************!*\
  !*** ./src_core/session/SessionHandler.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ SessionHandler; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.json.stringify.js */ "./node_modules/core-js/modules/es.json.stringify.js");
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.string.match.js */ "./node_modules/core-js/modules/es.string.match.js");
/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.string.starts-with.js */ "./node_modules/core-js/modules/es.string.starts-with.js");
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../SmartLib */ "./src_core/SmartLib.js");
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../request/RequestManager */ "./src_core/request/RequestManager.js");
/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../utils/RequestUtils */ "./src_core/utils/RequestUtils.js");
/* harmony import */ var _utils_MathUtils__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../utils/MathUtils */ "./src_core/utils/MathUtils.js");
/* harmony import */ var _SessionReport__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./SessionReport */ "./src_core/session/SessionReport.js");
/* harmony import */ var _network_KeepAliveManager__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../network/KeepAliveManager */ "./src_core/network/KeepAliveManager.js");
/* harmony import */ var _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./streaming/StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! .. */ "./src_core/index.js");
/* harmony import */ var _service_JobManager__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../service/JobManager */ "./src_core/service/JobManager.js");


















function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


// import MetricsManager from '../analytics/metrics/MetricsManager';





// import DiversityManager from '../DiversityManager';
// import AdMetricsManager from '../ad/metrics/AdMetricsManager';
// import AdTrackingManager from '../ad/tracking/AdTrackingManager';


// import OMSDKManager from '../plugins/omsdk/OMSDKManager';
// import OMSessionHandler from '../plugins/omsdk/OMSessionHandler';

var TAG = 'BpkSessionHandler';
var SessionHandler = /*#__PURE__*/function () {
  function SessionHandler(smartLib) {
    var streamingSession = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    _classCallCheck(this, SessionHandler);
    _defineProperty(this, "smartLib", void 0);
    _defineProperty(this, "streamingSession", void 0);
    _defineProperty(this, "analyticsAddress", void 0);
    _defineProperty(this, "options", void 0);
    _defineProperty(this, "adSession", void 0);
    _defineProperty(this, "diversityFailoverSession", void 0);
    _defineProperty(this, "omSessionHandler", void 0);
    _defineProperty(this, "id", void 0);
    _defineProperty(this, "listeners", void 0);
    _defineProperty(this, "playerAdapterInitialized", void 0);
    _defineProperty(this, "playerAdapter", void 0);
    _defineProperty(this, "metricsManager", void 0);
    _defineProperty(this, "keepAliveManager", void 0);
    _defineProperty(this, "adMetricsManager", void 0);
    _defineProperty(this, "adTrackingManager", void 0);
    _defineProperty(this, "sessionResult", void 0);
    _defineProperty(this, "sessionReport", void 0);
    _defineProperty(this, "firstImageCalled", void 0);
    _defineProperty(this, "stopped", void 0);
    _defineProperty(this, "jobs", void 0);
    _defineProperty(this, "deviceInitDate", void 0);
    _defineProperty(this, "manifestInitDate", void 0);
    _defineProperty(this, "videoMulticastStatus", void 0);
    _defineProperty(this, "audioMulticastStatus", void 0);
    _defineProperty(this, "dataMulticastStatus", void 0);
    this.smartLib = smartLib;
    this.streamingSession = streamingSession;
    this.adSession = undefined;
    this.listeners = [];
    this.playerAdapterInitialized = false;
    this.sessionResult = undefined;
    this.sessionReport = new _SessionReport__WEBPACK_IMPORTED_MODULE_23__["default"]();
    this.firstImageCalled = false;
    this.stopped = false;
    this.jobs = [];
    this.sessionReport.smartLibParameters = smartLib.getParameters();
    this.sessionReport.customParameters = this.getCustomParameters();
    this.videoMulticastStatus = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_INACTIVE;
    this.audioMulticastStatus = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_INACTIVE;
    this.dataMulticastStatus = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_INACTIVE;
    this.analyticsAddress = this.sessionReport.smartLibParameters.analyticsAddress;
    this.multicastStatusListener = undefined;
  }
  _createClass(SessionHandler, [{
    key: "initPlayerAdapter",
    value: function initPlayerAdapter() {
      if (this.playerAdapterInitialized === false) {
        this.playerAdapterInitialized = true;
        if (this.playerAdapter !== undefined) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Player:name=' + this.playerAdapter.getName() + ', version=' + this.playerAdapter.getVersion(), this.id);
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Player:capabilities=' + JSON.stringify(this.playerAdapter.getCapabilities()), this.id);
          this.playerAdapter.attachSession(this);
          this.playerAdapter.initSessionPlayerObjects();
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Player:no player attached', this.id);
        }
      }
    }
  }, {
    key: "initManagers",
    value: function initManagers() {
      var _SmartLib$adModule, _this$smartLib$monito;
      // Analytics module
      if (_SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule !== undefined) {
        this.metricsManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule.MetricsManager(this, this.playerAdapter);
        this.addListener(this.sessionReport.timeline);
        ___WEBPACK_IMPORTED_MODULE_26__.AppStateManager.getInstance().addListener(this.sessionReport.timeline);
      }

      // Ad module
      if (_SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].adModule !== undefined) {
        this.adMetricsManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].adModule.AdMetricsManager(this);
        this.adTrackingManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].adModule.AdTrackingManager(this, this.playerAdapter);
        this.addListener(this.adMetricsManager);
        this.adTrackingManager.addListener(this.adMetricsManager);
      }

      // attach session listeners
      if (this.playerAdapter !== undefined) {
        this.addListener(this.metricsManager);
        this.addListener(this.playerAdapter);
      }
      if (this.adSession !== undefined && this.adSession.isAdActivated() && (_SmartLib$adModule = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].adModule) !== null && _SmartLib$adModule !== void 0 && _SmartLib$adModule.OMSDKManager.getInstance().isEnabled()) {
        var _this$adTrackingManag;
        this.omSessionHandler = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].adModule.OMSessionHandler(this, this.playerAdapter);
        this.addListener(this.omSessionHandler);
        (_this$adTrackingManag = this.adTrackingManager) === null || _this$adTrackingManag === void 0 || _this$adTrackingManag.addListener(this.omSessionHandler);
      }
      this.addListener(this);
      ___WEBPACK_IMPORTED_MODULE_26__.AppStateManager.getInstance().addListener(this);

      // start monitoring
      (_this$smartLib$monito = this.smartLib.monitoringManager) === null || _this$smartLib$monito === void 0 || _this$smartLib$monito.startSession(this);
    }
  }, {
    key: "start",
    value: function start(requestedURL) {
      var _this$smartLib$nanoCD,
        _this$smartLib$nanoCD2,
        _this = this;
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Starting session...', this.id);
      this.sessionReport.requestedURL = requestedURL;

      // Init session
      this.initPlayerAdapter();
      this.initManagers();
      this.notifyStart();

      // Build request parameters
      var smartLibParameters = this.smartLib.getParameters();
      var parameters = {
        analyticsAddress: this.analyticsAddress,
        nanoCDNDescr: (_this$smartLib$nanoCD = this.smartLib.nanoCDNHostManager) === null || _this$smartLib$nanoCD === void 0 ? void 0 : _this$smartLib$nanoCD.getCurrentNanoCDNDescr(),
        nanoCDNDescrConfigured: (_this$smartLib$nanoCD2 = this.smartLib.nanoCDNHostManager) === null || _this$smartLib$nanoCD2 === void 0 ? void 0 : _this$smartLib$nanoCD2.getCurrentNanoCDNDescr(),
        broadpeakDomainNames: smartLibParameters.broadpeakDomainNames,
        forceTeardown: smartLibParameters.forceTeardown,
        userAgent: smartLibParameters.userAgent
      };
      var isBroadpeakDomain = _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].isBroadpeakDomainName(requestedURL, parameters.broadpeakDomainNames) && this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_BROADPEAK_CDN) === true;

      // Update nanoCDN status
      if (parameters.nanoCDNDescr !== undefined) {
        this.sessionReport.nanoCDNStatus = SessionHandler.NANOCDN_STATUS_DETECTED_NOT_USED;
      }

      // Set GDPR preference
      this.sessionReport.gdpr = this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.GDPR_PREFERENCE);

      // Execute getURL request
      return Promise.resolve().then(function () {
        // Diversity module loaded and dynamic failover enabled
        var diversityDynamicFailover = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].diversityModule !== undefined && _this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_DIVERSITY_DYNAMIC_FAILOVER) === true;
        if (diversityDynamicFailover && isBroadpeakDomain) {
          return _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].diversityModule.DiversityRequestManager.getInstance().processFailoverSession(requestedURL, parameters, _this);
        }
        return _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].getInstance().getURL(requestedURL, parameters, _this);
      })
      /* .then(result => {
          // Native Diversity is disabled
          if (SmartLib.diversityModule?.DiversityManager.getInstance().isActive() && !result.isError() &&
              this.options.get(StreamingSessionOptions.REQUEST_DIVERSITY) === true) {
              result.url = SmartLib.diversityModule.DiversityManager.getInstance().rewriteURL(result.getURL());
          }
           return result;
      })*/.then(function (result) {
        // Store session creation result
        _this.sessionResult = result;

        // If session creation is failing, use that error code
        if (result.isError()) {
          _this.sessionReport.statusCode = result.getErrorCode();
        }
        _this.sessionReport.redirectedURL = _this.patchBkmResult(result.getURL());
        _this.handleRedirectedURL(parameters);
        result.url = _this.sessionReport.redirectedURL;
        if (_this.stopped) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'The session has been stopped while creating it.', _this.id);
          _this.stop();
          result = ___WEBPACK_IMPORTED_MODULE_26__.StreamingSessionResult.error(___WEBPACK_IMPORTED_MODULE_26__.StreamingSessionResult.RESULT_SESSION_HAS_BEEN_STOPPED_DURING_REQUEST);
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session error code: ' + result.getErrorMessage() + ' (code ' + result.getErrorCode() + ', detail ' + result.getDetailedErrorMessage() + ')', _this.id);
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session redirected URL: ', _this.id);
          callback('');
          return result;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session status: ' + result.getErrorMessage() + ' (code ' + result.getErrorCode() + ', detail ' + result.getDetailedErrorMessage() + ')', _this.id);
        if (_this.sessionReport.redirectedURL.length > 0) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session redirected URL: ' + _this.sessionReport.redirectedURL, _this.id);
        }
        callback(_this.sessionReport.redirectedURL);
        return result;
      });
    }
  }, {
    key: "handleRedirectedURL",
    value: function handleRedirectedURL(parameters) {
      var _this$smartLib$nanoCD3, _SmartLib$analyticsMo;
      // Update nanoCDN status
      if (this.isNanoCDNUsed()) {
        this.sessionReport.nanoCDNStatus = SessionHandler.NANOCDN_STATUS_USED;
        this.notifyUnicastUsed();
      }

      // Use nanoCDN analytics address if defined
      var nanoCDNDescr = this.sessionResult.nanoCDNDescr || ((_this$smartLib$nanoCD3 = this.smartLib.nanoCDNHostManager) === null || _this$smartLib$nanoCD3 === void 0 ? void 0 : _this$smartLib$nanoCD3.getCurrentNanoCDNDescr());
      var analyticsAddress = nanoCDNDescr === null || nanoCDNDescr === void 0 ? void 0 : nanoCDNDescr.bka100;
      if (analyticsAddress !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'nanoCDN is overwriting the analytics address to ' + analyticsAddress, this.id);
        this.analyticsAddress = analyticsAddress;
      }

      // Init session variables
      if (this.sessionReport.redirectedURL.length !== 0) {
        this.sessionReport.sessionRunning = true; // session can be started
      }

      this.sessionReport.sessionCreated = true; // session has been initialized
      if (this.sessionReport.sessionRunning) {
        // Only check teardown if getURL ended with success
        this.sessionReport.teardownActivated = this.isTeardownActivated(parameters);
      }
      this.sessionReport.redirectedURL = this.removeBroadpeakParameters(this.sessionReport.redirectedURL);
      this.sessionReport.sessionId = this.getTicket();

      // Extend timeline size if direct BkA
      if (!this.sessionReport.teardownActivated) {
        var _this$sessionReport$t;
        (_this$sessionReport$t = this.sessionReport.timeline) === null || _this$sessionReport$t === void 0 || _this$sessionReport$t.encoder.extend();
      }
      this.notifyRedirectionEnd();

      // If no player attached, force trigger first image event
      if (this.playerAdapter === undefined && this.sessionReport.sessionRunning) {
        this.notifyFirstImage(0, 0);
      }

      // Clean cache
      (_SmartLib$analyticsMo = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule) === null || _SmartLib$analyticsMo === void 0 || _SmartLib$analyticsMo.CacheManager.getInstance().clean();

      // Get manifest data
      /* if (this.options.get(StreamingSessionOptions.EXPERIMENTAL_METRICS_LATENCY) === true) {
          this.retrieveManifestData();
      }*/
    }
  }, {
    key: "stop",
    value: function stop(statusCode) {
      var _this$smartLib$monito2;
      // LoggerManager.i(TAG, 'Stopping streaming session...', this.id);
      // AppStateManager.getInstance().removeListener(this.omSessionHandler);
      ___WEBPACK_IMPORTED_MODULE_26__.AppStateManager.getInstance().removeListener(this.sessionReport.timeline);
      ___WEBPACK_IMPORTED_MODULE_26__.AppStateManager.getInstance().removeListener(this);
      if (statusCode !== undefined && !isNaN(statusCode)) {
        this.sessionReport.statusCode = statusCode;
      }
      this.sessionReport.endSessionDate = Date.now();
      this.notifyStop(this.sessionReport.statusCode);
      if (this.keepAliveManager !== undefined) {
        this.keepAliveManager.stop();
      }

      // stop monitoring
      (_this$smartLib$monito2 = this.smartLib.monitoringManager) === null || _this$smartLib$monito2 === void 0 || _this$smartLib$monito2.stopSession(this);
      if (this.sessionReport.sessionCreated) {
        var _this$keepAliveManage, _this$keepAliveManage2;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Session ends with status code: ' + this.sessionReport.statusCode, this.id);
        var smartLibParameters = this.smartLib.getParameters();
        this.sessionReport.sessionRunning = false;
        this.sessionReport.sessionCreated = false;
        try {
          var _SmartLib$diversityMo;
          var diversityMetrics = (_SmartLib$diversityMo = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].diversityModule) === null || _SmartLib$diversityMo === void 0 ? void 0 : _SmartLib$diversityMo.DiversityManager.getInstance().getStats(this.sessionReport.sessionId, 1);
          if (diversityMetrics !== null && diversityMetrics !== undefined && diversityMetrics.length !== 0) {
            this.sessionReport.diversity = JSON.parse(diversityMetrics);
          } else {
            this.sessionReport.diversity = {};
          }
        } catch (e) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.w(TAG, 'Invalid Diversity metrics', this.id);
        }

        // Set parameters in read only mode
        this.sessionReport.smartLibParameters = JSON.parse(JSON.stringify(this.sessionReport.smartLibParameters));
        this.sessionReport.customParameters = JSON.parse(JSON.stringify(this.getCustomParameters()));
        this.notifyEndSessionReportUpdateRequested(this.sessionReport);
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'SessionReport: ' + this.sessionReport.toString(), this.id);
        this.resetCustomParameters();

        // Send teardown
        var parameters = {
          analyticsAddress: this.analyticsAddress,
          userAgent: smartLibParameters.userAgent
        };
        var sessionTeardown = this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_TEARDOWN);
        var sessionReportingMode = this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE);
        var requestMethod = ((_this$keepAliveManage = this.keepAliveManager) === null || _this$keepAliveManage === void 0 ? void 0 : _this$keepAliveManage.method) === 'POST' ? 'POST' : 'GET';
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Keepalive manager method set to ' + ((_this$keepAliveManage2 = this.keepAliveManager) === null || _this$keepAliveManage2 === void 0 ? void 0 : _this$keepAliveManage2.method), this.id);
        if (sessionTeardown === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_ENABLED) {
          this.sessionReport.teardownRequestDate = Date.now();
          _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].getInstance().teardown(this, parameters, requestMethod);
          if (sessionReportingMode === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER) {
            var _SmartLib$analyticsMo2;
            this.sessionReport.endSessionRequestDate = Date.now();
            (_SmartLib$analyticsMo2 = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule) === null || _SmartLib$analyticsMo2 === void 0 || _SmartLib$analyticsMo2.AnalyticsRequestManager.getInstance().endSession(this, parameters);
          }
        } else if (sessionTeardown === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN) {
          if (this.sessionReport.teardownActivated) {
            this.sessionReport.teardownRequestDate = Date.now();
            _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].getInstance().teardown(this, parameters, requestMethod);
            if (sessionReportingMode === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER) {
              var _SmartLib$analyticsMo3;
              this.sessionReport.endSessionRequestDate = Date.now();
              (_SmartLib$analyticsMo3 = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule) === null || _SmartLib$analyticsMo3 === void 0 || _SmartLib$analyticsMo3.AnalyticsRequestManager.getInstance().endSession(this, parameters);
            }
          } else {
            if (sessionReportingMode === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT || sessionReportingMode === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER) {
              var _SmartLib$analyticsMo4;
              this.sessionReport.endSessionRequestDate = Date.now();
              (_SmartLib$analyticsMo4 = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule) === null || _SmartLib$analyticsMo4 === void 0 || _SmartLib$analyticsMo4.AnalyticsRequestManager.getInstance().endSession(this, parameters);
            }
          }
        } else if (sessionTeardown === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_DISABLED) {
          if (sessionReportingMode === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT || sessionReportingMode === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER) {
            var _SmartLib$analyticsMo5;
            this.sessionReport.endSessionRequestDate = Date.now();
            (_SmartLib$analyticsMo5 = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule) === null || _SmartLib$analyticsMo5 === void 0 || _SmartLib$analyticsMo5.AnalyticsRequestManager.getInstance().endSession(this, parameters);
          }
        }
      }
      if (this.playerAdapter !== undefined) {
        this.playerAdapter.releaseSessionPlayerObjects();
        this.playerAdapter.detachSession();
      }

      /* if (this.adSession === undefined) {
          this.smartLib.internalAdManager.detachSession();
      }*/

      var activeJobs = 0;
      for (var i = 0; i < this.jobs.length; i++) {
        if (this.jobs[i].active === true) {
          activeJobs++;
        }
        _service_JobManager__WEBPACK_IMPORTED_MODULE_27__["default"].getInstance().interrupt(this.jobs[i]);
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, activeJobs + ' active job(s)', this.id);
      this.jobs = [];
      this.listeners = [];
      this.stopped = true;
    }

    // @override
  }, {
    key: "onFirstImage",
    value: function onFirstImage(bitrate, startPosition) {
      var _this$keepAliveManage3;
      // Request has been disabled on the BkA
      // Send start session if necessary
      /* if (!this.isSessionCreated(this.sessionReport.requestedURL)) {
          const sessionTeardown = this.options.get(StreamingSessionOptions.SESSION_TEARDOWN);
          const sessionReportingMode = this.options.get(StreamingSessionOptions.SESSION_REPORTING_MODE);
           const requestEnabled = (sessionTeardown === StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN && !this.sessionReport.teardownActivated) ||
              sessionTeardown === StreamingSessionOptions.SESSION_DISABLED;
           if ((sessionReportingMode === StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT && requestEnabled) || sessionReportingMode === StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER) {
              // Set start session request date
              this.sessionReport.startSessionRequestDate = Date.now(); // todo remove
               // Ask for session report
              this.notifyStartSessionReportUpdateRequested(this.sessionReport); // todo remove and check tests
               // Start session on BkA
              const smartLibParameters = this.smartLib.getParameters();
              const parameters = {
                  analyticsAddress: this.analyticsAddress,
                  userAgent: smartLibParameters.userAgent
              };
              SmartLib.analyticsModule?.AnalyticsRequestManager.getInstance().startSession(this, parameters); // todo remove
          }
      }*/
      // Ask for session report
      this.notifyStartSessionReportUpdateRequested(this.sessionReport);

      // Start keepalive if necessary
      var sessionKeepalive = this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_KEEPALIVE);
      var reportingModeMetricsReceiver = _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule !== undefined && this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE) === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER;
      var analyticsAddressEmpty = this.smartLib.getParameters().analyticsAddress.length === 0;
      if (sessionKeepalive === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_ENABLED) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Keepalive is enabled (SESSION_KEEPALIVE=SESSION_ENABLED)', this.id);

        // Start cache + CDN keepalive
        if (reportingModeMetricsReceiver && !analyticsAddressEmpty) {
          this.keepAliveManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule.BroadpeakCDNCacheKeepaliveManager(this);
        } else {
          this.keepAliveManager = new _network_KeepAliveManager__WEBPACK_IMPORTED_MODULE_24__.BroadpeakCDNKeepaliveManager(this);
        }
      } else if (sessionKeepalive === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN) {
        if (this.sessionReport.teardownActivated) {
          // Start cache + CDN keepalive
          if (reportingModeMetricsReceiver && !analyticsAddressEmpty) {
            this.keepAliveManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule.BroadpeakCDNCacheKeepaliveManager(this);
          } else {
            this.keepAliveManager = new _network_KeepAliveManager__WEBPACK_IMPORTED_MODULE_24__.BroadpeakCDNKeepaliveManager(this);
          }
        } else {
          // Start cache keepalive
          if (_SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule !== undefined && !analyticsAddressEmpty) {
            this.keepAliveManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule.CacheKeepaliveManager(this);
          }
        }
      } else if (sessionKeepalive === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.SESSION_DISABLED) {
        if (this.sessionReport.teardownActivated) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Keepalive is disabled (SESSION_KEEPALIVE=SESSION_DISABLED)', this.id);
        }

        // Start cache keepalive
        if (_SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule !== undefined && !analyticsAddressEmpty) {
          this.keepAliveManager = new _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].analyticsModule.CacheKeepaliveManager(this);
        }
      }
      (_this$keepAliveManage3 = this.keepAliveManager) === null || _this$keepAliveManage3 === void 0 || _this$keepAliveManage3.start();

      // In case of nanoCDN session and monitoring, ask keepalive immediately to fill the current monitoring slot with nanoCDN data
      if (_SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].monitoringModule !== undefined && this.isNanoCDNUsed() === true) {
        var _this$keepAliveManage4;
        (_this$keepAliveManage4 = this.keepAliveManager) === null || _this$keepAliveManage4 === void 0 || _this$keepAliveManage4.process(false);
      }
    }
  }, {
    key: "getMulticastStatus",
    value: function getMulticastStatus(segment, previousStatus) {
      if (segment !== undefined && typeof segment['status'] === 'number') {
        /**
         * 0: other (daiperiod or others flags)
         * 1: cached in multicast
         * 2: cached in unicast
         * 4: redirected in unicast
         * 8: get in unicast (other reasons)
         *
         * 0: unicast
         * 1: multicast
         * 2,4,8: unicast
         */
        var multicastStatus = segment['status'];

        /**
         * 0 or undefined: not playing DAI
         * 1: playing DAI in unicast
         */
        var daiPeriod = segment['daiperiod'] || 0;
        if (multicastStatus === 1) {
          // last segment in multicast (status === 1)
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Multicast status: active', this.id);
          return _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_ACTIVE;
        } else if (daiPeriod !== 0 || multicastStatus !== 1) {
          // last segment in unicast (status !== 1) or playing daiperiod (daiPeriod !== 0)
          // if multicast was active
          if (previousStatus !== _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_INACTIVE) {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Multicast status: inactive was active' + (daiPeriod >= 1 ? ' (playing DAI period)' : ''), this.id);
            return _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_INACTIVE_WAS_ACTIVE;
          }

          // else multicast was inactive
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Multicast status: inactive', this.id);
          return _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_INACTIVE;
        }
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Multicast status: unknown (segment:' + JSON.stringify(segment) + ')', this.id);
      return _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_UNKNOWN;
    }

    // @override
  }, {
    key: "onKeepaliveRequestEnded",
    value: function onKeepaliveRequestEnded(httpStatus, data) {
      if (this.isNanoCDNUsed()) {
        if (typeof data !== 'object') {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Data is not an object: (data:' + JSON.stringify(data) + ')', this.id);
          this.videoMulticastStatus = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_UNKNOWN;
          this.audioMulticastStatus = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_UNKNOWN;
          this.dataMulticastStatus = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_UNKNOWN;
          return;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'nanoCDN data: ' + JSON.stringify(data) + ')', this.id);
        var previousVideoMulticastStatus = this.videoMulticastStatus;
        var previousAudioMulticastStatus = this.audioMulticastStatus;
        var previousDataMulticastStatus = this.dataMulticastStatus;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Getting multicast status for video', this.id);
        this.videoMulticastStatus = this.getMulticastStatus(data['last_video_segment'], previousVideoMulticastStatus);
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Getting multicast status for audio', this.id);
        this.audioMulticastStatus = this.getMulticastStatus(data['last_audio_segment'], previousAudioMulticastStatus);
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Getting multicast status for data', this.id);
        this.dataMulticastStatus = this.getMulticastStatus(data['last_data_segment'], previousDataMulticastStatus);
        if (previousVideoMulticastStatus !== this.videoMulticastStatus) {
          var _this$streamingSessio;
          (_this$streamingSessio = this.streamingSession.multicastStatusListener) === null || _this$streamingSessio === void 0 || _this$streamingSessio.onVideoMulticastStatusChange(this.videoMulticastStatus);
          if (this.videoMulticastStatus === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.MULTICAST_ACTIVE) {
            this.notifyMulticastUsed();
          } else {
            this.notifyUnicastUsed();
          }
        }
        if (previousAudioMulticastStatus !== this.audioMulticastStatus) {
          var _this$streamingSessio2;
          (_this$streamingSessio2 = this.streamingSession.multicastStatusListener) === null || _this$streamingSessio2 === void 0 || _this$streamingSessio2.onAudioMulticastStatusChange(this.audioMulticastStatus);
        }
        if (previousDataMulticastStatus !== this.dataMulticastStatus) {
          var _this$streamingSessio3;
          (_this$streamingSessio3 = this.streamingSession.multicastStatusListener) === null || _this$streamingSessio3 === void 0 || _this$streamingSessio3.onDataMulticastStatusChange(this.dataMulticastStatus);
        }
      }
    }
  }, {
    key: "isNanoCDNUsed",
    value: function isNanoCDNUsed() {
      var _this2 = this;
      var nanoCDNUsed = false;
      if (_SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].nanoCDNModule === undefined) {
        return false;
      }
      if (typeof this.sessionReport.redirectedURL === 'string' && this.sessionReport.redirectedURL.length !== 0) {
        var _this$smartLib$nanoCD4;
        var nanoCDNDescrList = (_this$smartLib$nanoCD4 = this.smartLib.nanoCDNHostManager) === null || _this$smartLib$nanoCD4 === void 0 ? void 0 : _this$smartLib$nanoCD4.getNanoCDNDescrList();
        nanoCDNDescrList === null || nanoCDNDescrList === void 0 || nanoCDNDescrList.forEach(function (nanoCDNDescr) {
          if (_this2.sessionReport.redirectedURL.indexOf(nanoCDNDescr.hostIP) > 0) {
            nanoCDNUsed = true;
          }
        });
      }
      return nanoCDNUsed;
    }
  }, {
    key: "patchBkmResult",
    value: function patchBkmResult(contentURL) {
      var url = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].parseURL(contentURL);
      if (url !== null) {
        var result = contentURL;
        var parameters = url.query.split('&');
        if (parameters.length >= 2 && parameters[0].indexOf('bk-teardown=') === -1) {
          result = result.replace('?bk-teardown=', '&bk-teardown=');
        }
        if (result.indexOf('//bpk-token') !== -1) {
          result = result.replace('//bpk-token', '/bpk-token');
        }
        return result;
      }
      return contentURL;
    }
  }, {
    key: "getTicket",
    value: function getTicket() {
      var ticket = '';
      var splitURLWithoutSlash;

      // Check if BkYou session
      if (this.adTrackingManager !== undefined && this.adTrackingManager.bkYouSession === true && this.adTrackingManager.sessionToken !== undefined && this.adTrackingManager.sessionToken.length > 0) {
        ticket = this.adTrackingManager.sessionToken;
      }

      // Check if parameter is in url
      // e.g. http://foo.bar/toto?bk-session_id=123
      if (ticket === '') {
        ticket = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].getParam(this.sessionReport.redirectedURL, _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].QUERY_PARAMETER_SESSION_ID);
      }

      // Ticket is between square brackets at begining of the request
      // e.g. http://<server_ip>/[sessionid]/toto.m3u8
      if (ticket === '') {
        splitURLWithoutSlash = this.sessionReport.redirectedURL.split('/');
        if (splitURLWithoutSlash.length >= 4) {
          if (splitURLWithoutSlash[3].match('\\[(.*)\\]')) {
            // session id is between brackets
            ticket = splitURLWithoutSlash[3].substring(1, splitURLWithoutSlash[3].length - 1);
          } else if (splitURLWithoutSlash[3].match('\\%5B(.*)\\%5D')) {
            // session id is between brackets
            ticket = splitURLWithoutSlash[3].substring(3, splitURLWithoutSlash[3].length - 3);
          }
        }
      }

      // Check if ticket is present in bks url.
      // http://<server_ip>/bpk-token/<ticket>/0000/<service>/<manifest>
      if (ticket === '') {
        // Split the URL into two parts : - http part. - second part.
        var splitURLWithoutDoubleSlash = this.sessionReport.redirectedURL.split('//');

        // Get the second part of the URL (remove "http" part).
        var secondURLPart = splitURLWithoutDoubleSlash[splitURLWithoutDoubleSlash.length - 1];

        // Split the second part. Each part is separated by " / ".
        splitURLWithoutSlash = secondURLPart.split('/');
        if (splitURLWithoutSlash.length >= 3) {
          if ((splitURLWithoutSlash[0].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_IP) || splitURLWithoutSlash[0].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_HOSTNAME)) && splitURLWithoutSlash[1] === 'bpk-token' && (splitURLWithoutSlash[2].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_TICKET) || splitURLWithoutSlash[2].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_TICKET_TRANSCODED))) {
            ticket = splitURLWithoutSlash[2];
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.v(TAG, 'Ticket detected: ' + ticket, this.id);
          }
        }
      }

      // Check if ticket is present in bks url.
      // http://<server_ip>/<ticket>/0000/<service>/<manifest>
      if (ticket === '') {
        // Split the URL into two parts : - http part. - second part.
        var _splitURLWithoutDoubleSlash = this.sessionReport.redirectedURL.split('//');

        // Get the second part of the URL (remove "http" part).
        var _secondURLPart = _splitURLWithoutDoubleSlash[_splitURLWithoutDoubleSlash.length - 1];

        // Split the second part. Each part is separated by " / ".
        splitURLWithoutSlash = _secondURLPart.split('/');
        if (splitURLWithoutSlash.length >= 2) {
          if ((splitURLWithoutSlash[0].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_IP) || splitURLWithoutSlash[0].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_HOSTNAME)) && (splitURLWithoutSlash[1].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_TICKET) || splitURLWithoutSlash[1].match(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].REGEX_TICKET_TRANSCODED))) {
            ticket = splitURLWithoutSlash[1];
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.v(TAG, 'Ticket detected: ' + ticket, this.id);
          }
        }
      }

      // Ticket is not present. Let's generate one.
      if (ticket === '') {
        ticket = this.generateTicket();
      }

      // Check if generated one is not empty.
      if (ticket === '') {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.w(TAG, 'Failed getting ticket', this.id);
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.w(TAG, 'SmartLib won\'t be able to post metrics', this.id);
      }
      return ticket;
    }
  }, {
    key: "generateTicket",
    value: function generateTicket() {
      // Get timestamp and append a pipe at the end.
      var timestamp = Date.now();

      // Generate random number of 7 digits
      var preRandom = _utils_MathUtils__WEBPACK_IMPORTED_MODULE_22__["default"].randomIntFromInterval(1000000, 9999999);
      var postRandom = _utils_MathUtils__WEBPACK_IMPORTED_MODULE_22__["default"].randomIntFromInterval(1000000, 9999999);

      // Encode the concatenated
      var base64Ticket = _utils_MathUtils__WEBPACK_IMPORTED_MODULE_22__["default"].stringToBase64(preRandom + '' + timestamp + '' + postRandom);
      if (base64Ticket === null) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.w(TAG, 'Cannot encode base 64 ticket', this.id);
        return '';
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.v(TAG, 'Ticket generated: ' + base64Ticket, this.id);
      return base64Ticket;
    }
  }, {
    key: "getTeardown",
    value: function getTeardown() {
      var param = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].getParam(this.sessionReport.redirectedURL, 'bk-teardown');
      return param.startsWith('T') || param.startsWith('t') || param.startsWith('1');
    }
  }, {
    key: "isTeardownActivated",
    value: function isTeardownActivated(parameters) {
      if (parameters.forceTeardown === _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].FORCE_TEARDOWN_ENABLED) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start with keepalives/teardown (forceTeardown)', this.id);
        return true;
      }
      if (parameters.forceTeardown === _SmartLib__WEBPACK_IMPORTED_MODULE_18__["default"].FORCE_TEARDOWN_DISABLED) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start without keepalives/teardown (forceTeardown)', this.id);
        return false;
      }
      if (this.sessionReport.redirectedURL !== null && _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].getParam(this.sessionReport.redirectedURL, 'bk-teardown') === '0') {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start without keepalives/teardown (bk-teardown=0)', this.id);
        return false;
      }
      if (this.sessionReport.redirectedURL !== null && this.getTeardown()) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start with keepalives/teardown (bk-teardown=1)', this.id);
        return true;
      }
      if (this.sessionReport.nanoCDNStatus === SessionHandler.NANOCDN_STATUS_USED) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start with keepalives/teardown (nanoCDN used)', this.id);
        return true;
      }
      if (this.options.get(_streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_25__.StreamingSessionOptions.REQUEST_BROADPEAK_CDN) === false) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start without keepalives/teardown (REQUEST_BROADPEAK_CDN=false)', this.id);
        return false;
      }
      if (this.diversityFailoverSession === undefined) {
        if (this.sessionReport.requestedURL !== null && _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].isBroadpeakDomainName(this.sessionReport.requestedURL, parameters.broadpeakDomainNames)) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start with keepalives/teardown (in broadpeak domains list)', this.id);
          return true;
        }
      } else {
        if (_request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].isBroadpeakDomainName(this.diversityFailoverSession.getMainURL(), parameters.broadpeakDomainNames)) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Diversity session will start with keepalives/teardown (in broadpeak domains list)', this.id);
          return true;
        }
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.i(TAG, 'Session will start without keepalives/teardown', this.id);
      return false;
    }
  }, {
    key: "removeBroadpeakParameters",
    value: function removeBroadpeakParameters(redirectedURL) {
      var url = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].parseURL(redirectedURL);
      if (url !== null) {
        var query = '';
        var parameters = url.query.split('&');
        var firstQueryToKeep = 1;
        for (var i = 0; i < parameters.length; i++) {
          var parameter = parameters[i];
          if (!parameter.startsWith('bk-')) {
            if (!firstQueryToKeep) {
              query += '&';
            }
            query += parameter;
            firstQueryToKeep = 0;
          } else {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Remove query parameter \'' + parameter + '\' from url', this.id);
          }
        }
        if (query === '') {
          return redirectedURL.replace('?' + url.query, '');
        }
        return redirectedURL.replace(url.query, query);
      }
      return redirectedURL;
    }
  }, {
    key: "isSessionCreated",
    value: function isSessionCreated(url) {
      if (url === null) {
        return false;
      }
      var param = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].getParam(url, _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].QUERY_PARAMETER_SESSION_ID);
      if (param.length !== 0) {
        return true;
      }
      param = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_21__["default"].getParam(url, _request_RequestManager__WEBPACK_IMPORTED_MODULE_20__["default"].QUERY_PARAMETER_SESSION_CREATED);
      return param.startsWith('T') || param.startsWith('t') || param.startsWith('1');
    }
  }, {
    key: "getCustomParameters",
    value: function getCustomParameters() {
      if (this.streamingSession !== undefined) {
        return this.streamingSession.customParameters;
      }
      return this.smartLib.getParameters().customParameters;
    }
  }, {
    key: "resetCustomParameters",
    value: function resetCustomParameters() {
      if (this.streamingSession !== undefined) {} else {
        this.smartLib.resetCustomParameters();
      }
    }

    /* retrieveManifestData() {
        const smartLibParameters = this.smartLib.getParameters();
        const parameters = {
            userAgent: smartLibParameters.userAgent
        };
         let headers = {
            'Connection': 'close'
        };
         if (parameters.userAgent !== undefined) {
            headers['User-Agent'] = parameters.userAgent;
        }
         let job = JobManager.getInstance().asyncGet(this.sessionReport.redirectedURL, headers, 5000, result => {
            LoggerManager.e(TAG, 'MANIFEST DATA:' + JSON.stringify(result));
             this.deviceInitDate = Date.now();
            this.manifestInitDate = new Date(result['headers']['date']).getTime();
             LoggerManager.e(TAG, 'DEVICE DATE:' + this.deviceInitDate);
            LoggerManager.e(TAG, 'MANIFEST DATE:' + this.manifestInitDate);
        });
         this.jobs.push(job);
    }*/
  }, {
    key: "addListener",
    value: function addListener(listener) {
      if (listener !== undefined && !this.listeners.includes(listener)) {
        this.listeners.push(listener);
      }
    }
  }, {
    key: "removeListener",
    value: function removeListener(listener) {
      var index = this.listeners.indexOf(listener);
      if (index !== -1) {
        this.listeners.splice(index, 1);
      }
    }
  }, {
    key: "notifyEvent",
    value: function notifyEvent(listener, eventName, arg1, arg2) {
      if (typeof listener[eventName] === 'function') {
        listener[eventName](arg1, arg2);
      }
    }
  }, {
    key: "notifyLoading",
    value: function notifyLoading() {
      var _this3 = this;
      this.listeners.forEach(function (listener) {
        _this3.notifyEvent(listener, 'onLoading');
      });
    }
  }, {
    key: "notifyStart",
    value: function notifyStart() {
      var _this4 = this;
      var currentNetType;
      var muteState;

      // set current networktype then add listener to appstatemanager to get network evolution
      currentNetType = ___WEBPACK_IMPORTED_MODULE_26__.AppStateManager.getInstance().networkType;
      this.sessionReport.addNetworkType(currentNetType);
      // LoggerManager.d(TAG, 'notifyStart nettype:' + currentNetType);

      // set volume state before launching session
      muteState = ___WEBPACK_IMPORTED_MODULE_26__.AppStateManager.getInstance().mute;
      // LoggerManager.d(TAG, 'notifyStart mute:' + muteState);

      this.listeners.forEach(function (listener) {
        _this4.notifyEvent(listener, 'onStart', currentNetType, muteState);
      });
    }
  }, {
    key: "notifyRedirectionEnd",
    value: function notifyRedirectionEnd() {
      var _this5 = this;
      this.listeners.forEach(function (listener) {
        _this5.notifyEvent(listener, 'onRedirectionEnd');
      });
    }
  }, {
    key: "notifyFirstImage",
    value: function notifyFirstImage(bitrate, startPosition) {
      var _this6 = this;
      if (!this.firstImageCalled) {
        this.firstImageCalled = true;
        if (this.adSession !== undefined && this.adSession.isAdActivated()) {
          if (this.playerAdapter !== undefined) {
            if (this.playerAdapter.getCapabilities()['adTracking'] === true) {
              this.addListener(this.adTrackingManager);
            } else {
              _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Ad tracking disabled (player not compatible)', this.id);
            }
          } else {
            _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Ad tracking disabled (no player attached)', this.id);
          }
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.d(TAG, 'Ad tracking disabled (advertising not activated)', this.id);
        }
        this.listeners.forEach(function (listener) {
          _this6.notifyEvent(listener, 'onFirstImage', bitrate, startPosition);
        });
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.e(TAG, 'Implementation error: PlayerEventListener.onSessionStart() already called. If you don\'t attach any player, ' + 'please remove this call, SmartLib is now handling it automatically.', this.id);
      }
    }
  }, {
    key: "notifyLayerSwitch",
    value: function notifyLayerSwitch(bitrate) {
      var _this7 = this;
      this.listeners.forEach(function (listener) {
        _this7.notifyEvent(listener, 'onLayerSwitch', bitrate);
      });
    }
  }, {
    key: "notifyPause",
    value: function notifyPause() {
      var _this8 = this;
      this.listeners.forEach(function (listener) {
        _this8.notifyEvent(listener, 'onPause');
      });
    }
  }, {
    key: "notifyResume",
    value: function notifyResume() {
      var _this9 = this;
      this.listeners.forEach(function (listener) {
        _this9.notifyEvent(listener, 'onResume');
      });
    }
  }, {
    key: "notifyBufferingStart",
    value: function notifyBufferingStart() {
      var _this10 = this;
      this.listeners.forEach(function (listener) {
        _this10.notifyEvent(listener, 'onBufferingStart');
      });
    }
  }, {
    key: "notifyBufferingEnd",
    value: function notifyBufferingEnd(isPlaying) {
      var _this11 = this;
      this.listeners.forEach(function (listener) {
        _this11.notifyEvent(listener, 'onBufferingEnd', isPlaying);
      });
    }
  }, {
    key: "notifyStallEnd",
    value: function notifyStallEnd() {
      var _this12 = this;
      this.listeners.forEach(function (listener) {
        _this12.notifyEvent(listener, 'onStallEnd');
      });
    }
  }, {
    key: "notifyRebufferingEnd",
    value: function notifyRebufferingEnd() {
      var _this13 = this;
      this.listeners.forEach(function (listener) {
        _this13.notifyEvent(listener, 'onRebufferingEnd');
      });
    }
  }, {
    key: "notifySeek",
    value: function notifySeek(start, end) {
      var _this14 = this;
      this.listeners.forEach(function (listener) {
        _this14.notifyEvent(listener, 'onSeek', start, end);
      });
    }
  }, {
    key: "notifyStop",
    value: function notifyStop(statusCode) {
      var _this$adSession,
        _this15 = this;
      // Unset ad view of PAL SDK
      (_this$adSession = this.adSession) === null || _this$adSession === void 0 || (_this$adSession = _this$adSession.adPalSession) === null || _this$adSession === void 0 || _this$adSession.setAdView(undefined);
      this.listeners.forEach(function (listener) {
        _this15.notifyEvent(listener, 'onStop', statusCode);
      });
    }
  }, {
    key: "notifyClose",
    value: function notifyClose() {
      var _this16 = this;
      var broadpeakStatusCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
      this.listeners.forEach(function (listener) {
        _this16.notifyEvent(listener, 'onClose', broadpeakStatusCode);
      });
    }
  }, {
    key: "notifyStartSessionReportUpdateRequested",
    value: function notifyStartSessionReportUpdateRequested(report) {
      var _this17 = this;
      this.listeners.forEach(function (listener) {
        _this17.notifyEvent(listener, 'onStartSessionReportUpdateRequested', report);
      });
    }
  }, {
    key: "notifyKeepaliveSessionReportRequested",
    value: function notifyKeepaliveSessionReportRequested(report) {
      var _this18 = this;
      this.listeners.forEach(function (listener) {
        _this18.notifyEvent(listener, 'onKeepaliveSessionReportUpdateRequested', report);
      });
    }
  }, {
    key: "notifyKeepaliveRequestEnded",
    value: function notifyKeepaliveRequestEnded(httpStatus, body) {
      var _this19 = this;
      this.listeners.forEach(function (listener) {
        _this19.notifyEvent(listener, 'onKeepaliveRequestEnded', httpStatus, body);
      });
    }
  }, {
    key: "notifyEndSessionReportUpdateRequested",
    value: function notifyEndSessionReportUpdateRequested(report) {
      var _this20 = this;
      this.listeners.forEach(function (listener) {
        _this20.notifyEvent(listener, 'onEndSessionReportUpdateRequested', report);
      });
    }
  }, {
    key: "notifyVolumeChanged",
    value: function notifyVolumeChanged(volume) {
      var _this21 = this;
      this.listeners.forEach(function (listener) {
        _this21.notifyEvent(listener, 'onVolumeChanged', volume);
      });
    }
  }, {
    key: "notifyPlayerError",
    value: function notifyPlayerError(broadpeakStatusCode, playerErrorCode) {
      var _this22 = this;
      this.listeners.forEach(function (listener) {
        _this22.notifyEvent(listener, 'onPlayerError', broadpeakStatusCode, playerErrorCode);
      });
    }
  }, {
    key: "notifyMulticastUsed",
    value: function notifyMulticastUsed() {
      var _this23 = this;
      this.listeners.forEach(function (listener) {
        _this23.notifyEvent(listener, 'onMulticastUsed');
      });
    }
  }, {
    key: "notifyUnicastUsed",
    value: function notifyUnicastUsed() {
      var _this24 = this;
      this.listeners.forEach(function (listener) {
        _this24.notifyEvent(listener, 'onUnicastUsed');
      });
    }

    // **** APPStateManager events ****
  }, {
    key: "onNetworkAvailable",
    value: function onNetworkAvailable(networkType) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_19__.LoggerManager.v(TAG, 'Received event onNetworkAvailable type:' + networkType, this.id);
      this.sessionReport.addNetworkType(networkType);
    }
  }]);
  return SessionHandler;
}();
_defineProperty(SessionHandler, "NANOCDN_STATUS_UNAVAILABLE", 1);
_defineProperty(SessionHandler, "NANOCDN_STATUS_DETECTED_NOT_USED", 2);
_defineProperty(SessionHandler, "NANOCDN_STATUS_USED", 3);


/***/ }),

/***/ "./src_core/session/SessionManager.js":
/*!********************************************!*\
  !*** ./src_core/session/SessionManager.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ SessionManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.splice.js */ "./node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../SmartLib */ "./src_core/SmartLib.js");
/* harmony import */ var _SessionHandler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./SessionHandler */ "./src_core/session/SessionHandler.js");
/* harmony import */ var _ProxySessionHandler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ProxySessionHandler */ "./src_core/session/ProxySessionHandler.js");
/* harmony import */ var _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./streaming/StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");
/* harmony import */ var _streaming_StreamingSession__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./streaming/StreamingSession */ "./src_core/session/streaming/StreamingSession.js");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! .. */ "./src_core/index.js");
/* harmony import */ var _utils_MathUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/MathUtils */ "./src_core/utils/MathUtils.js");








function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }







// import {AnalyticsSession} from './analytics/AnalyticsSession';

var TAG = 'BpkSessionMgr';
var SessionManager = /*#__PURE__*/function () {
  function SessionManager() {
    _classCallCheck(this, SessionManager);
    _defineProperty(this, "smartLib", void 0);
    _defineProperty(this, "sessions", void 0);
  }
  _createClass(SessionManager, [{
    key: "init",
    value: function init(smartLib) {
      this.smartLib = smartLib;
      this.sessions = [];
    }
  }, {
    key: "createStreamingSession",
    value: function createStreamingSession() {
      var globalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
      var sessionOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      // Cleaning sessions
      this.cleanFinishedSessions();

      // Create the session
      var session = new _streaming_StreamingSession__WEBPACK_IMPORTED_MODULE_12__.StreamingSession(this.smartLib, _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.create(globalOptions, sessionOptions));
      this.sessions.push(session);
      if (this.sessions.length > 10) {
        ___WEBPACK_IMPORTED_MODULE_13__.LoggerManager.w(TAG, 'There are ' + this.sessions.length + ' active sessions. Use session.stopStreamingSession() to free up memory.');
      }
      return session;
    }
  }, {
    key: "createAnalyticsSession",
    value: function createAnalyticsSession() {
      var globalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
      var sessionOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      // Cleaning sessions
      this.cleanFinishedSessions();

      // Create the session
      var session = new _SmartLib__WEBPACK_IMPORTED_MODULE_8__["default"].analyticsModule.AnalyticsSession(this.smartLib, _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.create(globalOptions, sessionOptions));
      this.sessions.push(session);
      if (this.sessions.length > 10) {
        ___WEBPACK_IMPORTED_MODULE_13__.LoggerManager.w(TAG, 'There are ' + this.sessions.length + ' active sessions. Use session.stopStreamingSession() to free up memory.');
      }
      return session;
    }
  }, {
    key: "cleanFinishedSessions",
    value: function cleanFinishedSessions() {
      // when handler === undefined && Date.now() - date > 1000 * 60 * 5
      // when stopped === true
      // warn when sessions.length > 20

      // detach player adapter

      for (var i = this.sessions.length - 1; i >= 0; i--) {
        var _session$handler;
        var session = this.sessions[i];
        if (session.handler === undefined && Date.now() - session.date > SessionManager.UNSTARTED_SESSION_MAX_DURATION) {
          var _session$playerAdapte;
          (_session$playerAdapte = session.playerAdapter) === null || _session$playerAdapte === void 0 || _session$playerAdapte.detachPlayer();
          this.sessions.splice(i, 1);
        } else if (((_session$handler = session.handler) === null || _session$handler === void 0 ? void 0 : _session$handler.stopped) === true) {
          this.sessions.splice(i, 1);
        } else if (session.stopped === true) {
          this.sessions.splice(i, 1);
        }
      }
    }
  }, {
    key: "createSessionHandler",
    value: function createSessionHandler() {
      var streamingSession = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
      var handler = new _SessionHandler__WEBPACK_IMPORTED_MODULE_9__["default"](this.smartLib, streamingSession);
      if (streamingSession !== undefined) {
        handler.id = streamingSession.id;
        handler.options = streamingSession.options;
        handler.playerAdapter = streamingSession.playerAdapter;
      } else {
        handler.id = 'main-' + _utils_MathUtils__WEBPACK_IMPORTED_MODULE_14__["default"].randomIntFromInterval(10, 99);
        handler.options = new _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions();
      }
      return handler;
    }
  }, {
    key: "createProxySessionHandler",
    value: function createProxySessionHandler() {
      var streamingSession = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
      var handler = new _ProxySessionHandler__WEBPACK_IMPORTED_MODULE_10__["default"](this.smartLib, streamingSession);
      if (streamingSession !== undefined) {
        handler.id = streamingSession.id;
        handler.options = streamingSession.options;
        handler.playerAdapter = streamingSession.playerAdapter;
      } else {
        handler.id = 'main-' + _utils_MathUtils__WEBPACK_IMPORTED_MODULE_14__["default"].randomIntFromInterval(10, 99);
        handler.options = new _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions();
      }
      return handler;
    }
  }, {
    key: "release",
    value: function release() {
      this.cleanFinishedSessions();
      this.sessions.forEach(function (session) {
        if (session instanceof _SmartLib__WEBPACK_IMPORTED_MODULE_8__["default"].analyticsModule.AnalyticsSession) {
          session.stopAnalyticsSession();
        } else {
          session.stopStreamingSession();
        }
      });
      this.sessions = [];
    }
  }]);
  return SessionManager;
}();
_defineProperty(SessionManager, "UNSTARTED_SESSION_MAX_DURATION", 1000 * 60 * 6);


/***/ }),

/***/ "./src_core/session/SessionReport.js":
/*!*******************************************!*\
  !*** ./src_core/session/SessionReport.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ SessionReport; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.includes.js */ "./node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.includes.js */ "./node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.array.sort.js */ "./node_modules/core-js/modules/es.array.sort.js");
/* harmony import */ var core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_sort_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.json.stringify.js */ "./node_modules/core-js/modules/es.json.stringify.js");
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../SmartLib */ "./src_core/SmartLib.js");
/* harmony import */ var _SessionHandler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./SessionHandler */ "./src_core/session/SessionHandler.js");
/* harmony import */ var _Version__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../Version */ "./src_core/Version.js");
/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../utils/RequestUtils */ "./src_core/utils/RequestUtils.js");
/* harmony import */ var _ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../ad/InternalAdManager */ "./src_core/ad/InternalAdManager.js");
/* harmony import */ var _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../utils/ValidatorUtils */ "./src_core/utils/ValidatorUtils.js");
/* harmony import */ var _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./streaming/StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");
/* harmony import */ var _streaming_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./streaming/StreamingSessionResult */ "./src_core/session/streaming/StreamingSessionResult.js");











function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }








var SessionReport = /*#__PURE__*/function () {
  function SessionReport() {
    _classCallCheck(this, SessionReport);
    _defineProperty(this, "requestedURL", void 0);
    _defineProperty(this, "redirectedURL", void 0);
    _defineProperty(this, "sessionRunning", void 0);
    _defineProperty(this, "sessionCreated", void 0);
    _defineProperty(this, "sessionId", void 0);
    _defineProperty(this, "teardownActivated", void 0);
    _defineProperty(this, "smartLibParameters", void 0);
    // uuid, deviceType
    _defineProperty(this, "customParameters", void 0);
    // customParameters
    _defineProperty(this, "playerName", void 0);
    _defineProperty(this, "playerVersion", void 0);
    _defineProperty(this, "osName", void 0);
    _defineProperty(this, "osVersion", void 0);
    _defineProperty(this, "deviceType", void 0);
    _defineProperty(this, "smartLibVersion", void 0);
    _defineProperty(this, "networkTypeList", void 0);
    _defineProperty(this, "nanoCDNStatus", void 0);
    _defineProperty(this, "statusCode", void 0);
    _defineProperty(this, "cdnStatusCode", void 0);
    // http status code
    _defineProperty(this, "nanoCDNStatusCode", void 0);
    // http status code
    _defineProperty(this, "nanoCDNErrorCode", void 0);
    _defineProperty(this, "bpkhttpserverTiming", void 0);
    _defineProperty(this, "playerErrorCode", void 0);
    _defineProperty(this, "metrics", void 0);
    _defineProperty(this, "adMetrics", void 0);
    _defineProperty(this, "timeline", void 0);
    _defineProperty(this, "diversity", void 0);
    _defineProperty(this, "endSessionDate", void 0);
    // startSessionRequestDate;
    _defineProperty(this, "keepaliveRequestDate", void 0);
    _defineProperty(this, "teardownRequestDate", void 0);
    _defineProperty(this, "endSessionRequestDate", void 0);
    this.requestedURL = '';
    this.redirectedURL = '';
    this.sessionRunning = false;
    this.sessionCreated = false;
    this.sessionId = '';
    this.teardownActivated = false;
    this.smartLibParameters = {};
    this.customParameters = {};
    this.playerName = '';
    this.playerVersion = '';
    this.osName = '';
    this.osVersion = '';
    this.deviceType = '';
    this.smartLibVersion = _Version__WEBPACK_IMPORTED_MODULE_13__["default"];
    this.networkTypeList = [];
    this.nanoCDNStatus = _SessionHandler__WEBPACK_IMPORTED_MODULE_12__["default"].NANOCDN_STATUS_UNAVAILABLE;
    this.statusCode = _SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].BPSessionEndsNormally;
    this.cdnStatusCode = -1;
    this.nanoCDNStatusCode = -1;
    this.nanoCDNErrorCode = _streaming_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_18__.StreamingSessionResult.RESULT_NO_ERROR;
    this.bpkhttpserverTiming = -1;
    this.playerErrorCode = '';
    this.gdpr = _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_17__.StreamingSessionOptions.GDPR_CLEAR;
    if (_SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].analyticsModule !== undefined) {
      this.timeline = new _SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].analyticsModule.SessionTrackerTimeline();
    }
    this.endSessionDate = 0;

    // this.startSessionRequestDate = 0;
    this.keepaliveRequestDate = 0;
    this.teardownRequestDate = 0;
    this.endSessionRequestDate = 0;
  }
  _createClass(SessionReport, [{
    key: "toQuery",
    value: function toQuery() {
      var playerName = this.playerName === '' ? 'Generic' : this.playerName;
      var preStartupTime = this.customParameters['pre_startup_time'];

      // if GDPR preference is set to delete, do not send any other metrics
      if (this.gdpr === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_17__.StreamingSessionOptions.GDPR_DELETE) {
        return '+++++++++++++++++++++++++++++++++++++++1';
      }
      var query;
      if (this.metrics === undefined) {
        query = '-1+' + encodeURIComponent(playerName) + '+' + encodeURIComponent(this.playerVersion) + '+' + encodeURIComponent(this.osName) + '+' + encodeURIComponent(this.osVersion) + '+' + (this.smartLibParameters.deviceType !== '' ? encodeURIComponent(this.smartLibParameters.deviceType) : encodeURIComponent(this.deviceType)) + '+' + '-1+' + '-1+' + '-1+' + '+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '-1+' + '+';
      } else {
        query = this.metrics.redirectionTime + '+' + encodeURIComponent(playerName) + '+' + encodeURIComponent(this.playerVersion) + '+' + encodeURIComponent(this.osName) + '+' + encodeURIComponent(this.osVersion) + '+' + (this.smartLibParameters.deviceType !== '' ? encodeURIComponent(this.smartLibParameters.deviceType) : encodeURIComponent(this.deviceType)) + '+' + this.metrics.startupTime + '+' + this.metrics.completion + '+' + Math.round(this.metrics.playbackDuration / 1000) + '+' + this.metrics.playbackType + '+' + this.metrics.stallsNumber + '+' + this.metrics.maxStallDuration + '+' + this.metrics.totalStallsDuration + '+' + this.metrics.rebufferingsNumber + '+' + this.metrics.maxRebufferingDuration + '+' + this.metrics.totalRebufferingDuration + '+' + Math.round(this.metrics.maxBitrate) + '+' + Math.round(this.metrics.minBitrate) + '+' + Math.round(this.metrics.averageBitrate) + '+' + this.metrics.layerSwitchesNumber + '+' + Math.round(this.metrics.sessionDuration / 1000) + '+' + this.getTimeSpentPerLayerQuery() + '+';
      }
      query += encodeURIComponent(this.smartLibParameters.uuid) + '+' + this.nanoCDNStatus + '+' + (preStartupTime !== undefined ? encodeURIComponent(preStartupTime) : '') + '+' + encodeURIComponent(this.smartLibVersion) + '+';
      if (_SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].adModule !== undefined && this.adMetrics !== undefined && this.adMetrics.length > 0) {
        var metrics = _SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].adModule.AdMetrics.merge(this.adMetrics);
        query += (metrics.adSkippable ? 1 : 0) + '+' + (metrics.adSkipped ? 1 : 0) + '+' + (metrics.adProgress >= 0 ? metrics.adProgress / 25 : metrics.adProgress) + '+' + Math.round(metrics.adDuration / 1000) + '+' + metrics.stallsNumber + '+' + Math.round(metrics.stallsDuration / 1000) + '+' + metrics.layerSwitchesNumber + '+' + metrics.averageBitrate;
      } else {
        query += '+++++++';
      }
      query += '+' + this.getNetworkTypeListStr() + '+' + encodeURIComponent(this.playerErrorCode);
      query += '+' + (this.cdnStatusCode >= 0 ? this.cdnStatusCode : '') + '+' + (this.nanoCDNStatusCode >= 0 ? this.nanoCDNStatusCode : '') + '+' + this.bpkhttpserverTiming + '+' + this.gdpr;
      return query;
    }

    /* toStartSessionJSON() {
        let result = {};
         result[SessionReport.IS_START_TAG] = true;
        result[SessionReport.SESSION_ID_TAG] = this.sessionId;
        if (this.metrics !== undefined) {
            result[SessionReport.STARTUP_TIME_TAG] = this.metrics.startupTime;
        }
         return result;
    }*/
  }, {
    key: "toEndSessionJSON",
    value: function toEndSessionJSON() {
      var result = {};
      result[SessionReport.IS_START_TAG] = false;
      result[SessionReport.GDPR_TAG] = this.gdpr;
      if (this.gdpr === _streaming_StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_17__.StreamingSessionOptions.GDPR_DELETE) {
        // if GDPR preference is set to delete, do not send any other metrics
        return result;
      }
      result[SessionReport.SESSION_ID_TAG] = this.sessionId;
      result[SessionReport.STATUS_CODE_TAG] = this.statusCode;
      result[SessionReport.CONTENT_URL_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.requestedURL);
      if (this.redirectedURL.includes(_ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_15__["default"].AD_NONCE_QUERY_PARAMETER)) {
        result[SessionReport.REDIRECT_URL_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(_utils_RequestUtils__WEBPACK_IMPORTED_MODULE_14__["default"].addOrReplaceParam(this.redirectedURL, _ad_InternalAdManager__WEBPACK_IMPORTED_MODULE_15__["default"].AD_NONCE_QUERY_PARAMETER, 'ignored'));
      } else {
        result[SessionReport.REDIRECT_URL_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.redirectedURL);
      }
      if (this.metrics !== undefined) {
        result[SessionReport.REDIRECTION_TIME_TAG] = this.metrics.redirectionTime;
        result[SessionReport.STARTUP_TIME_TAG] = this.metrics.startupTime;
        result[SessionReport.COMPLETION_TAG] = this.metrics.completion;
        result[SessionReport.PLAYED_TIME_TAG] = Math.round(this.metrics.playbackDuration / 1000);
        result[SessionReport.DURATION_TAG] = Math.round(this.metrics.sessionDuration / 1000);
        result[SessionReport.PLAYBACK_TYPE_TAG] = this.metrics.playbackType;
        result[SessionReport.NUMBER_OF_STALLS_TAG] = this.metrics.stallsNumber;
        result[SessionReport.MAX_STALL_TIME_TAG] = this.metrics.maxStallDuration;
        result[SessionReport.TOTAL_STALL_TIME_TAG] = this.metrics.totalStallsDuration;
        result[SessionReport.NUMBER_OF_REBUFFERING_TAG] = this.metrics.rebufferingsNumber;
        result[SessionReport.MAX_REBUFFERING_TIME_TAG] = this.metrics.maxRebufferingDuration;
        result[SessionReport.TOTAL_REBUFFERING_TIME_TAG] = this.metrics.totalRebufferingDuration;
        result[SessionReport.MIN_BITRATE_TAG] = Math.round(this.metrics.minBitrate);
        result[SessionReport.MAX_BITRATE_TAG] = Math.round(this.metrics.maxBitrate);
        result[SessionReport.AVERAGE_BITRATE_TAG] = Math.round(this.metrics.averageBitrate);
        result[SessionReport.NUMBER_OF_LAYER_SWITCH_TAG] = this.metrics.layerSwitchesNumber;
        result[SessionReport.TIME_SPENT_PER_LAYER_TAG] = this.metrics.timeSpentPerLayer;
      } else {
        result[SessionReport.REDIRECTION_TIME_TAG] = -1;
        result[SessionReport.STARTUP_TIME_TAG] = -1;
        result[SessionReport.COMPLETION_TAG] = -1;
        result[SessionReport.PLAYED_TIME_TAG] = -1;
        result[SessionReport.DURATION_TAG] = -1;
        result[SessionReport.PLAYBACK_TYPE_TAG] = '';
        result[SessionReport.NUMBER_OF_STALLS_TAG] = -1;
        result[SessionReport.MAX_STALL_TIME_TAG] = -1;
        result[SessionReport.TOTAL_STALL_TIME_TAG] = -1;
        result[SessionReport.NUMBER_OF_REBUFFERING_TAG] = -1;
        result[SessionReport.MAX_REBUFFERING_TIME_TAG] = -1;
        result[SessionReport.TOTAL_REBUFFERING_TIME_TAG] = -1;
        result[SessionReport.MIN_BITRATE_TAG] = -1;
        result[SessionReport.MAX_BITRATE_TAG] = -1;
        result[SessionReport.AVERAGE_BITRATE_TAG] = -1;
        result[SessionReport.NUMBER_OF_LAYER_SWITCH_TAG] = -1;
        result[SessionReport.TIME_SPENT_PER_LAYER_TAG] = {};
      }
      result[SessionReport.PLAYER_NAME_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.playerName);
      result[SessionReport.PLAYER_VERSION_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.playerVersion);
      result[SessionReport.DEVICE_OS_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.osName);
      result[SessionReport.DEVICE_VERSION_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.osVersion);
      if (this.smartLibParameters.deviceType !== '') {
        result[SessionReport.DEVICE_TYPE] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.smartLibParameters.deviceType);
      } else {
        result[SessionReport.DEVICE_TYPE] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.deviceType);
      }
      result[SessionReport.UUID_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.smartLibParameters.uuid);
      result[SessionReport.NANOCDN_STATUS_TAG] = this.nanoCDNStatus;
      result[SessionReport.CUSTOM_PARAMETERS_TAG] = this.customParameters;
      if (this.timeline !== undefined) {
        result[SessionReport.TIMELINE_TAG] = this.timeline.data().base64();
      } else {
        result[SessionReport.TIMELINE_TAG] = '';
      }
      result[SessionReport.SMARTLIB_VERSION_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.smartLibVersion);
      result[SessionReport.MULTIPATH_TAG] = this.diversity;
      result[SessionReport.PLAYER_ERROR_CODE_TAG] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_16__["default"].toBkAString(this.playerErrorCode);
      result[SessionReport.AD_METRICS_TAG] = [];
      if (this.adMetrics !== undefined && this.adMetrics.length > 0) {
        for (var i = 0; i < this.adMetrics.length; i++) {
          var metrics = this.adMetrics[i];
          result[SessionReport.AD_METRICS_TAG].push({
            'ad_skippable': metrics.adSkippable ? 1 : 0,
            'ad_skipped': metrics.adSkipped ? 1 : 0,
            'ad_progress': metrics.adProgress >= 0 ? metrics.adProgress / 25 : metrics.adProgress,
            'ad_duration': Math.round(metrics.adDuration / 1000),
            'stalls_number': metrics.stallsNumber,
            'stalls_duration': Math.round(metrics.stallsDuration / 1000),
            'layer_switches_number': metrics.layerSwitchesNumber,
            'average_bitrate': metrics.averageBitrate,
            'session_token': metrics.sessionToken,
            'creative_id': metrics.creativeId,
            'ad_id': metrics.adId
          });
        }
      }
      result[SessionReport.NETWORK_TYPE_TAG] = this.getNetworkTypeListStr();
      result[SessionReport.CDN_STATUS_CODE] = this.cdnStatusCode >= 0 ? this.cdnStatusCode : '';
      result[SessionReport.NANOCDN_STATUS_CODE] = this.nanoCDNStatusCode >= 0 ? this.nanoCDNStatusCode : '';
      result[SessionReport.BPKHTTPSERVER_TIMING] = this.bpkhttpserverTiming;
      return result;
    }
  }, {
    key: "getTimeSpentPerLayerQuery",
    value: function getTimeSpentPerLayerQuery() {
      var result = '';
      for (var bitrate in this.metrics.timeSpentPerLayer) {
        if (result !== '') {
          result += ',';
        }
        result += bitrate + ':' + this.metrics.timeSpentPerLayer[bitrate];
      }
      return result;
    }
  }, {
    key: "addNetworkType",
    value: function addNetworkType(networkType) {
      if (!this.networkTypeList.includes(networkType)) {
        this.networkTypeList.push(networkType);
      }
    }
  }, {
    key: "getNetworkTypeListStr",
    value: function getNetworkTypeListStr() {
      if (this.networkTypeList.length > 0) {
        return this.networkTypeList.sort().join('-');
      }
      return '';
    }
  }, {
    key: "toString",
    value: function toString() {
      return JSON.stringify(this, function (key, value) {
        if (key === 'timeline' && _SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].analyticsModule !== undefined && value instanceof _SmartLib__WEBPACK_IMPORTED_MODULE_11__["default"].analyticsModule.SessionTrackerTimeline) {
          return value.toString();
        } else if (value === undefined) {
          return 'undefined';
        }
        return value;
      }, '  ');
    }
  }]);
  return SessionReport;
}();
_defineProperty(SessionReport, "SESSION_ID_TAG", 'session_id');
_defineProperty(SessionReport, "IS_START_TAG", 'start');
_defineProperty(SessionReport, "STATUS_CODE_TAG", 'status_code');
_defineProperty(SessionReport, "STARTUP_TIME_TAG", 'startup_time');
_defineProperty(SessionReport, "REDIRECTION_TIME_TAG", 'redirection_time');
_defineProperty(SessionReport, "COMPLETION_TAG", 'completion');
_defineProperty(SessionReport, "PLAYED_TIME_TAG", 'played_time');
_defineProperty(SessionReport, "DURATION_TAG", 'duration');
_defineProperty(SessionReport, "PLAYBACK_TYPE_TAG", 'playback_type');
_defineProperty(SessionReport, "NUMBER_OF_STALLS_TAG", 'cnt_stall');
_defineProperty(SessionReport, "TOTAL_STALL_TIME_TAG", 'total_stall_time');
_defineProperty(SessionReport, "MAX_STALL_TIME_TAG", 'max_stall_time');
_defineProperty(SessionReport, "NUMBER_OF_REBUFFERING_TAG", 'cnt_rebuffering');
_defineProperty(SessionReport, "TOTAL_REBUFFERING_TIME_TAG", 'total_rebuffering_time');
_defineProperty(SessionReport, "MAX_REBUFFERING_TIME_TAG", 'max_rebuffering_time');
_defineProperty(SessionReport, "REDIRECT_URL_TAG", 'redirect_url');
_defineProperty(SessionReport, "CONTENT_URL_TAG", 'content_url');
_defineProperty(SessionReport, "MAX_BITRATE_TAG", 'max_bitrate');
_defineProperty(SessionReport, "MIN_BITRATE_TAG", 'min_bitrate');
_defineProperty(SessionReport, "AVERAGE_BITRATE_TAG", 'average_bitrate');
_defineProperty(SessionReport, "NUMBER_OF_LAYER_SWITCH_TAG", 'cnt_layer_switch');
_defineProperty(SessionReport, "TIME_SPENT_PER_LAYER_TAG", 'time_spent_per_layer');
_defineProperty(SessionReport, "PLAYER_NAME_TAG", 'player_name');
_defineProperty(SessionReport, "PLAYER_VERSION_TAG", 'player_version');
_defineProperty(SessionReport, "DEVICE_OS_TAG", 'device_os');
_defineProperty(SessionReport, "DEVICE_VERSION_TAG", 'device_version');
_defineProperty(SessionReport, "DEVICE_TYPE", 'device_type');
_defineProperty(SessionReport, "MULTIPATH_TAG", 'multipath');
_defineProperty(SessionReport, "UUID_TAG", 'uuid');
_defineProperty(SessionReport, "NANOCDN_STATUS_TAG", 'nano_status');
_defineProperty(SessionReport, "CUSTOM_PARAMETERS_TAG", 'custom_parameters');
_defineProperty(SessionReport, "TIMELINE_TAG", 'timeline');
_defineProperty(SessionReport, "SMARTLIB_VERSION_TAG", 'smartlib_version');
_defineProperty(SessionReport, "AD_METRICS_TAG", 'ad_metrics');
_defineProperty(SessionReport, "NETWORK_TYPE_TAG", 'network_type_list');
_defineProperty(SessionReport, "PLAYER_ERROR_CODE_TAG", 'player_error_code');
_defineProperty(SessionReport, "CDN_STATUS_CODE", 'cdn_status_code');
_defineProperty(SessionReport, "NANOCDN_STATUS_CODE", 'nanocdn_status_code');
_defineProperty(SessionReport, "BPKHTTPSERVER_TIMING", 'bpkhttpserver_timing');
_defineProperty(SessionReport, "GDPR_TAG", 'gdpr');


/***/ }),

/***/ "./src_core/session/streaming/StreamingSession.js":
/*!********************************************************!*\
  !*** ./src_core/session/streaming/StreamingSession.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StreamingSession: function() { return /* binding */ StreamingSession; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.filter.js */ "./node_modules/core-js/modules/es.array.filter.js");
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.json.stringify.js */ "./node_modules/core-js/modules/es.json.stringify.js");
/* harmony import */ var core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_json_stringify_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.promise.js */ "./node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _ad_AdManager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../ad/AdManager */ "./src_core/ad/AdManager.js");
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./StreamingSessionOptions */ "./src_core/session/streaming/StreamingSessionOptions.js");
/* harmony import */ var _StreamingSessionResult__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./StreamingSessionResult */ "./src_core/session/streaming/StreamingSessionResult.js");
/* harmony import */ var _ProxySessionHandler__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ProxySessionHandler */ "./src_core/session/ProxySessionHandler.js");
/* harmony import */ var _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/ValidatorUtils */ "./src_core/utils/ValidatorUtils.js");
/* harmony import */ var _utils_MathUtils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/MathUtils */ "./src_core/utils/MathUtils.js");
/* harmony import */ var _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../ad/AdSession */ "./src_core/ad/AdSession.js");
/* harmony import */ var _SmartLib__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../SmartLib */ "./src_core/SmartLib.js");









function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// import {AdFriendlyObstructionPurpose, AdViewState, LoggerManager, StreamingSessionOptions, StreamingSessionResult} from '../..';









var TAG = 'BpkStreamingSession';

/**
 * Once a session has been created, all next calls have to be done on that object.
 * The "getURL" way will also use the StreamingSession API internally with the actual “one session at a time” limitation (i.e only 1 StreamingSession object stored).
 */
var StreamingSession = /*#__PURE__*/function () {
  function StreamingSession(smartLib, options) {
    _classCallCheck(this, StreamingSession);
    _defineProperty(this, "smartLib", void 0);
    _defineProperty(this, "options", void 0);
    _defineProperty(this, "customParameters", void 0);
    _defineProperty(this, "adSession", void 0);
    _defineProperty(this, "id", void 0);
    _defineProperty(this, "date", void 0);
    _defineProperty(this, "handler", void 0);
    _defineProperty(this, "playerAdapter", void 0);
    _defineProperty(this, "stopped", void 0);
    _defineProperty(this, "multicastStatusListener", void 0);
    this.smartLib = smartLib;
    this.options = options;
    this.customParameters = {};
    this.id = _utils_MathUtils__WEBPACK_IMPORTED_MODULE_15__["default"].randomIntFromInterval(10000, 99999);
    this.date = Date.now();
    this.stopped = false;
  }

  /**
   * Attach a player to the session to handle analytics
   *
   * <p>Workflow: attachPlayer(...) -> getURL(...) -> session is playing -> stopStreamingSession()</p>
   * <p>Note: call before getURL</p>
   *
   * @param player Player instance
   * @param listener Listener instance (depending on the player you use)
   */
  _createClass(StreamingSession, [{
    key: "attachPlayer",
    value: function attachPlayer(player, listener) {
      /* if (player instanceof GenericPlayerAdapter) {
          LoggerManager.e(TAG, 'SmartLib Generic is not yet compatible, please ask Broadpeak for further information.', this.id);
           return;
      }*/

      if (player !== undefined) {
        if (this.handler === undefined) {
          this.playerAdapter = player;
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.i(TAG, 'Player ' + this.playerAdapter.getName() + ' attached', this.id);
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Exception: attachPlayer error, you cannot attach a player when a session is running.', this.id);
        }
      } else {
        if (_SmartLib__WEBPACK_IMPORTED_MODULE_17__["default"].analyticsModule === undefined) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.w(TAG, 'Try to attach a player, but analytics module not loaded', this.id);
        } else {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.w(TAG, 'Try to attach a player, but it is not recognized', this.id);
        }
      }
    }

    /**
     * Set an option for the current session. It does not replace values at the global level.
     *
     * <p>Note: It has to be called before getQuery and getURL.</p>
     *
     * @param option The option to update. The list if available as static constants values in class StreamingSessionOptions.
     * @param value Option value
     */
  }, {
    key: "setOption",
    value: function setOption(option, value) {
      if (this.handler === undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Setting session option ' + _StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.optionToString(option) + ' to ' + _StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.valueToString(option, value), this.id);
        this.options.set(option, value);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Exception: setOption error, you cannot set an option when a session is running.', this.id);
      }
    }

    /**
     * Set the ad events listener
     *
     * @param listener Ad events listener
     */
  }, {
    key: "setAdEventsListener",
    value: function setAdEventsListener(listener) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      this.adSession.setAdEventsListener(listener);
    }

    /**
     * Set the ad data listener
     *
     * @param listener Ad data listener
     */
  }, {
    key: "setAdDataListener",
    value: function setAdDataListener(listener) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      this.adSession.setAdDataListener(listener);
    }

    /**
     * Activate advertising workflow (including analytics and tracking)
     * The method setAdParameter automatically calls this method
     */
  }, {
    key: "activateAdvertising",
    value: function activateAdvertising() {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      this.adSession.activateAdvertising();
    }

    /**
     * This method set a parameter used for the ad insertion
     * Activate the advertising workflow
     *
     * @param name  Parameter name
     * @param value Parameter value
     */
  }, {
    key: "setAdParameter",
    value: function setAdParameter(name, value) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      this.adSession.setAdParameter(name, value);
    }

    /**
     * Set ad view
     * Use undefined to unset the ad view
     *
     * @param view id or view object
     */
  }, {
    key: "setAdView",
    value: function setAdView(view) {
      var _this$handler;
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }

      // Update value used for next ad
      this.adSession.adView = view;

      // Update value if an ad is playing
      (_this$handler = this.handler) === null || _this$handler === void 0 || (_this$handler = _this$handler.omSessionHandler) === null || _this$handler === void 0 || (_this$handler = _this$handler.omAdSession) === null || _this$handler === void 0 || _this$handler.setAdView(view);
    }

    /**
     * Set ad view state
     * @param state AdViewState
     */
  }, {
    key: "setAdViewState",
    value: function setAdViewState(state) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      if (_ad_AdManager__WEBPACK_IMPORTED_MODULE_9__.AdViewState.isAdViewState(state) === true) {
        var _this$handler2;
        // Update value used for next ad
        this.adSession.adViewState = state;

        // Update value if an ad is playing
        (_this$handler2 = this.handler) === null || _this$handler2 === void 0 || (_this$handler2 = _this$handler2.omSessionHandler) === null || _this$handler2 === void 0 || (_this$handler2 = _this$handler2.omAdSession) === null || _this$handler2 === void 0 || _this$handler2.setAdViewState(state);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Please use a defined state within the AdViewState enum.', this.id);
      }
    }

    /**
     * Register an ad friendly obstruction view
     * @param view id or view object
     * @param purpose friendly obstruction purpose
     * @param reason friendly obstruction reason as string
     */
  }, {
    key: "registerAdFriendlyObstructionView",
    value: function registerAdFriendlyObstructionView(view, purpose, reason) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      if (_ad_AdManager__WEBPACK_IMPORTED_MODULE_9__.AdFriendlyObstructionPurpose.isAdFriendlyObstructionPurpose(purpose) && typeof reason === 'string') {
        var _this$handler3;
        // Update value used for next ad
        this.adSession.adFriendlyObstructionViews.push({
          view: view,
          purpose: purpose,
          reason: reason
        });

        // Update value if an ad is playing
        (_this$handler3 = this.handler) === null || _this$handler3 === void 0 || (_this$handler3 = _this$handler3.omSessionHandler) === null || _this$handler3 === void 0 || (_this$handler3 = _this$handler3.omAdSession) === null || _this$handler3 === void 0 || _this$handler3.registerAdFriendlyObstructionView(view, purpose, reason);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Ad friendly objection view not registered, please check arguments types: ' + 'purpose -> state within the AdFriendlyObstructionPurpose enum, reason -> string', this.id);
      }
    }
  }, {
    key: "unregisterFriendlyObstruction",
    value: function unregisterFriendlyObstruction(view) {
      if (this.adSession !== undefined) {
        var _this$handler4;
        // Update value used for next ad
        this.adSession.adFriendlyObstructionViews = this.adSession.adFriendlyObstructionViews.filter(function (item) {
          return item.view !== view;
        });

        // Update value if an ad is playing
        (_this$handler4 = this.handler) === null || _this$handler4 === void 0 || (_this$handler4 = _this$handler4.omSessionHandler) === null || _this$handler4 === void 0 || (_this$handler4 = _this$handler4.omAdSession) === null || _this$handler4 === void 0 || _this$handler4.unregisterFriendlyObstruction(view);
      }
    }
  }, {
    key: "unregisterAllFriendlyObstructions",
    value: function unregisterAllFriendlyObstructions() {
      if (this.adSession !== undefined) {
        var _this$handler5;
        // Update value used for next ad
        this.adSession.adFriendlyObstructionViews = [];

        // Update value if an ad is playing
        (_this$handler5 = this.handler) === null || _this$handler5 === void 0 || (_this$handler5 = _this$handler5.omSessionHandler) === null || _this$handler5 === void 0 || (_this$handler5 = _this$handler5.omAdSession) === null || _this$handler5 === void 0 || _this$handler5.unregisterAllFriendlyObstructions();
      }
    }

    /**
     * Set custom reference that will be send to the OM SDK
     * @param reference reference as string
     */
  }, {
    key: "setAdCustomReference",
    value: function setAdCustomReference(reference) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      if (typeof reference === 'string') {
        var _this$handler6;
        this.adSession.adCustomReference = reference;
        if (((_this$handler6 = this.handler) === null || _this$handler6 === void 0 || (_this$handler6 = _this$handler6.omSessionHandler) === null || _this$handler6 === void 0 ? void 0 : _this$handler6.omAdSession) !== undefined) {
          _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.w(TAG, 'An ad is already playing, the ad custom reference "' + reference + '" will be set for the next ad', this.id);
        }
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Ad custom reference not set, reference argument has to be a string', this.id);
      }
    }
  }, {
    key: "registerAdVerificationData",
    value: function registerAdVerificationData(url) {
      var _this$handler7;
      var vendor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      var parameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      var adVerificationData = {
        verificationVendor: vendor,
        verificationURL: url,
        verificationParameters: parameters
      };
      this.adSession.adVerificationData.push(adVerificationData);
      if (((_this$handler7 = this.handler) === null || _this$handler7 === void 0 || (_this$handler7 = _this$handler7.omSessionHandler) === null || _this$handler7 === void 0 ? void 0 : _this$handler7.omAdSession) !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.w(TAG, 'An ad is already playing, the ad verification data "' + JSON.stringify(adVerificationData) + '" will be set for the next ad', this.id);
      }
    }
  }, {
    key: "adUserInteraction",
    value: function adUserInteraction(interactionType) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      if (typeof interactionType === 'string') {
        var _this$handler8, _this$adSession$adPal, _this$handler9;
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Ad interaction: ' + interactionType, this.id);
        (_this$handler8 = this.handler) === null || _this$handler8 === void 0 || (_this$handler8 = _this$handler8.adTrackingManager) === null || _this$handler8 === void 0 || _this$handler8.adUserInteraction(interactionType);
        (_this$adSession$adPal = this.adSession.adPalSession) === null || _this$adSession$adPal === void 0 || _this$adSession$adPal.sendAdClick();
        if (((_this$handler9 = this.handler) === null || _this$handler9 === void 0 || (_this$handler9 = _this$handler9.omSessionHandler) === null || _this$handler9 === void 0 ? void 0 : _this$handler9.omAdSession) !== undefined) {
          this.handler.omSessionHandler.omAdSession.adUserInteraction(interactionType);
        } /* else {
             LoggerManager.w(TAG, 'Ad interaction type not triggered, no ad in progress', this.id);
          }*/
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Ad interaction type not triggered, interactionType argument has to be a string', this.id);
      }
    }
  }, {
    key: "adTouch",
    value: function adTouch(motionEvent) {
      var _this$adSession$adPal2;
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Ad touch', this.id);
      (_this$adSession$adPal2 = this.adSession.adPalSession) === null || _this$adSession$adPal2 === void 0 || _this$adSession$adPal2.sendTouch(motionEvent);
    }

    /**
     * Set a custom parameter to be added to the session report
     *
     * Note: Only sent during non-Broadpeak sessions
     *
     * @param name Parameter name
     * @param value Parameter value
     */
  }, {
    key: "setCustomParameter",
    value: function setCustomParameter(name, value) {
      if (typeof name === 'string') {
        this.customParameters[name] = _utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_14__["default"].toBkAString(String(value));
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Error: Only string values are accepted for custom parameters', this.id);
      }
    }

    /**
     * If enabled (true by default), SmartLib will parse urls contained in:
     *   - Dash: urn:mpeg:dash:event:callback:2015
     *   - HLS: not implemented
     *
     * @param eventCallbackEnabled enabled
     */
  }, {
    key: "setEventCallbackEnabled",
    value: function setEventCallbackEnabled(eventCallbackEnabled) {
      if (this.adSession === undefined) {
        this.adSession = new _ad_AdSession__WEBPACK_IMPORTED_MODULE_16__.AdSession();
      }
      this.adSession.setEventCallbackEnabled(eventCallbackEnabled);
    }

    /**
     * getURL (session start, default method)
     *
     * <p>Create a session on the Broadpeak CDN, create a session on the nanoCDN, identify if a non-Broadpeak CDN is used</p>
     *
     * <p>Workflow: getURL() -> session is running -> stopStreamingSession()</p>
     * <p>Note: To be called to start any viewing session</p>
     *
     * @param requestedURL Requested URL (i.e http://hostname/manifest)
     * @return result
     */
  }, {
    key: "getURL",
    value: function getURL(requestedURL) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.i(TAG, 'getURL with ' + requestedURL, this.id);
      if (this.handler === undefined) {
        // Default getURL
        if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_14__["default"].typeParameter(requestedURL, 'string', 'Error: requestedURL should be a string') || !_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_14__["default"].stringNonEmpty(requestedURL, 'Error: requestedURL is empty')) {
          return Promise.resolve(_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_12__.StreamingSessionResult.error(_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_12__.StreamingSessionResult.RESULT_API_PARAMETER_FORMAT_ERROR));
        }
        this.handler = this.smartLib.sessionManager.createSessionHandler(this);
        this.handler.adSession = this.adSession;
        if (this.adSession !== undefined) {
          this.adSession.handler = this.handler;
        }
        return this.handler.start(requestedURL);
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Exception: getURL error, the session is already running.', this.id);
      return Promise.resolve(_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_12__.StreamingSessionResult.error(_StreamingSessionResult__WEBPACK_IMPORTED_MODULE_12__.StreamingSessionResult.RESULT_REQUEST_ALREADY_DONE));
    }

    /**
     * getQuery (session start, proxy mode, first call)
     *
     * <p>Call this method just before creating your session, append the result to your requested URL</p>
     *
     * <p>Workflow: getQuery() -> handle session creation by your side -> startStreamingSession(...) -> session is running -> stopStreamingSession()</p>
     * <p>Note: Not compatible in case of nanoCDN workflow, works with startStreamingSession</p>
     *
     * @return Query parameters to pass to the Broadpeak CDN through your proxy (i.e "bk-ml=1&smartlib-parameter=dev")
     */
  }, {
    key: "getQuery",
    value: function getQuery() {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.i(TAG, 'getQuery', this.id);
      if (this.handler === undefined) {
        this.handler = this.smartLib.sessionManager.createProxySessionHandler(this);
        return this.handler.getQuery();
      }
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Exception: getQuery error, the session is already running.', this.id);
      return '';
    }

    /**
     * startStreamingSession (session start, proxy mode, second call)
     *
     * <p>Workflow: getQuery() -> handle session creation by your side -> startStreamingSession(...) -> session is running -> stopStreamingSession()</p>
     * <p>Note: Only works if getQuery() has been called</p>
     *
     * @param requestedURL Requested URL, url called by your side
     * @param redirectedURL Stream URL, url retrieved by the proxy
     */
  }, {
    key: "startStreamingSession",
    value: function startStreamingSession(requestedURL, redirectedURL) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.i(TAG, 'startStreamingSession with ' + requestedURL + ' and ' + redirectedURL, this.id);
      if (!_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_14__["default"].typeParameter(requestedURL, 'string', 'Error: requestedURL should be a string') || !_utils_ValidatorUtils__WEBPACK_IMPORTED_MODULE_14__["default"].typeParameter(redirectedURL, 'string', 'Error: redirectedURL should be a string')) {
        return false;
      }
      if (this.handler === undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Exception: startSteamingSession error, getQuery() should be called prior to startStreamingSession(...)');
        return false;
      }
      if (!(this.handler instanceof _ProxySessionHandler__WEBPACK_IMPORTED_MODULE_13__["default"])) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.e(TAG, 'Exception: startSteamingSession error, startStreamingSession(...) cannot be called once getURL(...) has been called');
        return false;
      }
      this.handler.start(requestedURL, redirectedURL);
      return true;
    }

    /**
     * Call this method after each session.
     *
     * @param statusCode Optional parameter to specify session status code (i.e SmartLib.BPNetworkingError)
     * @return Session report
     */
  }, {
    key: "stopStreamingSession",
    value: function stopStreamingSession(statusCode) {
      if (statusCode !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.i(TAG, 'Stopping streaming session with statusCode ' + statusCode + '...', this.id);
      } else {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.i(TAG, 'Stopping streaming session...', this.id);
      }
      if (this.handler !== undefined) {
        this.handler.stop(statusCode);
      }
      if (this.playerAdapter !== undefined) {
        this.playerAdapter.detachPlayer();
      }
      this.stopped = true;
      return this.handler;
    }

    /**
     * Is the session started on a nanoCDN
     * @returns {boolean} true if a nanoCDN is used
     */
  }, {
    key: "isNanoCDNUsed",
    value: function isNanoCDNUsed() {
      if (this.handler !== undefined) {
        return this.handler.isNanoCDNUsed();
      }
      return false;
    }

    /**
     * Get the video multicast status
     * Value based on a nanoCDN info and will be updated every 5 seconds
     * Note that it is always false when not using a nanoCDN
     * @returns {number} multicast status (defined in StreamingSessionOptions)
     */
  }, {
    key: "getVideoMulticastStatus",
    value: function getVideoMulticastStatus() {
      if (this.handler !== undefined) {
        return this.handler.videoMulticastStatus;
      }
      return _StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.MULTICAST_INACTIVE;
    }

    /**
     * Get the audio multicast status
     * Value based on a nanoCDN info and will be updated every 5 seconds
     * Note that it is always false when not using a nanoCDN
     * @returns {number} multicast status (defined in StreamingSessionOptions)
     */
  }, {
    key: "getAudioMulticastStatus",
    value: function getAudioMulticastStatus() {
      if (this.handler !== undefined) {
        return this.handler.audioMulticastStatus;
      }
      return _StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.MULTICAST_INACTIVE;
    }

    /**
     * Get the data multicast status
     * Value based on a nanoCDN info and will be updated every 5 seconds
     * Note that it is always false when not using a nanoCDN
     * @returns {number} multicast status (defined in StreamingSessionOptions)
     */
  }, {
    key: "getDataMulticastStatus",
    value: function getDataMulticastStatus() {
      if (this.handler !== undefined) {
        return this.handler.dataMulticastStatus;
      }
      return _StreamingSessionOptions__WEBPACK_IMPORTED_MODULE_11__.StreamingSessionOptions.MULTICAST_INACTIVE;
    }

    /**
     * Set multicast status listener
     *
     * @param listener Multicast events listener
     */
  }, {
    key: "setMulticastStatusListener",
    value: function setMulticastStatusListener(listener) {
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_10__.LoggerManager.d(TAG, 'Multicast status listener ' + (listener !== undefined ? 'set' : 'unset'), this.id);
      this.multicastStatusListener = listener;
    }

    /**
     * Return the current ad list
     * It can be called after or inside onAdData event
     * @returns {[]|*|*[]} list of ad breaks
     */
  }, {
    key: "getAdList",
    value: function getAdList() {
      var _this$handler10;
      return ((_this$handler10 = this.handler) === null || _this$handler10 === void 0 || (_this$handler10 = _this$handler10.adTrackingManager) === null || _this$handler10 === void 0 ? void 0 : _this$handler10.adList) || [];
    }

    /**
     * Return the current ad
     * @returns {*} current ad or undefined
     */
  }, {
    key: "getCurrentAd",
    value: function getCurrentAd() {
      var _this$handler11;
      return (_this$handler11 = this.handler) === null || _this$handler11 === void 0 || (_this$handler11 = _this$handler11.adTrackingManager) === null || _this$handler11 === void 0 ? void 0 : _this$handler11.getCurrentAd();
    }

    /**
     * Return the current ad break
     * @returns {*} current ad break or undefined
     */
  }, {
    key: "getCurrentAdBreak",
    value: function getCurrentAdBreak() {
      var _this$handler12;
      return (_this$handler12 = this.handler) === null || _this$handler12 === void 0 || (_this$handler12 = _this$handler12.adTrackingManager) === null || _this$handler12 === void 0 ? void 0 : _this$handler12.getCurrentAdBreak();
    }

    /**
     * Return the current position within the content without ads
     * This position can be saved to be restored later through getPositionForPlayback(positionInBookmark)
     * For VOD contents only
     *
     * @returns {number} Position in milliseconds in the content without ads
     */
  }, {
    key: "getPositionForBookmark",
    value: function getPositionForBookmark() {
      var _this$handler13;
      var position = (_this$handler13 = this.handler) === null || _this$handler13 === void 0 || (_this$handler13 = _this$handler13.adTrackingManager) === null || _this$handler13 === void 0 ? void 0 : _this$handler13.getPositionForBookmark();
      return position !== undefined ? position : -1;
    }

    /**
     * Return the position following current ads with the position in the content without ads
     * Can be called after or inside onAdData
     * For VOD contents only
     *
     * @param positionInBookmark position in milliseconds in the content without ad (with the stored value got from the method getPositionForBookmark())
     * @returns {number} Position following current ads in milliseconds
     */
  }, {
    key: "getPositionForPlayback",
    value: function getPositionForPlayback(positionInBookmark) {
      var _this$handler14;
      var position = (_this$handler14 = this.handler) === null || _this$handler14 === void 0 || (_this$handler14 = _this$handler14.adTrackingManager) === null || _this$handler14 === void 0 ? void 0 : _this$handler14.getPositionForPlayback(Number(positionInBookmark));
      return position !== undefined ? position : -1;
    }
  }]);
  return StreamingSession;
}();

/***/ }),

/***/ "./src_core/session/streaming/StreamingSessionOptions.js":
/*!***************************************************************!*\
  !*** ./src_core/session/streaming/StreamingSessionOptions.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StreamingSessionOptions: function() { return /* binding */ StreamingSessionOptions; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ "./node_modules/core-js/modules/web.dom-collections.for-each.js");
/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.array.filter.js */ "./node_modules/core-js/modules/es.array.filter.js");
/* harmony import */ var core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor.js */ "./node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors.js */ "./node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptors_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/LoggerManager */ "./src_core/utils/LoggerManager.js");
/* harmony import */ var _request_RequestManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../request/RequestManager */ "./src_core/request/RequestManager.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }











function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var TAG = 'BpkStreamingSessionOptions';

/**
 * Once a session has been created, all next calls have to be done on that object.
 * The "getURL" way will also use the StreamingSession API internally with the actual “one session at a time” limitation (i.e only 1 StreamingSession object stored).
 */
var StreamingSessionOptions = /*#__PURE__*/function () {
  function StreamingSessionOptions() {
    _classCallCheck(this, StreamingSessionOptions);
    /**
     * Option's values
     */
    _defineProperty(this, "options", void 0);
    _defineProperty(this, "updates", void 0);
    this.options = {};

    // Default values
    this.options[StreamingSessionOptions.MULTICAST_ONLY] = false;
    this.options[StreamingSessionOptions.ULTRA_LOW_LATENCY_SUPPORT] = false;
    this.options[StreamingSessionOptions.PIP_SESSION] = false;
    this.options[StreamingSessionOptions.GDPR_PREFERENCE] = StreamingSessionOptions.GDPR_CLEAR;
    this.options[StreamingSessionOptions.REQUEST_REDIRECT_THIRD_PARTY_CDN] = false;
    this.options[StreamingSessionOptions.REQUEST_DIVERSITY] = false;
    this.options[StreamingSessionOptions.REQUEST_NANO_CDN] = true;
    this.options[StreamingSessionOptions.REQUEST_BROADPEAK_CDN] = true;
    this.options[StreamingSessionOptions.REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI] = true;
    this.options[StreamingSessionOptions.REQUEST_DIVERSITY_DYNAMIC_FAILOVER] = false;
    this.options[StreamingSessionOptions.REQUEST_NANO_CDN_DURING_GET_QUERY] = true;
    this.options[StreamingSessionOptions.REQUEST_BKYOU_IF_BROADPEAK_CDN] = false;
    this.options[StreamingSessionOptions.REQUEST_NANO_CDN_PRIORITY] = StreamingSessionOptions.PRIORITY_NANO_CDN_CONF;
    this.options[StreamingSessionOptions.SESSION_KEEPALIVE] = StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN;
    this.options[StreamingSessionOptions.SESSION_TEARDOWN] = StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN;
    this.options[StreamingSessionOptions.SESSION_REPORTING_MODE] = StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT;
    this.options[StreamingSessionOptions.SESSION_KEEPALIVE_FREQUENCY] = _request_RequestManager__WEBPACK_IMPORTED_MODULE_12__["default"].KEEPALIVE_REQUEST_INTERVAL;
    this.options[StreamingSessionOptions.USERAGENT_AD_EVENT] = undefined;

    // this.options[StreamingSessionOptions.CDN_EDGE_PARSER] = '';

    this.options[StreamingSessionOptions.TIMEOUT_NANO_CDN_REQUEST_ROUTER] = 2000;
    this.options[StreamingSessionOptions.TIMEOUT_NANO_CDN_STATIC_RESOLVING] = 3000;
    this.options[StreamingSessionOptions.TIMEOUT_NANO_CDN_DISCOVER_RESOLVING] = 3000;
    this.options[StreamingSessionOptions.EXPERIMENTAL_METRICS_LATENCY] = false;
    this.options[StreamingSessionOptions.LEGACY_MULTICAST_ONLY] = false;
    this.updates = [];
  }

  /**
   * Create StreamingSessionOptions with default values. This method can be chained.
   * @param globalOptions Optional. Global options
   * @param sessionOptions Optional. Session options
   * @returns {StreamingSessionOptions}
   */
  _createClass(StreamingSessionOptions, [{
    key: "option",
    value:
    /**
     * Set an option. This method can be chained
     * @param option Option
     * @param value Value
     * @returns {StreamingSessionOptions} Same object, used for method chaining
     */
    function option(_option, value) {
      if (this.validate(_option, value)) {
        this.options[_option] = value;
        if (_option === StreamingSessionOptions.PIP_SESSION && value === true) {
          this.option(StreamingSessionOptions.REQUEST_NANO_CDN, false);
        }
        if (this.updates.indexOf(_option) === -1) {
          this.updates.push(_option);
        }
      }
      return this;
    }

    /**
     * Get an option value
     * @param option Option
     * @returns {*}
     */
  }, {
    key: "get",
    value: function get(option) {
      var undefinable = [StreamingSessionOptions.USERAGENT_AD_EVENT];
      if (this.options[option] === undefined && undefinable.indexOf(option) === -1) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.w(TAG, 'Warning: get option ' + option + ' not found');
      }
      return this.options[option];
    }

    /**
     * Set an option value
     * @param option Option
     * @param value Value
     */
  }, {
    key: "set",
    value: function set(option, value) {
      this.option(option, value);
    }

    /**
     * Validate an option with the given value
     * @param option Option
     * @param value Value
     * @returns {boolean} true if the option/value has the right format, false if not. Print an error if necessary.
     */
  }, {
    key: "validate",
    value: function validate(option, value) {
      if (option === StreamingSessionOptions.SESSION_REPORTING_MODE) {
        if (value === StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT || value === StreamingSessionOptions.SESSION_REPORTING_MODE_KEEPALIVE_TEARDOWN || value === StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER || value === StreamingSessionOptions.SESSION_REPORTING_MODE_DISABLED) {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: SESSION_REPORTING_MODE should be SESSION_REPORTING_MODE_DEFAULT, ' + 'SESSION_REPORTING_MODE_KEEPALIVE_TEARDOWN, SESSION_REPORTING_MODE_METRICS_RECEIVER or SESSION_REPORTING_MODE_DISABLED');
        return false;
      } else if (option === StreamingSessionOptions.SESSION_KEEPALIVE || option === StreamingSessionOptions.SESSION_TEARDOWN) {
        if (value === StreamingSessionOptions.SESSION_DISABLED || value === StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN || value === StreamingSessionOptions.SESSION_ENABLED) {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be SESSION_ENABLED_IF_BROADPEAK_DOMAIN, ' + 'SESSION_DISABLED or SESSION_ENABLED');
        return false;
      } else if (option === StreamingSessionOptions.SESSION_KEEPALIVE_FREQUENCY) {
        if (typeof value === 'number' && value >= 5000 && value <= 60000) {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be a number within 5000ms and 60000ms');
        return false;
      } else if (option === StreamingSessionOptions.USERAGENT_AD_EVENT /* || option === StreamingSessionOptions.CDN_EDGE_PARSER*/) {
        if (typeof value === 'string' || typeof value === 'undefined') {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be a string or undefined');
        return false;
      } else if (option === StreamingSessionOptions.GDPR_PREFERENCE) {
        if (typeof value === 'number' && value >= 1 && value <= 4) {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be a number within 1 and 4');
        return false;
      } else if (option >= StreamingSessionOptions.TIMEOUT_NANO_CDN_REQUEST_ROUTER && option <= StreamingSessionOptions.TIMEOUT_NANO_CDN_DISCOVER_RESOLVING) {
        if (typeof value === 'number') {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be a number');
        return false;
      } else if (option === StreamingSessionOptions.REQUEST_NANO_CDN_PRIORITY) {
        if (value >= StreamingSessionOptions.PRIORITY_NANO_CDN_CONF && value <= StreamingSessionOptions.PRIORITY_LOAD_BALANCING) {
          return true;
        }
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be PRIORITY_NANO_CDN_CONF, ' + 'PRIORITY_APP_CONF or PRIORITY_LOAD_BALANCING');
        return false;
      } else if (option === undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: option should not be undefined');
        return false;
      }
      var valid = typeof value === 'boolean';
      if (!valid) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.e(TAG, 'Error: ' + StreamingSessionOptions.optionToString(option) + ' value should be a boolean');
      }
      return valid;
    }
  }, {
    key: "print",
    value: function print() {
      var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TAG;
      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var id = arguments.length > 2 ? arguments[2] : undefined;
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + 'Options', id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   MULTICAST_ONLY=' + this.get(StreamingSessionOptions.MULTICAST_ONLY), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   LEGACY_MULTICAST_ONLY=' + this.get(StreamingSessionOptions.LEGACY_MULTICAST_ONLY), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_REDIRECT_THIRD_PARTY_CDN=' + this.get(StreamingSessionOptions.REQUEST_REDIRECT_THIRD_PARTY_CDN), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_DIVERSITY=' + this.get(StreamingSessionOptions.REQUEST_DIVERSITY), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_NANO_CDN=' + this.get(StreamingSessionOptions.REQUEST_NANO_CDN), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_NANO_CDN_DURING_GET_QUERY=' + this.get(StreamingSessionOptions.REQUEST_NANO_CDN_DURING_GET_QUERY), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_BROADPEAK_CDN=' + this.get(StreamingSessionOptions.REQUEST_BROADPEAK_CDN), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI=' + this.get(StreamingSessionOptions.REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_DIVERSITY_DYNAMIC_FAILOVER=' + this.get(StreamingSessionOptions.REQUEST_DIVERSITY_DYNAMIC_FAILOVER), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_BKYOU_IF_BROADPEAK_CDN=' + this.get(StreamingSessionOptions.REQUEST_BKYOU_IF_BROADPEAK_CDN), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   REQUEST_NANO_CDN_PRIORITY=' + StreamingSessionOptions.nanoCDNPriorityToString(this.get(StreamingSessionOptions.REQUEST_NANO_CDN_PRIORITY)), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   SESSION_KEEPALIVE=' + StreamingSessionOptions.stateToString(this.get(StreamingSessionOptions.SESSION_KEEPALIVE)), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   SESSION_KEEPALIVE_FREQUENCY=' + this.get(StreamingSessionOptions.SESSION_KEEPALIVE_FREQUENCY) + 'ms', id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   SESSION_TEARDOWN=' + StreamingSessionOptions.stateToString(this.get(StreamingSessionOptions.SESSION_TEARDOWN)), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   SESSION_REPORTING_MODE=' + StreamingSessionOptions.reportingModeToString(this.get(StreamingSessionOptions.SESSION_REPORTING_MODE)), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   TIMEOUT_NANO_CDN_REQUEST_ROUTER=' + this.get(StreamingSessionOptions.TIMEOUT_NANO_CDN_REQUEST_ROUTER) + 'ms', id);
      if (this.get(StreamingSessionOptions.USERAGENT_AD_EVENT) !== undefined) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   USERAGENT_AD_EVENT=' + this.get(StreamingSessionOptions.USERAGENT_AD_EVENT), id);
      }
      /* if (this.get(StreamingSessionOptions.CDN_EDGE_PARSER) !== '') {
          LoggerManager.i(tag, prefix + '   CDN_EDGE_PARSER=' + this.get(StreamingSessionOptions.CDN_EDGE_PARSER), id);
      }*/
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   PIP_SESSION=' + this.get(StreamingSessionOptions.PIP_SESSION), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   ULTRA_LOW_LATENCY_SUPPORT=' + this.get(StreamingSessionOptions.ULTRA_LOW_LATENCY_SUPPORT), id);
      _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   GDPR_PREFERENCE=' + this.get(StreamingSessionOptions.GDPR_PREFERENCE), id);
    }
  }, {
    key: "printUpdates",
    value: function printUpdates() {
      var _this = this;
      var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TAG;
      var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var id = arguments.length > 2 ? arguments[2] : undefined;
      this.updates.forEach(function (option) {
        _utils_LoggerManager__WEBPACK_IMPORTED_MODULE_11__.LoggerManager.i(tag, prefix + '   ' + StreamingSessionOptions.optionToString(option) + '=' + StreamingSessionOptions.valueToString(option, _this.get(option)), id);
      });
    }
  }], [{
    key: "create",
    value: function create() {
      var globalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
      var sessionOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      var options = new StreamingSessionOptions();
      if (globalOptions instanceof StreamingSessionOptions) {
        options.options = _objectSpread({}, globalOptions.options);
      }
      if (sessionOptions !== undefined) {
        sessionOptions.updates.forEach(function (option) {
          options.options[option] = sessionOptions.options[option];
        });
      }
      return options;
    }
  }, {
    key: "optionToString",
    value: function optionToString(option) {
      switch (option) {
        case this.MULTICAST_ONLY:
          return 'MULTICAST_ONLY';
        case this.PIP_SESSION:
          return 'PIP_SESSION';
        case this.ULTRA_LOW_LATENCY_SUPPORT:
          return 'ULTRA_LOW_LATENCY_SUPPORT';
        case this.GDPR_PREFERENCE:
          return 'GDPR_PREFERENCE';
        case this.REQUEST_REDIRECT_THIRD_PARTY_CDN:
          return 'REQUEST_REDIRECT_THIRD_PARTY_CDN';
        case this.REQUEST_DIVERSITY:
          return 'REQUEST_DIVERSITY';
        case this.REQUEST_NANO_CDN:
          return 'REQUEST_NANO_CDN';
        case this.REQUEST_BROADPEAK_CDN:
          return 'REQUEST_BROADPEAK_CDN';
        case this.REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI:
          return 'REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI';
        case this.REQUEST_DIVERSITY_DYNAMIC_FAILOVER:
          return 'REQUEST_DIVERSITY_DYNAMIC_FAILOVER';
        case this.REQUEST_NANO_CDN_DURING_GET_QUERY:
          return 'REQUEST_NANO_CDN_DURING_GET_QUERY';
        case this.REQUEST_BKYOU_IF_BROADPEAK_CDN:
          return 'REQUEST_BKYOU_IF_BROADPEAK_CDN';
        case this.REQUEST_NANO_CDN_PRIORITY:
          return 'REQUEST_NANO_CDN_PRIORITY';
        case this.SESSION_KEEPALIVE:
          return 'SESSION_KEEPALIVE';
        case this.SESSION_TEARDOWN:
          return 'SESSION_TEARDOWN';
        case this.SESSION_REPORTING_MODE:
          return 'SESSION_REPORTING_MODE';
        case this.SESSION_KEEPALIVE_FREQUENCY:
          return 'SESSION_KEEPALIVE_FREQUENCY';
        case this.USERAGENT_AD_EVENT:
          return 'USERAGENT_AD_EVENT';
        /* case this.CDN_EDGE_PARSER:
            return 'CDN_EDGE_PARSER';*/
        case this.TIMEOUT_NANO_CDN_REQUEST_ROUTER:
          return 'TIMEOUT_NANO_CDN_REQUEST_ROUTER';
        case this.TIMEOUT_NANO_CDN_STATIC_RESOLVING:
          return 'TIMEOUT_NANO_CDN_STATIC_RESOLVING';
        case this.TIMEOUT_NANO_CDN_DISCOVER_RESOLVING:
          return 'TIMEOUT_NANO_CDN_DISCOVER_RESOLVING';
        case this.PRIORITY_NANO_CDN_CONF:
          return 'PRIORITY_NANO_CDN_CONF';
        case this.PRIORITY_APP_CONF:
          return 'PRIORITY_APP_CONF';
        case this.PRIORITY_LOAD_BALANCING:
          return 'PRIORITY_LOAD_BALANCING';
        case this.LEGACY_MULTICAST_ONLY:
          return 'LEGACY_MULTICAST_ONLY';
      }
      return 'unknown';
    }
  }, {
    key: "valueToString",
    value: function valueToString(option, value) {
      switch (option) {
        case this.SESSION_KEEPALIVE:
        case this.SESSION_TEARDOWN:
          return this.stateToString(value);
        case this.SESSION_REPORTING_MODE:
          return this.reportingModeToString(value);
        case this.REQUEST_NANO_CDN_PRIORITY:
          return this.nanoCDNPriorityToString(value);
      }
      return String(value);
    }
  }, {
    key: "stateToString",
    value: function stateToString(state) {
      switch (state) {
        case StreamingSessionOptions.SESSION_DISABLED:
          return 'disabled';
        case StreamingSessionOptions.SESSION_ENABLED_IF_BROADPEAK_DOMAIN:
          return 'enabled if broadpeak domain name';
        case StreamingSessionOptions.SESSION_ENABLED:
          return 'enabled';
      }
      return 'unknown';
    }
  }, {
    key: "reportingModeToString",
    value: function reportingModeToString(reportMode) {
      switch (reportMode) {
        case StreamingSessionOptions.SESSION_REPORTING_MODE_DEFAULT:
          return 'default';
        case StreamingSessionOptions.SESSION_REPORTING_MODE_KEEPALIVE_TEARDOWN:
          return 'keepalive/teardown';
        case StreamingSessionOptions.SESSION_REPORTING_MODE_METRICS_RECEIVER:
          return 'metricsReceiver';
        case StreamingSessionOptions.SESSION_REPORTING_MODE_DISABLED:
          return 'disabled';
      }
      return 'unknown';
    }
  }, {
    key: "nanoCDNPriorityToString",
    value: function nanoCDNPriorityToString(priority) {
      switch (priority) {
        case StreamingSessionOptions.PRIORITY_NANO_CDN_CONF:
          return 'nanoCDN conf';
        case StreamingSessionOptions.PRIORITY_APP_CONF:
          return 'init order';
        case StreamingSessionOptions.PRIORITY_LOAD_BALANCING:
          return 'load balancing';
      }
      return 'unknown';
    }
  }]);
  return StreamingSessionOptions;
}();
// Options
/**
 * MULTICAST_ONLY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "MULTICAST_ONLY", 0);
/**
 * ULTRA_LOW_LATENCY_SUPPORT
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "ULTRA_LOW_LATENCY_SUPPORT", 1);
/**
 *
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "PIP_SESSION", 2);
/**
 * GDPR_PREFERENCE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "GDPR_PREFERENCE", 3);
/**
 * REQUEST_REDIRECT_THIRD_PARTY_CDN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_REDIRECT_THIRD_PARTY_CDN", 100);
/**
 * REQUEST_DIVERSITY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_DIVERSITY", 101);
/**
 * REQUEST_NANO_CDN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_NANO_CDN", 102);
/**
 * REQUEST_BROADPEAK_CDN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_BROADPEAK_CDN", 103);
/**
 * REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_LOCAL_NANO_CDN_IF_CONNECTED_TO_WIFI", 104);
/**
 * REQUEST_DIVERSITY_DYNAMIC_FAILOVER
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_DIVERSITY_DYNAMIC_FAILOVER", 105);
/**
 * REQUEST_NANO_CDN_DURING_GET_QUERY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_NANO_CDN_DURING_GET_QUERY", 106);
/**
 * REQUEST_BKYOU_IF_BROADPEAK_CDN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_BKYOU_IF_BROADPEAK_CDN", 107);
/**
 * REQUEST_NANO_CDN_PRIORITY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "REQUEST_NANO_CDN_PRIORITY", 108);
/**
 * SESSION_KEEPALIVE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_KEEPALIVE", 200);
/**
 * SESSION_TEARDOWN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_TEARDOWN", 201);
/**
 * SESSION_REPORTING_MODE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_REPORTING_MODE", 202);
/**
 * SESSION_KEEPALIVE_FREQUENCY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_KEEPALIVE_FREQUENCY", 203);
/**
 * USERAGENT_AD_EVENT
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "USERAGENT_AD_EVENT", 300);
// static CDN_EDGE_PARSER = 400;
/**
 * TIMEOUT_NANO_CDN_REQUEST_ROUTER
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "TIMEOUT_NANO_CDN_REQUEST_ROUTER", 500);
/**
 * TIMEOUT_NANO_CDN_STATIC_RESOLVING
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "TIMEOUT_NANO_CDN_STATIC_RESOLVING", 501);
/**
 * TIMEOUT_NANO_CDN_DISCOVER_RESOLVING
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "TIMEOUT_NANO_CDN_DISCOVER_RESOLVING", 502);
/**
 * PRIORITY_NANO_CDN_CONF
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "PRIORITY_NANO_CDN_CONF", 600);
/**
 * PRIORITY_APP_CONF
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "PRIORITY_APP_CONF", 601);
/**
 * PRIORITY_LOAD_BALANCING
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "PRIORITY_LOAD_BALANCING", 602);
/**
 * EXPERIMENTAL_METRICS_LATENCY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "EXPERIMENTAL_METRICS_LATENCY", 900);
/**
 * LEGACY_MULTICAST_ONLY
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "LEGACY_MULTICAST_ONLY", 1000);
/**
 * SESSION_DISABLED
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_DISABLED", -1);
/**
 * SESSION_ENABLED_IF_BROADPEAK_DOMAIN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_ENABLED_IF_BROADPEAK_DOMAIN", 0);
/**
 * SESSION_ENABLED
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_ENABLED", 1);
/**
 * SESSION_REPORTING_MODE_DEFAULT
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_REPORTING_MODE_DEFAULT", 0);
/**
 * SESSION_REPORTING_MODE_KEEPALIVE_TEARDOWN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_REPORTING_MODE_KEEPALIVE_TEARDOWN", 1);
/**
 * SESSION_REPORTING_MODE_METRICS_RECEIVER
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_REPORTING_MODE_METRICS_RECEIVER", 2);
/**
 * SESSION_REPORTING_MODE_DISABLED
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "SESSION_REPORTING_MODE_DISABLED", -1);
/**
 * MULTICAST_UNKNOWN
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "MULTICAST_UNKNOWN", -1);
/**
 * MULTICAST_INACTIVE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "MULTICAST_INACTIVE", 0);
/**
 * MULTICAST_INACTIVE_WAS_ACTIVE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "MULTICAST_INACTIVE_WAS_ACTIVE", 1);
/**
 * MULTICAST_ACTIVE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "MULTICAST_ACTIVE", 2);
/**
 * GDPR_DELETE
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "GDPR_DELETE", 1);
/**
 * GDPR_ANONYMIZED
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "GDPR_ANONYMIZED", 2);
/**
 * GDPR_ENCRYPTED
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "GDPR_ENCRYPTED", 3);
/**
 * GDPR_CLEAR
 * @type {number}
 */
_defineProperty(StreamingSessionOptions, "GDPR_CLEAR", 4);

/***/ }),

/***/ "./src_core/session/streaming/StreamingSessionResult.js":
/*!**************************************************************!*\
  !*** ./src_core/session/streaming/StreamingSessionResult.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StreamingSessionResult: function() { return /* binding */ StreamingSessionResult; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.string.trim.js */ "./node_modules/core-js/modules/es.string.trim.js");
/* harmony import */ var core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.match.js */ "./node_modules/core-js/modules/es.string.match.js");
/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8__);









function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * Streaming session result
 */
var StreamingSessionResult = /*#__PURE__*/function () {
  function StreamingSessionResult(url, errorCode) {
    var detailedErrorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
    _classCallCheck(this, StreamingSessionResult);
    /**
     * Result URL
     */
    _defineProperty(this, "url", void 0);
    /**
     * Diversity failover session
     * Defined only if uCDN returned a Diversity response
     */
    _defineProperty(this, "diversityFailoverSession", void 0);
    /**
     * Result status code
     */
    _defineProperty(this, "errorCode", void 0);
    /**
     * Detailed error code (int). It depends on the errorCode.
     */
    _defineProperty(this, "detailedErrorCode", void 0);
    /**
     * Detailed error message (string). It depends on the errorCode.
     */
    _defineProperty(this, "detailedErrorMessage", void 0);
    /**
     * Is the session started on a nanoCDN
     */
    _defineProperty(this, "nanoCDNUsed", void 0);
    _defineProperty(this, "nanoCDNDescr", void 0);
    this.url = url;
    this.errorCode = errorCode;
    this.detailedErrorMessage = detailedErrorMessage.trim();
    var match = detailedErrorMessage.match('^([0-9]+).*');
    if (match !== null && match[1] !== undefined) {
      this.detailedErrorCode = parseInt(match[1], 10);
    } else if (this.detailedErrorMessage === '') {
      this.detailedErrorCode = StreamingSessionResult.RESULT_NO_DETAILED_ERROR;
    } else {
      this.detailedErrorCode = StreamingSessionResult.RESULT_DETAILED_ERROR_PARSING_ERROR;
    }
    this.nanoCDNUsed = false;
    this.nanoCDNDescr = undefined;
  }
  _createClass(StreamingSessionResult, [{
    key: "getURL",
    value:
    /**
     * Get the final streaming URL. Empty string if an error occurred, use getErrorCode() and getErrorMessage() for more details.
     * @return Streaming URL
     */
    function getURL() {
      return this.url;
    }

    /**
     * Get the list of fallback URLs.
     * Diversity
     * @returns URL list
     */
  }, {
    key: "getFallbackURLList",
    value: function getFallbackURLList() {
      if (this.diversityFailoverSession !== undefined) {
        return this.diversityFailoverSession.getFallbackURLList();
      }
      return [];
    }

    /**
     * Session request ended with an error code
     * @return True if the request ended with an error code
     */
  }, {
    key: "isError",
    value: function isError() {
      return this.errorCode !== StreamingSessionResult.RESULT_NO_ERROR;
    }

    /**
     * Get the error status code if an error occurred during the session creation. 0 if no error.
     * @return Error code
     */
  }, {
    key: "getErrorCode",
    value: function getErrorCode() {
      return this.errorCode;
    }

    /**
     * Get the error message if an error occurred during the session creation. empty if no error.
     * @return Error message
     */
  }, {
    key: "getErrorMessage",
    value: function getErrorMessage() {
      return StreamingSessionResult.getErrorMessage(this.errorCode);
    }

    /**
     * Get the detailed error code if an error occurred during the session creation. 0 if no detail associated to the error or no error.
     * @return Detailed error code
     */
  }, {
    key: "getDetailedErrorCode",
    value: function getDetailedErrorCode() {
      return this.detailedErrorCode;
    }

    /**
     * Get the detailed error message if an error occurred during the session creation. empty string if no detail associated to the error or no error.
     * @return Detailed error message
     */
  }, {
    key: "getDetailedErrorMessage",
    value: function getDetailedErrorMessage() {
      return this.detailedErrorMessage;
    }

    /**
     * Is the session started on a nanoCDN
     * @returns {boolean} true if a nanoCDN is used
     */
  }, {
    key: "isNanoCDNUsed",
    value: function isNanoCDNUsed() {
      return this.nanoCDNUsed;
    }
  }], [{
    key: "success",
    value: function success(url) {
      return new StreamingSessionResult(url, StreamingSessionResult.RESULT_NO_ERROR);
    }
  }, {
    key: "error",
    value: function error(errorCode) {
      var detailedErrorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      return new StreamingSessionResult('', errorCode, detailedErrorMessage);
    }
  }, {
    key: "getErrorMessage",
    value: function getErrorMessage(errorCode) {
      switch (errorCode) {
        case StreamingSessionResult.RESULT_NO_ERROR:
          return 'Result success. The session has been created.';
        case StreamingSessionResult.RESULT_NO_STREAMING_URL_FOUND:
          return 'Request error. No streaming URL has been found. Default error when requesting the CDN (BkM/uCDN).';
        case StreamingSessionResult.RESULT_CDN_RESPONSE_UNREADABLE:
          return 'Request error. The CDN response is unreadable (timeout error, CORS error, connection error).';
        case StreamingSessionResult.RESULT_REQUESTED_URL_NOT_FOUND_ON_CDN:
          return 'Request error. Content not found on the CDN (error 4XX).';
        case StreamingSessionResult.RESULT_REQUESTED_URL_NOT_FOUND_ON_NANOCDN:
          return 'Request error. Content not found on the nanoCDN (error 404, timeout error, CORS error or connection error).';
        case StreamingSessionResult.RESULT_REQUESTED_URL_CDN_ERROR:
          return 'Request error. The CDN returned an unknown error (error 5XX).';
        case StreamingSessionResult.RESULT_NANOCDN_SESSION_LIMIT_REACHED:
          return 'nanoCDN error. All nanoCDN on the network responded with session limit reached error.';
        case StreamingSessionResult.RESULT_NANOCDN_SESSION_LIMIT_REACHED_ON_REQUESTED_CHANNEL:
          return 'nanoCDN error. All nanoCDN on the network responded with session limit reached error for the requested channel.';
        case StreamingSessionResult.RESULT_NANOCDN_SERVICE_UNAVAILABLE:
          return 'nanoCDN error. All nanoCDN on the network have their service unavailable.';
        case StreamingSessionResult.RESULT_NANOCDN_CHANNEL_UNAVAILABLE:
          return 'nanoCDN error. The requested channel is unavailable on all nanoCDN of the network.';
        case StreamingSessionResult.RESULT_NANOCDN_REQUEST_LOCAL_IF_CONNECTED_TO_WIFI_NOT_ALLOWED:
          return 'nanoCDN error. A nanoCDN on 127.0.0.1 has been found and is connected to Wi-Fi but it is not allowed.';
        case StreamingSessionResult.RESULT_API_PARAMETER_FORMAT_ERROR:
          return 'Api error. A method parameter does not have the right format.';
        case StreamingSessionResult.RESULT_API_NOT_INITIALIZED:
          return 'Api error. SmartLib init not called';
        case StreamingSessionResult.RESULT_SESSION_HAS_BEEN_STOPPED_DURING_REQUEST:
          return 'Workflow error. The session has been stopped during request.';
        case StreamingSessionResult.RESULT_REQUEST_ALREADY_DONE:
          return 'Workflow error. The request has already been done for that session.';
      }
      return 'No error message for the error code ' + errorCode;
    }
  }]);
  return StreamingSessionResult;
}();
// Error codes
_defineProperty(StreamingSessionResult, "RESULT_NO_ERROR", 0);
// Success
/**
 * Unknown error when requesting the CDN (BkM/uCDN)
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NO_STREAMING_URL_FOUND", 3100);
/**
 * Timeout error, CORS error or connection error when requesting the CDN (BkM/uCDN)
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_CDN_RESPONSE_UNREADABLE", 3101);
/**
 * Error 4XX returned by the CDN (BkM/uCDN)
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_REQUESTED_URL_NOT_FOUND_ON_CDN", 3102);
/**
 * Requested URL not found on the nanoCDN (404 error, unkown error, content not found with multicast only enabled)
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_REQUESTED_URL_NOT_FOUND_ON_NANOCDN", 3103);
/**
 * Error 5XX returned by the CDN (BkM/uCDN)
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_REQUESTED_URL_CDN_ERROR", 3104);
/**
 * All nanoCDN on the network responded with session limit reached error
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NANOCDN_SESSION_LIMIT_REACHED", 3201);
/**
 * All nanoCDN on the network responded with session limit reached error for the requested channel
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NANOCDN_SESSION_LIMIT_REACHED_ON_REQUESTED_CHANNEL", 3202);
/**
 * All nanoCDN on the network have their services unavailable
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NANOCDN_SERVICE_UNAVAILABLE", 3203);
/**
 * The requested channel is unavailable on all nanoCDN of the network
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NANOCDN_CHANNEL_UNAVAILABLE", 3204);
/**
 * A nanoCDN on 127.0.0.1 has been found and is connected to Wi-Fi but it is not allowed
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NANOCDN_REQUEST_LOCAL_IF_CONNECTED_TO_WIFI_NOT_ALLOWED", 3205);
/**
 * Timeout error, CORS error or connection error when requesting the nanoCDN
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NANOCDN_RESPONSE_UNREADABLE", 3206);
/**
 * API called with format error
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_API_PARAMETER_FORMAT_ERROR", 3400);
/**
 * API called while SmartLib is not initialized
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_API_NOT_INITIALIZED", 3401);
/**
 * The session has been stopped during getURL request
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_SESSION_HAS_BEEN_STOPPED_DURING_REQUEST", 3500);
/**
 * The request has already been done for that session (i.e getURL called twice)
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_REQUEST_ALREADY_DONE", 3501);
/**
 * No detailed error code provided
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_NO_DETAILED_ERROR", 0);
/**
 * No detailed error code provided
 * @type {number}
 */
_defineProperty(StreamingSessionResult, "RESULT_DETAILED_ERROR_PARSING_ERROR", -1);

/***/ }),

/***/ "./src_core/utils/DateUtils.js":
/*!*************************************!*\
  !*** ./src_core/utils/DateUtils.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ DateUtils; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);






function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var DateUtils = /*#__PURE__*/function () {
  function DateUtils() {
    _classCallCheck(this, DateUtils);
  }
  _createClass(DateUtils, null, [{
    key: "formatDate",
    value: function formatDate() {
      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
      var operator = '';
      if (date < 0) {
        date *= -1;
        operator = '-';
      }
      var day = date.getDate() <= 9 ? '0' + date.getDate() : date.getDate();
      var month = date.getMonth() + 1 <= 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;
      var hours = date.getHours() <= 9 ? '0' + date.getHours() : date.getHours();
      var minutes = date.getMinutes() <= 9 ? '0' + date.getMinutes() : date.getMinutes();
      var seconds = date.getSeconds() <= 9 ? '0' + date.getSeconds() : date.getSeconds();
      var millis = String(date.getMilliseconds());
      if (millis.length === 1) {
        millis = '00' + millis;
      } else if (millis.length === 2) {
        millis = '0' + millis;
      }
      return operator + month + '-' + day + ' ' + hours + ':' + minutes + ':' + seconds + '.' + millis;
    }
  }, {
    key: "formatTime",
    value: function formatTime(time) {
      var operator = '';
      if (time < 0) {
        time *= -1;
        operator = '-';
      }
      var dateMillis = time % 1000;
      var dateSeconds = Math.floor(time / 1000 % 60);
      var dateMinutes = Math.floor(time / (1000 * 60) % 60);
      var dateHours = Math.floor(time / (1000 * 60 * 60) % 24);
      var hours = dateHours <= 9 ? '0' + dateHours : dateHours;
      var minutes = dateMinutes <= 9 ? '0' + dateMinutes : dateMinutes;
      var seconds = dateSeconds <= 9 ? '0' + dateSeconds : dateSeconds;
      var millis = String(dateMillis);
      if (millis.length === 1) {
        millis = '00' + millis;
      } else if (millis.length === 2) {
        millis = '0' + millis;
      }
      return operator + hours + ':' + minutes + ':' + seconds + '.' + millis;
    }
  }]);
  return DateUtils;
}();


/***/ }),

/***/ "./src_core/utils/LoggerManager.js":
/*!*****************************************!*\
  !*** ./src_core/utils/LoggerManager.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LogLevel: function() { return /* binding */ LogLevel; },
/* harmony export */   LoggerManager: function() { return /* binding */ LoggerManager; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.iterator.js */ "./node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ "./node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.weak-map.js */ "./node_modules/core-js/modules/es.weak-map.js");
/* harmony import */ var core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_weak_map_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/web.dom-collections.iterator.js */ "./node_modules/core-js/modules/web.dom-collections.iterator.js");
/* harmony import */ var core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_collections_iterator_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _DateUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./DateUtils */ "./src_core/utils/DateUtils.js");
function _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }
function _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError("Cannot initialize the same private elements twice on an object"); } }
function _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get"); return _classApplyDescriptorGet(receiver, descriptor); }
function _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }
function _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }
function _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError("attempted to " + action + " private field on non-instance"); } return privateMap.get(receiver); }
function _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError("attempted to set read only private field"); } descriptor.value = value; } }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var AbstractLoggerHandler = /*#__PURE__*/function () {
  function AbstractLoggerHandler() {
    _classCallCheck(this, AbstractLoggerHandler);
  }
  _createClass(AbstractLoggerHandler, null, [{
    key: "log",
    value: function log(level, tag, logs) {}
  }]);
  return AbstractLoggerHandler;
}();
/**
 * Log redirect listener class
 */
var LogRedirectListener = /*#__PURE__*/function () {
  function LogRedirectListener() {
    _classCallCheck(this, LogRedirectListener);
  }
  _createClass(LogRedirectListener, null, [{
    key: "onLog",
    value:
    // eslint-disable-line no-unused-vars
    /**
     * Called for each log generated by SmartLib
     * @param log Log line
     */
    function onLog(log) {}
  }]);
  return LogRedirectListener;
}();
var LogLevel = /*#__PURE__*/_createClass(function LogLevel() {
  _classCallCheck(this, LogLevel);
});
_defineProperty(LogLevel, "VERBOSE", 0);
_defineProperty(LogLevel, "DEBUG", 1);
_defineProperty(LogLevel, "INFO", 2);
_defineProperty(LogLevel, "WARN", 3);
_defineProperty(LogLevel, "ERROR", 4);
var LogLevelOutput = /*#__PURE__*/_createClass(function LogLevelOutput() {
  _classCallCheck(this, LogLevelOutput);
});
/**
 * Logger manager
 */
_defineProperty(LogLevelOutput, "NONE", -1);
_defineProperty(LogLevelOutput, "BASIC", 0);
_defineProperty(LogLevelOutput, "VERBOSE", 1);
var _loggerHandler = /*#__PURE__*/new WeakMap();
var _logs = /*#__PURE__*/new WeakMap();
var _logLevelOutput = /*#__PURE__*/new WeakMap();
var _redirectListener = /*#__PURE__*/new WeakMap();
var LoggerManager = /*#__PURE__*/function () {
  function LoggerManager() {
    _classCallCheck(this, LoggerManager);
    _classPrivateFieldInitSpec(this, _loggerHandler, {
      writable: true,
      value: AbstractLoggerHandler
    });
    _classPrivateFieldInitSpec(this, _logs, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _logLevelOutput, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldInitSpec(this, _redirectListener, {
      writable: true,
      value: void 0
    });
    _classPrivateFieldSet(this, _logs, []);
    _classPrivateFieldSet(this, _logLevelOutput, LogLevelOutput.VERBOSE);
  }
  _createClass(LoggerManager, [{
    key: "init",
    value: function init(loggerHandler) {
      _classPrivateFieldSet(this, _loggerHandler, loggerHandler);
    }
  }, {
    key: "release",
    value: function release() {
      _classPrivateFieldSet(this, _loggerHandler, undefined);
    }
  }, {
    key: "printLogs",
    value: function printLogs(level, tag, logs, id) {
      if (_classPrivateFieldGet(this, _logs).length > 100) {
        _classPrivateFieldSet(this, _logs, []);
      }
      if (id !== undefined) {
        logs = '[' + id + '] ' + logs;
      }
      _classPrivateFieldGet(this, _logs).push(tag + ': ' + logs);
      if (_classPrivateFieldGet(this, _redirectListener) !== undefined) {
        var _classPrivateFieldGet2;
        // Redirect android log to core log
        var line = _DateUtils__WEBPACK_IMPORTED_MODULE_10__["default"].formatDate() + ' ';
        switch (level) {
          case LogLevel.VERBOSE:
            line += 'V/';
            break;
          case LogLevel.DEBUG:
            line += 'D/';
            break;
          case LogLevel.INFO:
            line += 'I/';
            break;
          case LogLevel.WARN:
            line += 'W/';
            break;
          case LogLevel.ERROR:
            line += 'W/';
            break;
        }
        line += tag + ': ' + logs;
        (_classPrivateFieldGet2 = _classPrivateFieldGet(this, _redirectListener)) === null || _classPrivateFieldGet2 === void 0 || _classPrivateFieldGet2.onLog(line);
      } else {
        // Core is not yet loaded, print directly
        _classPrivateFieldGet(this, _loggerHandler).log(level, tag, logs, id);
      }
    }
  }, {
    key: "printVerboseLogs",
    value: function printVerboseLogs(tag, logs, id) {
      if (_classPrivateFieldGet(this, _logLevelOutput) < LogLevelOutput.VERBOSE) {
        return;
      }
      this.printLogs(LogLevel.VERBOSE, tag, logs, id);
    }
  }, {
    key: "printDebugLogs",
    value: function printDebugLogs(tag, logs, id) {
      if (_classPrivateFieldGet(this, _logLevelOutput) < LogLevelOutput.VERBOSE) {
        return;
      }
      this.printLogs(LogLevel.DEBUG, tag, logs, id);
    }
  }, {
    key: "printInfoLogs",
    value: function printInfoLogs(tag, logs, id) {
      if (_classPrivateFieldGet(this, _logLevelOutput) <= LogLevelOutput.NONE) {
        return;
      }
      this.printLogs(LogLevel.INFO, tag, logs, id);
    }
  }, {
    key: "printWarnLogs",
    value: function printWarnLogs(tag, logs, id) {
      if (_classPrivateFieldGet(this, _logLevelOutput) <= LogLevelOutput.NONE) {
        return;
      }
      this.printLogs(LogLevel.WARN, tag, logs, id);
    }
  }, {
    key: "printErrorLogs",
    value: function printErrorLogs(tag, logs, id) {
      if (_classPrivateFieldGet(this, _logLevelOutput) <= LogLevelOutput.NONE) {
        return;
      }
      this.printLogs(LogLevel.ERROR, tag, logs, id);
    }
  }, {
    key: "getLogs",
    value: function getLogs() {
      return _classPrivateFieldGet(this, _logs).join('\n');
    }
  }, {
    key: "resetLogs",
    value: function resetLogs() {
      _classPrivateFieldSet(this, _logs, []);
    }
  }, {
    key: "getLogLevel",
    value: function getLogLevel(logLevel) {
      return _classPrivateFieldGet(this, _logLevelOutput);
    }

    /**
     * Set the log level
     * -1 to disable log
     * 0 to info log level
     * 1 to verbose log level
     *
     * 1 by default (verbose)
     * @param logLevel
     */
  }, {
    key: "setLogLevel",
    value: function setLogLevel(logLevel) {
      _classPrivateFieldSet(this, _logLevelOutput, logLevel);
    }

    /**
     * Set the log redirect listener
     * Change the default output the log
     * If set, SmartLib stops printing to the default output and only use the log redirect listener
     * @param listener LogRedirectListener or undefined
     */
  }, {
    key: "setLogRedirectListener",
    value: function setLogRedirectListener(listener) {
      _classPrivateFieldSet(this, _redirectListener, listener);
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!LoggerManager.instance) {
        LoggerManager.instance = new LoggerManager();
      }
      return LoggerManager.instance;
    }
  }, {
    key: "v",
    value: function v(tag, logs, id) {
      LoggerManager.getInstance().printVerboseLogs(tag, logs, id);
    }
  }, {
    key: "d",
    value: function d(tag, logs, id) {
      LoggerManager.getInstance().printDebugLogs(tag, logs, id);
    }
  }, {
    key: "i",
    value: function i(tag, logs, id) {
      LoggerManager.getInstance().printInfoLogs(tag, logs, id);
    }
  }, {
    key: "w",
    value: function w(tag, logs, id) {
      LoggerManager.getInstance().printWarnLogs(tag, logs, id);
    }
  }, {
    key: "e",
    value: function e(tag, logs, id) {
      LoggerManager.getInstance().printErrorLogs(tag, logs, id);
    }
  }]);
  return LoggerManager;
}();
_defineProperty(LoggerManager, "instance", void 0);


/***/ }),

/***/ "./src_core/utils/MathUtils.js":
/*!*************************************!*\
  !*** ./src_core/utils/MathUtils.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ MathUtils; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.regexp.constructor.js */ "./node_modules/core-js/modules/es.regexp.constructor.js");
/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.regexp.sticky.js */ "./node_modules/core-js/modules/es.regexp.sticky.js");
/* harmony import */ var core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ "./node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_12__);













function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var MathUtils = /*#__PURE__*/function () {
  function MathUtils() {
    _classCallCheck(this, MathUtils);
  }
  _createClass(MathUtils, null, [{
    key: "randomIntFromInterval",
    value: function randomIntFromInterval(min, max) {
      return Math.floor(Math.random() * (max - min + 1) + min);
    }
  }, {
    key: "bufferToBase64Lookup",
    value: function bufferToBase64Lookup(idx) {
      if (idx < 26) {
        return String.fromCharCode(idx + 'A'.charCodeAt(0));
      }
      if (idx < 52) {
        return String.fromCharCode(idx - 26 + 'a'.charCodeAt(0));
      }
      if (idx < 62) {
        return String.fromCharCode(idx - 52 + '0'.charCodeAt(0));
      }
      if (idx === 62) {
        return '-';
      }
      if (idx === 63) {
        return '_';
      }
      return '';
    }
  }, {
    key: "bufferToBase64",
    value: function bufferToBase64(byteBuffer) {
      var i;
      var buffer = byteBuffer.data();
      var length = byteBuffer.length();
      var out = '';
      for (i = 0; i < length; i += 3) {
        var groupsOfSix = [undefined, undefined, undefined, undefined];
        groupsOfSix[0] = buffer[i] >> 2;
        groupsOfSix[1] = (buffer[i] & 0x03) << 4;
        if (length > i + 1) {
          groupsOfSix[1] |= buffer[i + 1] >> 4;
          groupsOfSix[2] = (buffer[i + 1] & 0x0f) << 2;
        }
        if (length > i + 2) {
          groupsOfSix[2] |= buffer[i + 2] >> 6;
          groupsOfSix[3] = buffer[i + 2] & 0x3f;
        }
        for (var j = 0; j < groupsOfSix.length; j++) {
          if (typeof groupsOfSix[j] === 'undefined') {
            // out += '=';
          } else {
            out += MathUtils.bufferToBase64Lookup(groupsOfSix[j]);
          }
        }
      }
      return out;
    }
  }, {
    key: "stringToBase64",
    value: function stringToBase64(s) {
      var r = '';
      var p = '';
      var c = s.length % 3;

      // add a right zero pad to make this string a multiple of 3 characters
      if (c > 0) {
        for (; c < 3; c++) {
          p += '=';
          s += '\0';
        }
      }

      // increment over the length of the string, three characters at a time
      for (c = 0; c < s.length; c += 3) {
        // we add newlines after every 76 output characters, according to the MIME specs
        /* if (c > 0 && (c / 3 * 4) % 76 === 0) {
            r += '\r\n';
        }*/

        // these three 8-bit (ASCII) characters become one 24-bit number
        var n = (s.charCodeAt(c) << 16) + (s.charCodeAt(c + 1) << 8) + s.charCodeAt(c + 2);

        // this 24-bit number gets separated into four 6-bit numbers
        n = [n >>> 18 & 63, n >>> 12 & 63, n >>> 6 & 63, n & 63];

        // those four 6-bit numbers are used as indices into the base64 character list
        r += MathUtils.BASE64_CHARS[n[0]] + MathUtils.BASE64_CHARS[n[1]] + MathUtils.BASE64_CHARS[n[2]] + MathUtils.BASE64_CHARS[n[3]];
      }
      // add the actual padding string, after removing the zero pad
      return r.substring(0, r.length - p.length) + p;
    }
  }, {
    key: "base64ToString",
    value: function base64ToString(s) {
      // remove/ignore any characters not in the base64 characters list
      //  or the pad character -- particularly newlines
      s = s.replace(new RegExp('[^' + MathUtils.BASE64_CHARS.split('') + '=]', 'g'), '');

      // replace any incoming padding with a zero pad (the 'A' character is zero)
      var p = s.charAt(s.length - 1) === '=' ? s.charAt(s.length - 2) === '=' ? 'AA' : 'A' : '';
      var r = '';
      s = s.substr(0, s.length - p.length) + p;

      // increment over the length of this encoded string, four characters at a time
      for (var c = 0; c < s.length; c += 4) {
        // each of these four characters represents a 6-bit index in the base64 characters list
        //  which, when concatenated, will give the 24-bit number for the original 3 characters
        var n = (MathUtils.BASE64_CHARS.indexOf(s.charAt(c)) << 18) + (MathUtils.BASE64_CHARS.indexOf(s.charAt(c + 1)) << 12) + (MathUtils.BASE64_CHARS.indexOf(s.charAt(c + 2)) << 6) + MathUtils.BASE64_CHARS.indexOf(s.charAt(c + 3));

        // split the 24-bit number into the original three 8-bit (ASCII) characters
        r += String.fromCharCode(n >>> 16 & 255, n >>> 8 & 255, n & 255);
      }
      // remove any zero pad that was added to make this a multiple of 24 bits
      return r.substring(0, r.length - p.length);
    }
  }, {
    key: "floor",
    value: function floor(x) {
      return x >>> 0;
    }
  }, {
    key: "bufferToString",
    value: function bufferToString(buffer) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : buffer.length;
      var output = '[0x';
      for (var i = 0; i < length; i++) {
        var x = buffer[i];
        output += ('00' + Number(x).toString(16)).slice(-2);
        if (i < length - 1) {
          output += ',0x';
        }
      }
      output += '] (capacity:' + buffer.length + ')';
      return output;
    }
  }]);
  return MathUtils;
}();
_defineProperty(MathUtils, "BASE64_CHARS", 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/');


/***/ }),

/***/ "./src_core/utils/RequestUtils.js":
/*!****************************************!*\
  !*** ./src_core/utils/RequestUtils.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ RequestUtils; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.match.js */ "./node_modules/core-js/modules/es.string.match.js");
/* harmony import */ var core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_match_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.regexp.constructor.js */ "./node_modules/core-js/modules/es.regexp.constructor.js");
/* harmony import */ var core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.regexp.sticky.js */ "./node_modules/core-js/modules/es.regexp.sticky.js");
/* harmony import */ var core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_sticky_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string.js */ "./node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.array.index-of.js */ "./node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.string.starts-with.js */ "./node_modules/core-js/modules/es.string.starts-with.js");
/* harmony import */ var core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_starts_with_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_13__);














function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var RequestUtils = /*#__PURE__*/function () {
  function RequestUtils() {
    _classCallCheck(this, RequestUtils);
  }
  _createClass(RequestUtils, null, [{
    key: "parseURL",
    value: function parseURL(href) {
      if (!this.isValidUrl(href)) {
        return null;
      }
      var match = href.match('^(https?)\\:\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$');
      var result = match && {
        href: href,
        protocol: match[1],
        host: match[2],
        hostname: match[3],
        port: match[4],
        path: match[5],
        query: match[6],
        hash: match[7]
      };
      if (result !== null && result.query !== null && result.query.length > 0) {
        result.query = result.query.substring(1);
      }
      return result;
    }
  }, {
    key: "getParam",
    value: function getParam(url, paramName) {
      if (!this.isValidUrl(url)) {
        return '';
      }
      paramName = paramName.replace(/[\[\]]/g, '\\$&');
      var regex = new RegExp('[?&]' + paramName + '(=([^&#]*)|&|#|$)');
      var results = regex.exec(url);
      if (!results) {
        return '';
      }
      if (!results[2]) {
        return '';
      }
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }
  }, {
    key: "addOrReplaceParam",
    value: function addOrReplaceParam(url, paramName, paramValue) {
      var pos = url.indexOf('?' + paramName + '=');
      if (pos < 0) pos = url.indexOf('&' + paramName + '=');
      if (pos >= 0) {
        var prefix = url.substring(0, url.indexOf(paramName));
        var suffix = url.substring(url.indexOf(paramName));
        suffix = suffix.indexOf('&') >= 0 ? suffix.substring(suffix.indexOf('&')) : '';
        return prefix + paramName + '=' + paramValue + suffix;
      }
      return (url.indexOf('?') < 0 ? url + '?' : url + '&') + paramName + '=' + paramValue;
    }
  }, {
    key: "extractHostnamePort",
    value: function extractHostnamePort(url) {
      var hostname;
      if (!this.isValidUrl(url)) {
        return '';
      }
      if (url.indexOf('://') > -1) {
        hostname = url.split('/')[2];
      } else {
        hostname = url.split('/')[0];
      }
      hostname = hostname.split('?')[0];
      return hostname;
    }
  }, {
    key: "extractProtocol",
    value: function extractProtocol(url) {
      return this.isValidUrl(url) ? url.split('://')[0] : '';
    }
  }, {
    key: "isValidUrl",
    value: function isValidUrl(url) {
      return url !== null && url !== '' && url !== undefined;
    }
  }, {
    key: "isRelativeUrl",
    value: function isRelativeUrl(url) {
      return url.startsWith('/');
    }
  }]);
  return RequestUtils;
}();
_defineProperty(RequestUtils, "REGEX_IP", '^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}(:[0-9]+)?$');
_defineProperty(RequestUtils, "REGEX_HOSTNAME", '^([A-Za-z0-9\\_\\-\\.]+)(:[0-9]+)?$');
_defineProperty(RequestUtils, "REGEX_TICKET", '^[0-5a-z]{30,50}$');
_defineProperty(RequestUtils, "REGEX_TICKET_TRANSCODED", '^.*@[0-5a-z]{30,50}$');


/***/ }),

/***/ "./src_core/utils/ValidatorUtils.js":
/*!******************************************!*\
  !*** ./src_core/utils/ValidatorUtils.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ ValidatorUtils; }
/* harmony export */ });
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ "./node_modules/core-js/modules/es.regexp.exec.js");
/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.string.replace.js */ "./node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive.js */ "./node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive.js */ "./node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.js */ "./node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ "./node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ "./node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.number.constructor.js */ "./node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor_js__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _LoggerManager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./LoggerManager */ "./src_core/utils/LoggerManager.js");








function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var TAG = 'BpkValidator';
var ValidatorUtils = /*#__PURE__*/function () {
  function ValidatorUtils() {
    _classCallCheck(this, ValidatorUtils);
  }
  _createClass(ValidatorUtils, null, [{
    key: "typeParameter",
    value: function typeParameter(object, type, message) {
      if (typeof object === type) {
        return true;
      }
      _LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, message);
      return false;
    }
  }, {
    key: "typeOrUndefinedParameter",
    value: function typeOrUndefinedParameter(object, type, message) {
      if (typeof object === type || object === undefined) {
        return true;
      }
      _LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, message);
      return false;
    }
  }, {
    key: "typeOrNullParameter",
    value: function typeOrNullParameter(object, type, message) {
      if (typeof object === type || object === null) {
        return true;
      }
      _LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, message);
      return false;
    }
  }, {
    key: "stringNonEmpty",
    value: function stringNonEmpty(object, message) {
      if (typeof object === 'string' && object.length > 0) {
        return true;
      }
      _LoggerManager__WEBPACK_IMPORTED_MODULE_8__.LoggerManager.e(TAG, message);
      return false;
    }
  }, {
    key: "toBkAString",
    value: function toBkAString(input) {
      if (input !== undefined && typeof input === 'string') {
        return input.replace(/\n/g, '').replace(/\t/g, '').replace(/\r/g, '');
      }
      return input;
    }
  }]);
  return ValidatorUtils;
}();


/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw new $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-constructor.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/a-constructor.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsConstructor(argument) is true`
module.exports = function (argument) {
  if (isConstructor(argument)) return argument;
  throw new $TypeError(tryToString(argument) + ' is not a constructor');
};


/***/ }),

/***/ "./node_modules/core-js/internals/a-possible-prototype.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/a-possible-prototype.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var $String = String;
var $TypeError = TypeError;

module.exports = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw new $TypeError("Can't set " + $String(argument) + ' as a prototype');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] === undefined) {
  defineProperty(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/advance-string-index.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/advance-string-index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-instance.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/an-instance.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");

var $TypeError = TypeError;

module.exports = function (it, Prototype) {
  if (isPrototypeOf(Prototype, it)) return it;
  throw new $TypeError('Incorrect invocation');
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw new $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-buffer-non-extensible.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-buffer-non-extensible.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = fails(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8);
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
  }
});


/***/ }),

/***/ "./node_modules/core-js/internals/array-for-each.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-for-each.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),

/***/ "./node_modules/core-js/internals/array-from.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-from.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var $Array = Array;

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var IS_CONSTRUCTOR = isConstructor(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];
    for (;!(step = call(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = lengthOfArrayLike(O);
    result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE === 1;
  var IS_FILTER = TYPE === 2;
  var IS_SOME = TYPE === 3;
  var IS_EVERY = TYPE === 4;
  var IS_FIND_INDEX = TYPE === 6;
  var IS_FILTER_REJECT = TYPE === 7;
  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var length = lengthOfArrayLike(self);
    var boundFunction = bind(callbackfn, that);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-method-has-species-support.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-has-species-support.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-method-is-strict.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/array-method-is-strict.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-set-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/array-set-length.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Safari < 13 does not throw an error in this case
var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {
  // makes no sense without proper strict mode support
  if (this !== undefined) return true;
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', { writable: false }).length = 1;
  } catch (error) {
    return error instanceof TypeError;
  }
}();

module.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {
  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {
    throw new $TypeError('Cannot set read only .length');
  } return O.length = length;
} : function (O, length) {
  return O.length = length;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice-simple.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice-simple.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

var $Array = Array;
var max = Math.max;

module.exports = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = $Array(max(fin - k, 0));
  var n = 0;
  for (; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-slice.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/array-slice.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis([].slice);


/***/ }),

/***/ "./node_modules/core-js/internals/array-sort.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/array-sort.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

var floor = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySlice(array, 0, middle), comparefn),
    mergeSort(arraySlice(array, middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

module.exports = mergeSort;


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose(iterator, 'throw', error);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  try {
    if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  } catch (error) { return false; } // workaround of old WebKit + `eval` bug
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection-weak.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/collection-weak.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var getWeakData = (__webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js").getWeakData);
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var ArrayIterationModule = __webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var splice = uncurryThis([].splice);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (state) {
  return state.frozen || (state.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) splice(this.entries, index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    defineBuiltIns(Prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && hasOwn(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && hasOwn(data, state.id);
      }
    });

    defineBuiltIns(Prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return Constructor;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/collection.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/collection.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
    defineBuiltIn(NativePrototype, KEY,
      KEY === 'add' ? function add(value) {
        uncurriedNativeMethod(this, value === 0 ? 0 : value);
        return this;
      } : KEY === 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY === 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY === 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, NativePrototype);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, constructor: true, forced: Constructor !== NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-is-regexp-logic.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "./node_modules/core-js/internals/correct-prototype-getter.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/correct-prototype-getter.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "./node_modules/core-js/internals/create-iter-result-object.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-iter-result-object.js ***!
  \*********************************************************************/
/***/ (function(module) {


// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
module.exports = function (value, done) {
  return { value: value, done: done };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ (function(module) {


module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/create-property.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/date-to-primitive.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/date-to-primitive.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");

var $TypeError = TypeError;

// `Date.prototype[@@toPrimitive](hint)` method implementation
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
module.exports = function (hint) {
  anObject(this);
  if (hint === 'string' || hint === 'default') hint = 'string';
  else if (hint !== 'number') throw new $TypeError('Incorrect hint');
  return ordinaryToPrimitive(this, hint);
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in-accessor.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in-accessor.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, name, descriptor) {
  if (descriptor.get) makeBuiltIn(descriptor.get, name, { getter: true });
  if (descriptor.set) makeBuiltIn(descriptor.set, name, { setter: true });
  return defineProperty.f(target, name, descriptor);
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-ins.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-ins.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

module.exports = function (target, src, options) {
  for (var key in src) defineBuiltIn(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-global-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/delete-property-or-throw.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/delete-property-or-throw.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

module.exports = function (O, P) {
  if (!delete O[P]) throw new $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
/***/ (function(module) {


var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

module.exports = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/does-not-exceed-safe-integer.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/does-not-exceed-safe-integer.js ***!
  \************************************************************************/
/***/ (function(module) {


var $TypeError = TypeError;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

module.exports = function (it) {
  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-iterables.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/dom-iterables.js ***!
  \*********************************************************/
/***/ (function(module) {


// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "./node_modules/core-js/internals/dom-token-list-prototype.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/dom-token-list-prototype.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-ff-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-ff-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var firefox = userAgent.match(/firefox\/(\d+)/i);

module.exports = !!firefox && +firefox[1];


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-browser.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-browser.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var IS_DENO = __webpack_require__(/*! ../internals/engine-is-deno */ "./node_modules/core-js/internals/engine-is-deno.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

module.exports = !IS_DENO && !IS_NODE
  && typeof window == 'object'
  && typeof document == 'object';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-deno.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-deno.js ***!
  \**********************************************************/
/***/ (function(module) {


/* global Deno -- Deno case */
module.exports = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ie-or-edge.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ie-or-edge.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var UA = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /MSIE|Trident/.test(UA);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios-pebble.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios-pebble.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /ipad|iphone|ipod/i.test(userAgent) && typeof Pebble != 'undefined';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-ios.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-ios.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

// eslint-disable-next-line redos/no-vulnerable -- safe
module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-node.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-node.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

module.exports = classof(global.process) === 'process';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-is-webos-webkit.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-is-webos-webkit.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ (function(module) {


module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/engine-webkit-version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-webkit-version.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

module.exports = !!webkit && +webkit[1];


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ (function(module) {


// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ (function(module) {


module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "./node_modules/core-js/modules/es.regexp.exec.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;

module.exports = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) !== 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () {
      execCalled = true;
      return null;
    };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = uncurryThis(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    defineBuiltIn(String.prototype, KEY, methods[0]);
    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "./node_modules/core-js/internals/freezing.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/freezing.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-apply.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/function-apply.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var $Function = Function;
var concat = uncurryThis([].concat);
var join = uncurryThis([].join);
var factories = {};

var construct = function (C, argsLength, args) {
  if (!hasOwn(factories, argsLength)) {
    var list = [];
    var i = 0;
    for (; i < argsLength; i++) list[i] = 'a[' + i + ']';
    factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
// eslint-disable-next-line es/no-function-prototype-bind -- detection
module.exports = NATIVE_BIND ? $Function.bind : function bind(that /* , ...args */) {
  var F = aCallable(this);
  var Prototype = F.prototype;
  var partArgs = arraySlice(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = concat(partArgs, arraySlice(arguments));
    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
  };
  if (isObject(Prototype)) boundFunction.prototype = Prototype;
  return boundFunction;
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-accessor.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-accessor.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

module.exports = function (object, key, method) {
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) { /* empty */ }
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis(fn);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator-method.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator-method.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR)
    || getMethod(it, '@@iterator')
    || Iterators[classof(it)];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-iterator.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-iterator.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");

var $TypeError = TypeError;

module.exports = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
  throw new $TypeError(tryToString(argument) + ' is not iterable');
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-json-replacer-function.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/get-json-replacer-function.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");

var push = uncurryThis([].push);

module.exports = function (replacer) {
  if (isCallable(replacer)) return replacer;
  if (!isArray(replacer)) return;
  var rawLength = replacer.length;
  var keys = [];
  for (var i = 0; i < rawLength; i++) {
    var element = replacer[i];
    if (typeof element == 'string') push(keys, element);
    else if (typeof element == 'number' || classof(element) === 'Number' || classof(element) === 'String') push(keys, toString(element));
  }
  var keysLength = keys.length;
  var root = true;
  return function (key, value) {
    if (root) {
      root = false;
      return value;
    }
    if (isArray(this)) return value;
    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-substitution.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/get-substitution.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var floor = Math.floor;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
// eslint-disable-next-line redos/no-vulnerable -- safe
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice(str, 0, position);
      case "'": return stringSlice(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  check(typeof this == 'object' && this) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ (function(module) {


module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/host-report-errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/host-report-errors.js ***!
  \**************************************************************/
/***/ (function(module) {


module.exports = function (a, b) {
  try {
    // eslint-disable-next-line no-console -- safe
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  } catch (error) { /* empty */ }
};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inherit-if-required.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/inherit-if-required.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-metadata.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/internal-metadata.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternalModule = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
var isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "./node_modules/core-js/internals/object-is-extensible.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");

var REQUIRED = false;
var METADATA = uid('meta');
var id = 0;

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + id++, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function () {
  meta.enable = function () { /* empty */ };
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis([].splice);
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      } return result;
    };

    $({ target: 'Object', stat: true, forced: true }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = module.exports = {
  enable: enable,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array-iterator-method.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/is-array-iterator-method.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) === 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.test(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
/***/ (function(module) {


// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

module.exports = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ (function(module) {


module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-regexp.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-regexp.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) === 'RegExp');
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterate.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/iterate.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "./node_modules/core-js/internals/is-array-iterator-method.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "./node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "./node_modules/core-js/internals/get-iterator-method.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "./node_modules/core-js/internals/iterator-close.js");

var $TypeError = TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw new $TypeError(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = call(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
  } return new Result(false);
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-close.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-close.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-create-constructor.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-create-constructor.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterator-define.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/iterator-define.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/iterator-create-constructor */ "./node_modules/core-js/internals/iterator-create-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "./node_modules/core-js/internals/iterators-core.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];

    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    }

    return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
  }
  Iterators[NAME] = defaultIterator;

  return methods;
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators-core.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/iterators-core.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  defineBuiltIn(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "./node_modules/core-js/internals/iterators.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/iterators.js ***!
  \*****************************************************/
/***/ (function(module) {


module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/make-built-in.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ "./node_modules/core-js/internals/math-trunc.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
/***/ (function(module) {


var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ "./node_modules/core-js/internals/microtask.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/microtask.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var macrotask = (__webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set);
var Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/core-js/internals/queue.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_IOS_PEBBLE = __webpack_require__(/*! ../internals/engine-is-ios-pebble */ "./node_modules/core-js/internals/engine-is-ios-pebble.js");
var IS_WEBOS_WEBKIT = __webpack_require__(/*! ../internals/engine-is-webos-webkit */ "./node_modules/core-js/internals/engine-is-webos-webkit.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var microtask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
var notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!microtask) {
  var queue = new Queue();

  var flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (fn = queue.get()) try {
      fn();
    } catch (error) {
      if (queue.head) notify();
      throw error;
    }
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise;
    then = bind(promise.then, promise);
    notify = function () {
      then(flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessage
  // - onreadystatechange
  // - setTimeout
  } else {
    // `webpack` dev server bug on IE global methods - use bind(fn, global)
    macrotask = bind(macrotask, global);
    notify = function () {
      macrotask(flush);
    };
  }

  microtask = function (fn) {
    if (!queue.head) notify();
    queue.add(fn);
  };
}

module.exports = microtask;


/***/ }),

/***/ "./node_modules/core-js/internals/new-promise-capability.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/new-promise-capability.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");

var $TypeError = TypeError;

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw new $TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable(resolve);
  this.reject = aCallable(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "./node_modules/core-js/internals/not-a-regexp.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/not-a-regexp.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "./node_modules/core-js/internals/is-regexp.js");

var $TypeError = TypeError;

module.exports = function (it) {
  if (isRegExp(it)) {
    throw new $TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-assign.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var $getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && classof(it) === 'Window'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports) {


// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-prototype-of.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var $Object = Object;
var ObjectPrototype = $Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof $Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-extensible.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-extensible.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "./node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = fails(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
module.exports = (FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
  if (!isObject(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) === 'ArrayBuffer') return false;
  return $isExtensible ? $isExtensible(it) : true;
} : $isExtensible;


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {


var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/object-set-prototype-of.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-set-prototype-of.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/* eslint-disable no-proto -- safe */
var uncurryThisAccessor = __webpack_require__(/*! ../internals/function-uncurry-this-accessor */ "./node_modules/core-js/internals/function-uncurry-this-accessor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "./node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "./node_modules/core-js/internals/object-to-string.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/object-to-string.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw new $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/perform.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/perform.js ***!
  \***************************************************/
/***/ (function(module) {


module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-constructor-detection.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-constructor-detection.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var IS_BROWSER = __webpack_require__(/*! ../internals/engine-is-browser */ "./node_modules/core-js/internals/engine-is-browser.js");
var IS_DENO = __webpack_require__(/*! ../internals/engine-is-deno */ "./node_modules/core-js/internals/engine-is-deno.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");

var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
var SPECIES = wellKnownSymbol('species');
var SUBCLASSING = false;
var NATIVE_PROMISE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);

var FORCED_PROMISE_CONSTRUCTOR = isForced('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
  // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution
  if (IS_PURE && !(NativePromisePrototype['catch'] && NativePromisePrototype['finally'])) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new NativePromiseConstructor(function (resolve) { resolve(1); });
    var FakePromise = function (exec) {
      exec(function () { /* empty */ }, function () { /* empty */ });
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES] = FakePromise;
    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
    if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  } return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT;
});

module.exports = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
  SUBCLASSING: SUBCLASSING
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-native-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-native-constructor.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global.Promise;


/***/ }),

/***/ "./node_modules/core-js/internals/promise-resolve.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/promise-resolve.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "./node_modules/core-js/internals/promise-statics-incorrect-iteration.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/core-js/internals/promise-statics-incorrect-iteration.js ***!
  \*******************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);

module.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function (iterable) {
  NativePromiseConstructor.all(iterable).then(undefined, function () { /* empty */ });
});


/***/ }),

/***/ "./node_modules/core-js/internals/proxy-accessor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/proxy-accessor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

module.exports = function (Target, Source, key) {
  key in Target || defineProperty(Target, key, {
    configurable: true,
    get: function () { return Source[key]; },
    set: function (it) { Source[key] = it; }
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/queue.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/queue.js ***!
  \*************************************************/
/***/ (function(module) {


var Queue = function () {
  this.head = null;
  this.tail = null;
};

Queue.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    var tail = this.tail;
    if (tail) tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      var next = this.head = entry.next;
      if (next === null) this.tail = null;
      return entry.item;
    }
  }
};

module.exports = Queue;


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-exec-abstract.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

var $TypeError = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (isCallable(exec)) {
    var result = call(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }
  if (classof(R) === 'RegExp') return call(regexpExec, R, S);
  throw new $TypeError('RegExp#exec called on incompatible receiver');
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-exec.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-exec.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var regexpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "./node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").get);
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "./node_modules/core-js/internals/regexp-unsupported-ncg.js");

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call(nativeExec, re1, 'a');
  call(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = call(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace(flags, 'y', '');
      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice(match.input, charsAdded);
        match[0] = stringSlice(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      call(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-flags.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-flags.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-get-flags.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-get-flags.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "./node_modules/core-js/internals/regexp-flags.js");

var RegExpPrototype = RegExp.prototype;

module.exports = function (R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)
    ? call(regExpFlags, R) : flags;
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-sticky-helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-sticky-helpers.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global.RegExp;

var UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') !== null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
  return !$RegExp('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') !== null;
});

module.exports = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-dot-all.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.test('\n') && re.flags === 's');
});


/***/ }),

/***/ "./node_modules/core-js/internals/regexp-unsupported-ncg.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/regexp-unsupported-ncg.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw new $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-species.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/set-species.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineBuiltInAccessor(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/set-to-string-tag.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.34.0',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.34.0/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/species-constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/internals/species-constructor.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/core-js/internals/a-constructor.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-multibyte.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/string-multibyte.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-trim-forced.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/string-trim-forced.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var PROPER_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").PROPER);
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "./node_modules/core-js/internals/whitespaces.js");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]()
      || non[METHOD_NAME]() !== non
      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/string-trim.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/string-trim.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "./node_modules/core-js/internals/whitespaces.js");

var replace = uncurryThis(''.replace);
var ltrim = RegExp('^[' + whitespaces + ']+');
var rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = replace(string, ltrim, '');
    if (TYPE & 2) string = replace(string, rtrim, '$1');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-define-to-primitive.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-define-to-primitive.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

module.exports = function () {
  var Symbol = getBuiltIn('Symbol');
  var SymbolPrototype = Symbol && Symbol.prototype;
  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
    // `Symbol.prototype[@@toPrimitive]` method
    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
    // eslint-disable-next-line no-unused-vars -- required for .length
    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {
      return call(valueOf, this);
    }, { arity: 1 });
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-registry-detection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-registry-detection.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

/* eslint-disable es/no-symbol -- safe */
module.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;


/***/ }),

/***/ "./node_modules/core-js/internals/task.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/task.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "./node_modules/core-js/internals/validate-arguments-length.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "./node_modules/core-js/internals/engine-is-ios.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var $location, defer, channel, port;

fails(function () {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location = global.location;
});

var run = function (id) {
  if (hasOwn(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var eventListener = function (event) {
  run(event.data);
};

var globalPostMessageDefer = function (id) {
  // old engines have not location.origin
  global.postMessage(String(id), $location.protocol + '//' + $location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = arraySlice(arguments, 1);
    queue[++counter] = function () {
      apply(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = eventListener;
    defer = bind(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    isCallable(global.postMessage) &&
    !global.importScripts &&
    $location && $location.protocol !== 'file:' &&
    !fails(globalPostMessageDefer)
  ) {
    defer = globalPostMessageDefer;
    global.addEventListener('message', eventListener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "./node_modules/core-js/internals/this-number-value.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/this-number-value.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
module.exports = uncurryThis(1.0.valueOf);


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw new $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/to-string.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-string.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");

var $String = String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');
  return $String(argument);
};


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ (function(module) {


var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/validate-arguments-length.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/validate-arguments-length.js ***!
  \*********************************************************************/
/***/ (function(module) {


var $TypeError = TypeError;

module.exports = function (passed, required) {
  if (passed < required) throw new $TypeError('Not enough arguments');
  return passed;
};


/***/ }),

/***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol-define.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol-define.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js/internals/path.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "./node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol-wrapped.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol-wrapped.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
      ? Symbol[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/internals/whitespaces.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/whitespaces.js ***!
  \*******************************************************/
/***/ (function(module) {


// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.filter.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.filter.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $filter = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").filter);
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.from.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.from.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/array-from */ "./node_modules/core-js/internals/array-from.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "./node_modules/core-js/internals/check-correctness-of-iteration.js");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.includes.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.includes.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $includes = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").includes);
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

// FF99+ bug
var BROKEN_ON_SPARSE = fails(function () {
  // eslint-disable-next-line es/no-array-prototype-includes -- detection
  return !Array(1).includes();
});

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.index-of.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.index-of.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


/* eslint-disable es/no-array-prototype-indexof -- required for testing */
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var $indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");

var nativeIndexOf = uncurryThis([].indexOf);

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;
var FORCED = NEGATIVE_ZERO || !arrayMethodIsStrict('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: FORCED }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf(this, searchElement, fromIndex) || 0
      : $indexOf(this, searchElement, fromIndex);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.iterator.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.iterator.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {


var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "./node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  switch (state.kind) {
    case 'keys': return createIterResultObject(index, false);
    case 'values': return createIterResultObject(target[index], false);
  } return createIterResultObject([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.slice.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.slice.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");
var nativeSlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var $Array = Array;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === $Array || Constructor === undefined) {
        return nativeSlice(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.sort.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.sort.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var deletePropertyOrThrow = __webpack_require__(/*! ../internals/delete-property-or-throw */ "./node_modules/core-js/internals/delete-property-or-throw.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var internalSort = __webpack_require__(/*! ../internals/array-sort */ "./node_modules/core-js/internals/array-sort.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "./node_modules/core-js/internals/array-method-is-strict.js");
var FF = __webpack_require__(/*! ../internals/engine-ff-version */ "./node_modules/core-js/internals/engine-ff-version.js");
var IE_OR_EDGE = __webpack_require__(/*! ../internals/engine-is-ie-or-edge */ "./node_modules/core-js/internals/engine-is-ie-or-edge.js");
var V8 = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "./node_modules/core-js/internals/engine-webkit-version.js");

var test = [];
var nativeSort = uncurryThis(test.sort);
var push = uncurryThis(test.push);

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');

var STABLE_SORT = !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 70;
  if (FF && FF > 3) return;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 603;

  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66: case 69: case 70: case 72: value = 3; break;
      case 68: case 71: value = 4; break;
      default: value = 2;
    }

    for (index = 0; index < 47; index++) {
      test.push({ k: chr + index, v: value });
    }
  }

  test.sort(function (a, b) { return b.v - a.v; });

  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString(x) > toString(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable(comparefn);

    var array = toObject(this);

    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);

    var items = [];
    var arrayLength = lengthOfArrayLike(array);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) push(items, array[index]);
    }

    internalSort(items, getSortCompare(comparefn));

    itemsLength = lengthOfArrayLike(items);
    index = 0;

    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) deletePropertyOrThrow(array, index++);

    return array;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.splice.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.splice.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var setArrayLength = __webpack_require__(/*! ../internals/array-set-length */ "./node_modules/core-js/internals/array-set-length.js");
var doesNotExceedSafeInteger = __webpack_require__(/*! ../internals/does-not-exceed-safe-integer */ "./node_modules/core-js/internals/does-not-exceed-safe-integer.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");
var deletePropertyOrThrow = __webpack_require__(/*! ../internals/delete-property-or-throw */ "./node_modules/core-js/internals/delete-property-or-throw.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "./node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

var max = Math.max;
var min = Math.min;

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
    }
    doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else deletePropertyOrThrow(O, to);
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow(O, k - 1);
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else deletePropertyOrThrow(O, to);
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    setArrayLength(O, len - actualDeleteCount + insertCount);
    return A;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.date.to-primitive.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.date.to-primitive.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var dateToPrimitive = __webpack_require__(/*! ../internals/date-to-primitive */ "./node_modules/core-js/internals/date-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var DatePrototype = Date.prototype;

// `Date.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
if (!hasOwn(DatePrototype, TO_PRIMITIVE)) {
  defineBuiltIn(DatePrototype, TO_PRIMITIVE, dateToPrimitive);
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.json.stringify.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.json.stringify.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "./node_modules/core-js/internals/array-slice.js");
var getReplacerFunction = __webpack_require__(/*! ../internals/get-json-replacer-function */ "./node_modules/core-js/internals/get-json-replacer-function.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

var $String = String;
var $stringify = getBuiltIn('JSON', 'stringify');
var exec = uncurryThis(/./.exec);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var replace = uncurryThis(''.replace);
var numberToString = uncurryThis(1.0.toString);

var tester = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;

var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {
  var symbol = getBuiltIn('Symbol')('stringify detection');
  // MS Edge converts symbol values to JSON as {}
  return $stringify([symbol]) !== '[null]'
    // WebKit converts symbol values to JSON as null
    || $stringify({ a: symbol }) !== '{}'
    // V8 throws on boxed symbols
    || $stringify(Object(symbol)) !== '{}';
});

// https://github.com/tc39/proposal-well-formed-stringify
var ILL_FORMED_UNICODE = fails(function () {
  return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
    || $stringify('\uDEAD') !== '"\\udead"';
});

var stringifyWithSymbolsFix = function (it, replacer) {
  var args = arraySlice(arguments);
  var $replacer = getReplacerFunction(replacer);
  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined
  args[1] = function (key, value) {
    // some old implementations (like WebKit) could pass numbers as keys
    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);
    if (!isSymbol(value)) return value;
  };
  return apply($stringify, null, args);
};

var fixIllFormed = function (match, offset, string) {
  var prev = charAt(string, offset - 1);
  var next = charAt(string, offset + 1);
  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {
    return '\\u' + numberToString(charCodeAt(match, 0), 16);
  } return match;
};

if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice(arguments);
      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;
    }
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.number.constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.number.constructor.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js/internals/path.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "./node_modules/core-js/internals/this-number-value.js");
var trim = (__webpack_require__(/*! ../internals/string-trim */ "./node_modules/core-js/internals/string-trim.js").trim);

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var PureNumberNamespace = path[NUMBER];
var NumberPrototype = NativeNumber.prototype;
var TypeError = global.TypeError;
var stringSlice = uncurryThis(''.slice);
var charCodeAt = uncurryThis(''.charCodeAt);

// `ToNumeric` abstract operation
// https://tc39.es/ecma262/#sec-tonumeric
var toNumeric = function (value) {
  var primValue = toPrimitive(value, 'number');
  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
};

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (isSymbol(it)) throw new TypeError('Cannot convert a Symbol value to a number');
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = charCodeAt(it, 0);
    if (first === 43 || first === 45) {
      third = charCodeAt(it, 2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (charCodeAt(it, 1)) {
        // fast equal of /^0b[01]+$/i
        case 66:
        case 98:
          radix = 2;
          maxCode = 49;
          break;
        // fast equal of /^0o[0-7]+$/i
        case 79:
        case 111:
          radix = 8;
          maxCode = 55;
          break;
        default:
          return +it;
      }
      digits = stringSlice(it, 2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = charCodeAt(digits, index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

var FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));

var calledWithNew = function (dummy) {
  // includes check on 1..constructor(foo) case
  return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); });
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
var NumberWrapper = function Number(value) {
  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
  return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;
};

NumberWrapper.prototype = NumberPrototype;
if (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;

$({ global: true, constructor: true, wrap: true, forced: FORCED }, {
  Number: NumberWrapper
});

// Use `internal/copy-constructor-properties` helper in `core-js@4`
var copyConstructorProperties = function (target, source) {
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

if (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);
if (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.get-own-property-descriptor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var nativeGetOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");

var FORCED = !DESCRIPTORS || fails(function () { nativeGetOwnPropertyDescriptor(1); });

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.get-own-property-descriptors.js":
/*!********************************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "./node_modules/core-js/internals/create-property.js");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.get-own-property-symbols.js":
/*!****************************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.get-own-property-symbols.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });

// `Object.getOwnPropertySymbols` method
// https://tc39.es/ecma262/#sec-object.getownpropertysymbols
$({ target: 'Object', stat: true, forced: FORCED }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.get-prototype-of.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.get-prototype-of.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var nativeGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "./node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "./node_modules/core-js/internals/correct-prototype-getter.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "./node_modules/core-js/modules/es.object.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.to-string.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "./node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  defineBuiltIn(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.all.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/core-js/internals/promise-statics-incorrect-iteration.js");

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
$({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.catch.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.catch.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");

var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
$({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR, real: true }, {
  'catch': function (onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if (!IS_PURE && isCallable(NativePromiseConstructor)) {
  var method = getBuiltIn('Promise').prototype['catch'];
  if (NativePromisePrototype['catch'] !== method) {
    defineBuiltIn(NativePromisePrototype, 'catch', method, { unsafe: true });
  }
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.constructor.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.constructor.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "./node_modules/core-js/internals/engine-is-node.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "./node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "./node_modules/core-js/internals/an-instance.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var task = (__webpack_require__(/*! ../internals/task */ "./node_modules/core-js/internals/task.js").set);
var microtask = __webpack_require__(/*! ../internals/microtask */ "./node_modules/core-js/internals/microtask.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "./node_modules/core-js/internals/host-report-errors.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var Queue = __webpack_require__(/*! ../internals/queue */ "./node_modules/core-js/internals/queue.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var PromiseConstructorDetection = __webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");

var PROMISE = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR = PromiseConstructorDetection.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var setInternalState = InternalStateModule.set;
var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
var PromiseConstructor = NativePromiseConstructor;
var PromisePrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;

var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;

var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && isCallable(then = it.then) ? then : false;
};

var callReaction = function (reaction, state) {
  var value = state.value;
  var ok = state.state === FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(new TypeError('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        call(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw new TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          call(then, value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromisePrototype);
    aCallable(executor);
    call(Internal, this);
    var state = getInternalPromiseState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };

  PromisePrototype = PromiseConstructor.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new Queue(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal.prototype = defineBuiltIn(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState(this);
    var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
    state.parent = true;
    reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable(onRejected) && onRejected;
    reaction.domain = IS_NODE ? process.domain : undefined;
    if (state.state === PENDING) state.reactions.add(reaction);
    else microtask(function () {
      callReaction(reaction, state);
    });
    return reaction.promise;
  });

  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalPromiseState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };

  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && isCallable(NativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!NATIVE_PROMISE_SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromisePrototype);
    }
  }
}

$({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


// TODO: Remove this module from `core-js@4` since it's split to modules listed below
__webpack_require__(/*! ../modules/es.promise.constructor */ "./node_modules/core-js/modules/es.promise.constructor.js");
__webpack_require__(/*! ../modules/es.promise.all */ "./node_modules/core-js/modules/es.promise.all.js");
__webpack_require__(/*! ../modules/es.promise.catch */ "./node_modules/core-js/modules/es.promise.catch.js");
__webpack_require__(/*! ../modules/es.promise.race */ "./node_modules/core-js/modules/es.promise.race.js");
__webpack_require__(/*! ../modules/es.promise.reject */ "./node_modules/core-js/modules/es.promise.reject.js");
__webpack_require__(/*! ../modules/es.promise.resolve */ "./node_modules/core-js/modules/es.promise.resolve.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.race.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.race.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "./node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "./node_modules/core-js/internals/iterate.js");
var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__(/*! ../internals/promise-statics-incorrect-iteration */ "./node_modules/core-js/internals/promise-statics-incorrect-iteration.js");

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
$({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      iterate(iterable, function (promise) {
        call($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.reject.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.reject.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "./node_modules/core-js/internals/new-promise-capability.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
$({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
  reject: function reject(r) {
    var capability = newPromiseCapabilityModule.f(this);
    call(capability.reject, undefined, r);
    return capability.promise;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.promise.resolve.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.promise.resolve.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var NativePromiseConstructor = __webpack_require__(/*! ../internals/promise-native-constructor */ "./node_modules/core-js/internals/promise-native-constructor.js");
var FORCED_PROMISE_CONSTRUCTOR = (__webpack_require__(/*! ../internals/promise-constructor-detection */ "./node_modules/core-js/internals/promise-constructor-detection.js").CONSTRUCTOR);
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "./node_modules/core-js/internals/promise-resolve.js");

var PromiseConstructorWrapper = getBuiltIn('Promise');
var CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
$({ target: 'Promise', stat: true, forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR }, {
  resolve: function resolve(x) {
    return promiseResolve(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor : this, x);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.reflect.construct.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/modules/es.reflect.construct.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "./node_modules/core-js/internals/function-bind.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "./node_modules/core-js/internals/a-constructor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var nativeConstruct = getBuiltIn('Reflect', 'construct');
var ObjectPrototype = Object.prototype;
var push = [].push;

// `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});

var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});

var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aConstructor(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target === newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      apply(push, $args, args);
      return new (apply(bind, Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : ObjectPrototype);
    var result = apply(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.reflect.to-string-tag.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/modules/es.reflect.to-string-tag.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");

$({ global: true }, { Reflect: {} });

// Reflect[@@toStringTag] property
// https://tc39.es/ecma262/#sec-reflect-@@tostringtag
setToStringTag(global.Reflect, 'Reflect', true);


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.constructor.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "./node_modules/core-js/internals/inherit-if-required.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js").f);
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "./node_modules/core-js/internals/is-regexp.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var getRegExpFlags = __webpack_require__(/*! ../internals/regexp-get-flags */ "./node_modules/core-js/internals/regexp-get-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js");
var proxyAccessor = __webpack_require__(/*! ../internals/proxy-accessor */ "./node_modules/core-js/internals/proxy-accessor.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var enforceInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").enforce);
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "./node_modules/core-js/internals/set-species.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "./node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "./node_modules/core-js/internals/regexp-unsupported-ncg.js");

var MATCH = wellKnownSymbol('match');
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var SyntaxError = global.SyntaxError;
var exec = uncurryThis(RegExpPrototype.exec);
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);
// TODO: Use only proper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var BASE_FORCED = DESCRIPTORS &&
  (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {
    re2[MATCH] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return NativeRegExp(re1) !== re1 || NativeRegExp(re2) === re2 || String(NativeRegExp(re1, 'i')) !== '/a/i';
  }));

var handleDotAll = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = charAt(string, index);
    if (chr === '\\') {
      result += chr + charAt(string, ++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      } result += chr;
    }
  } return result;
};

var handleNCG = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = create(null);
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = charAt(string, index);
    if (chr === '\\') {
      chr += charAt(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (exec(IS_NCG, stringSlice(string, index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || hasOwn(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;
    else result += chr;
  } return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = getRegExpFlags(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString(pattern);
    flags = flags === undefined ? '' : toString(flags);
    rawPattern = pattern;

    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf(flags, 's') > -1;
      if (dotAll) flags = replace(flags, /s/g, '');
    }

    rawFlags = flags;

    if (MISSED_STICKY && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y) flags = replace(flags, /y/g, '');
    }

    if (UNSUPPORTED_NCG) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) { /* empty */ }

    return result;
  };

  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
    proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);
  }

  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  defineBuiltIn(global, 'RegExp', RegExpWrapper, { constructor: true });
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies('RegExp');


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.exec.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.exec.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var exec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.sticky.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.sticky.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var MISSED_STICKY = (__webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js").MISSED_STICKY);
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").get);

var RegExpPrototype = RegExp.prototype;
var $TypeError = TypeError;

// `RegExp.prototype.sticky` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
if (DESCRIPTORS && MISSED_STICKY) {
  defineBuiltInAccessor(RegExpPrototype, 'sticky', {
    configurable: true,
    get: function sticky() {
      if (this === RegExpPrototype) return;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (classof(this) === 'RegExp') {
        return !!getInternalState(this).sticky;
      }
      throw new $TypeError('Incompatible receiver, RegExp required');
    }
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.test.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.test.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "./node_modules/core-js/modules/es.regexp.exec.js");
var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");

var DELEGATES_TO_EXEC = function () {
  var execCalled = false;
  var re = /[ac]/;
  re.exec = function () {
    execCalled = true;
    return /./.exec.apply(this, arguments);
  };
  return re.test('abc') === true && execCalled;
}();

var nativeTest = /./.test;

// `RegExp.prototype.test` method
// https://tc39.es/ecma262/#sec-regexp.prototype.test
$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {
  test: function (S) {
    var R = anObject(this);
    var string = toString(S);
    var exec = R.exec;
    if (!isCallable(exec)) return call(nativeTest, R, string);
    var result = call(exec, R, string);
    if (result === null) return false;
    anObject(result);
    return true;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.regexp.to-string.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.regexp.to-string.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var PROPER_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").PROPER);
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var getRegExpFlags = __webpack_require__(/*! ../internals/regexp-get-flags */ "./node_modules/core-js/internals/regexp-get-flags.js");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) !== '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name !== TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var pattern = $toString(R.source);
    var flags = $toString(getRegExpFlags(R));
    return '/' + pattern + '/' + flags;
  }, { unsafe: true });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.ends-with.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.ends-with.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "./node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "./node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

// eslint-disable-next-line es/no-string-prototype-endswith -- safe
var nativeEndsWith = uncurryThis(''.endsWith);
var slice = uncurryThis(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString(searchString);
    return nativeEndsWith
      ? nativeEndsWith(that, search, end)
      : slice(that, end - search.length, end) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.includes.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.includes.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "./node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "./node_modules/core-js/internals/correct-is-regexp-logic.js");

var stringIndexOf = uncurryThis(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf(
      toString(requireObjectCoercible(this)),
      toString(notARegExp(searchString)),
      arguments.length > 1 ? arguments[1] : undefined
    );
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.iterator.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "./node_modules/core-js/internals/string-multibyte.js").charAt);
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/iterator-define */ "./node_modules/core-js/internals/iterator-define.js");
var createIterResultObject = __webpack_require__(/*! ../internals/create-iter-result-object */ "./node_modules/core-js/internals/create-iter-result-object.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return createIterResultObject(undefined, true);
  point = charAt(string, index);
  state.index += point.length;
  return createIterResultObject(point, false);
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.match.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.match.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "./node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "./node_modules/core-js/internals/regexp-exec-abstract.js");

// @@match logic
fixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.es/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = requireObjectCoercible(this);
      var matcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, MATCH);
      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
    function (string) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(nativeMatch, rx, S);

      if (res.done) return res.value;

      if (!rx.global) return regExpExec(rx, S);

      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = toString(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.replace.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.replace.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "./node_modules/core-js/internals/advance-string-index.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "./node_modules/core-js/internals/get-substitution.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "./node_modules/core-js/internals/regexp-exec-abstract.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = isNullOrUndefined(searchValue) ? undefined : getMethod(searchValue, REPLACE);
      return replacer
        ? call(replacer, searchValue, O, replaceValue)
        : call(nativeReplace, toString(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString(replaceValue);

      var global = rx.global;
      var fullUnicode;
      if (global) {
        fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }

      var results = [];
      var result;
      while (true) {
        result = regExpExec(rx, S);
        if (result === null) break;

        push(results, result);
        if (!global) break;

        var matchStr = toString(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString(result[0]);
        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        var replacement;
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat([matched], captures, position, S);
          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
          replacement = toString(apply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }

      return accumulatedResult + stringSlice(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.split.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.split.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "./node_modules/core-js/internals/is-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "./node_modules/core-js/internals/species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "./node_modules/core-js/internals/advance-string-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "./node_modules/core-js/internals/array-slice-simple.js");
var callRegExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "./node_modules/core-js/internals/regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "./node_modules/core-js/internals/regexp-exec.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "./node_modules/core-js/internals/regexp-sticky-helpers.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var MAX_UINT32 = 0xFFFFFFFF;
var min = Math.min;
var $push = [].push;
var exec = uncurryThis(/./.exec);
var push = uncurryThis($push);
var stringSlice = uncurryThis(''.slice);

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  // eslint-disable-next-line regexp/no-empty-group -- required for testing
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

// @@split logic
fixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] === 'c' ||
    // eslint-disable-next-line regexp/no-empty-group -- required for testing
    'test'.split(/(?:)/, -1).length !== 4 ||
    'ab'.split(/(?:ab)*/).length !== 2 ||
    '.'.split(/(.?)(.?)/).length !== 4 ||
    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = toString(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return call(nativeSplit, string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = call(regexpExec, separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          push(output, stringSlice(string, lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !exec(separatorCopy, '')) push(output, '');
      } else push(output, stringSlice(string, lastLastIndex));
      return output.length > lim ? arraySlice(output, 0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.es/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);
      return splitter
        ? call(splitter, separator, O, limit)
        : call(internalSplit, toString(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (string, limit) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);

      if (res.done) return res.value;

      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (UNSUPPORTED_Y ? 'g' : 'y');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          push(A, stringSlice(S, p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            push(A, z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      push(A, stringSlice(S, p));
      return A;
    }
  ];
}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.starts-with.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.starts-with.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "./node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "./node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");

// eslint-disable-next-line es/no-string-prototype-startswith -- safe
var nativeStartsWith = uncurryThis(''.startsWith);
var stringSlice = uncurryThis(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString(searchString);
    return nativeStartsWith
      ? nativeStartsWith(that, search, index)
      : stringSlice(that, index, index + search.length) === search;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.string.trim.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/modules/es.string.trim.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $trim = (__webpack_require__(/*! ../internals/string-trim */ "./node_modules/core-js/internals/string-trim.js").trim);
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "./node_modules/core-js/internals/string-trim-forced.js");

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.constructor.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.constructor.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var nativeObjectCreate = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternal = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "./node_modules/core-js/internals/object-get-own-property-names-external.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "./node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineWellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol-define */ "./node_modules/core-js/internals/well-known-symbol-define.js");
var defineSymbolToPrimitive = __webpack_require__(/*! ../internals/symbol-define-to-primitive */ "./node_modules/core-js/internals/symbol-define-to-primitive.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");
var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").forEach);

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';

var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);

var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
var RangeError = global.RangeError;
var TypeError = global.TypeError;
var QObject = global.QObject;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var push = uncurryThis([].push);

var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var WellKnownSymbolsStore = shared('wks');

// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var fallbackDefineProperty = function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
};

var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a !== 7;
}) ? fallbackDefineProperty : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);
  if (hasOwn(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPropertyKey(V);
  var enumerable = call(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]
    ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);
  });
  return result;
};

var $getOwnPropertySymbols = function (O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
      push(result, AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (isPrototypeOf(SymbolPrototype, this)) throw new TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      var $this = this === undefined ? global : this;
      if ($this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);
      if (hasOwn($this, HIDDEN) && hasOwn($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;
      var descriptor = createPropertyDescriptor(1, value);
      try {
        setSymbolDescriptor($this, tag, descriptor);
      } catch (error) {
        if (!(error instanceof RangeError)) throw error;
        fallbackDefineProperty($this, tag, descriptor);
      }
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  SymbolPrototype = $Symbol[PROTOTYPE];

  defineBuiltIn(SymbolPrototype, 'toString', function toString() {
    return getInternalState(this).tag;
  });

  defineBuiltIn($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  definePropertiesModule.f = $defineProperties;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    defineBuiltInAccessor(SymbolPrototype, 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames
});

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
defineSymbolToPrimitive();

// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.description.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.description.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var defineBuiltInAccessor = __webpack_require__(/*! ../internals/define-built-in-accessor */ "./node_modules/core-js/internals/define-built-in-accessor.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");

var NativeSymbol = global.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('description detection')) === 'Symbol(description detection)';
  var thisSymbolValue = uncurryThis(SymbolPrototype.valueOf);
  var symbolDescriptiveString = uncurryThis(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace = uncurryThis(''.replace);
  var stringSlice = uncurryThis(''.slice);

  defineBuiltInAccessor(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, constructor: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.for.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.for.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "./node_modules/core-js/internals/to-string.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var NATIVE_SYMBOL_REGISTRY = __webpack_require__(/*! ../internals/symbol-registry-detection */ "./node_modules/core-js/internals/symbol-registry-detection.js");

var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');

// `Symbol.for` method
// https://tc39.es/ecma262/#sec-symbol.for
$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
  'for': function (key) {
    var string = toString(key);
    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = getBuiltIn('Symbol')(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.iterator.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.iterator.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var defineWellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol-define */ "./node_modules/core-js/internals/well-known-symbol-define.js");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


// TODO: Remove this module from `core-js@4` since it's split to modules listed below
__webpack_require__(/*! ../modules/es.symbol.constructor */ "./node_modules/core-js/modules/es.symbol.constructor.js");
__webpack_require__(/*! ../modules/es.symbol.for */ "./node_modules/core-js/modules/es.symbol.for.js");
__webpack_require__(/*! ../modules/es.symbol.key-for */ "./node_modules/core-js/modules/es.symbol.key-for.js");
__webpack_require__(/*! ../modules/es.json.stringify */ "./node_modules/core-js/modules/es.json.stringify.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-symbols */ "./node_modules/core-js/modules/es.object.get-own-property-symbols.js");


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.key-for.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.key-for.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var NATIVE_SYMBOL_REGISTRY = __webpack_require__(/*! ../internals/symbol-registry-detection */ "./node_modules/core-js/internals/symbol-registry-detection.js");

var SymbolToStringRegistry = shared('symbol-to-string-registry');

// `Symbol.keyFor` method
// https://tc39.es/ecma262/#sec-symbol.keyfor
$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw new TypeError(tryToString(sym) + ' is not a symbol');
    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  }
});


/***/ }),

/***/ "./node_modules/core-js/modules/es.symbol.to-primitive.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.symbol.to-primitive.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var defineWellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol-define */ "./node_modules/core-js/internals/well-known-symbol-define.js");
var defineSymbolToPrimitive = __webpack_require__(/*! ../internals/symbol-define-to-primitive */ "./node_modules/core-js/internals/symbol-define-to-primitive.js");

// `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive
defineWellKnownSymbol('toPrimitive');

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
defineSymbolToPrimitive();


/***/ }),

/***/ "./node_modules/core-js/modules/es.weak-map.constructor.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/modules/es.weak-map.constructor.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var FREEZING = __webpack_require__(/*! ../internals/freezing */ "./node_modules/core-js/internals/freezing.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var defineBuiltIns = __webpack_require__(/*! ../internals/define-built-ins */ "./node_modules/core-js/internals/define-built-ins.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "./node_modules/core-js/internals/internal-metadata.js");
var collection = __webpack_require__(/*! ../internals/collection */ "./node_modules/core-js/internals/collection.js");
var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "./node_modules/core-js/internals/collection-weak.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var enforceInternalState = (__webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js").enforce);
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");

var $Object = Object;
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray = Array.isArray;
// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = $Object.isExtensible;
// eslint-disable-next-line es/no-object-isfrozen -- safe
var isFrozen = $Object.isFrozen;
// eslint-disable-next-line es/no-object-issealed -- safe
var isSealed = $Object.isSealed;
// eslint-disable-next-line es/no-object-freeze -- safe
var freeze = $Object.freeze;
// eslint-disable-next-line es/no-object-seal -- safe
var seal = $Object.seal;

var FROZEN = {};
var SEALED = {};
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var InternalWeakMap;

var wrapper = function (init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = collection('WeakMap', wrapper, collectionWeak);
var WeakMapPrototype = $WeakMap.prototype;
var nativeSet = uncurryThis(WeakMapPrototype.set);

// Chakra Edge bug: adding frozen arrays to WeakMap unfreeze them
var hasMSEdgeFreezingBug = function () {
  return FREEZING && fails(function () {
    var frozenArray = freeze([]);
    nativeSet(new $WeakMap(), frozenArray, 1);
    return !isFrozen(frozenArray);
  });
};

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP) if (IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var nativeDelete = uncurryThis(WeakMapPrototype['delete']);
  var nativeHas = uncurryThis(WeakMapPrototype.has);
  var nativeGet = uncurryThis(WeakMapPrototype.get);
  defineBuiltIns(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete(this, key) || state.frozen['delete'](key);
      } return nativeDelete(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) || state.frozen.has(key);
      } return nativeHas(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
      } return nativeGet(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
      } else nativeSet(this, key, value);
      return this;
    }
  });
// Chakra Edge frozen keys fix
} else if (hasMSEdgeFreezingBug()) {
  defineBuiltIns(WeakMapPrototype, {
    set: function set(key, value) {
      var arrayIntegrityLevel;
      if (isArray(key)) {
        if (isFrozen(key)) arrayIntegrityLevel = FROZEN;
        else if (isSealed(key)) arrayIntegrityLevel = SEALED;
      }
      nativeSet(this, key, value);
      if (arrayIntegrityLevel === FROZEN) freeze(key);
      if (arrayIntegrityLevel === SEALED) seal(key);
      return this;
    }
  });
}


/***/ }),

/***/ "./node_modules/core-js/modules/es.weak-map.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/modules/es.weak-map.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


// TODO: Remove this module from `core-js@4` since it's replaced to module below
__webpack_require__(/*! ../modules/es.weak-map.constructor */ "./node_modules/core-js/modules/es.weak-map.constructor.js");


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.for-each.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "./node_modules/core-js/internals/array-for-each.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");

var handlePrototype = function (CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  if (DOMIterables[COLLECTION_NAME]) {
    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
  }
}

handlePrototype(DOMTokenListPrototype);


/***/ }),

/***/ "./node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "./node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "./node_modules/core-js/internals/dom-token-list-prototype.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "./node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "./node_modules/core-js/internals/set-to-string-tag.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    setToStringTag(CollectionPrototype, COLLECTION_NAME, true);
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	!function() {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = function(result, chunkIds, fn, priority) {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var chunkIds = deferred[i][0];
/******/ 				var fn = deferred[i][1];
/******/ 				var priority = deferred[i][2];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"base": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = function(parentChunkLoadingFunction, data) {
/******/ 			var chunkIds = data[0];
/******/ 			var moreModules = data[1];
/******/ 			var runtime = data[2];
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = (function() { return (typeof self !== 'undefined' ? self : global)})()["webpackChunkSmartLibModule"] = (function() { return (typeof self !== 'undefined' ? self : global)})()["webpackChunkSmartLibModule"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AdInteractionType: function() { return /* reexport safe */ _ad_AdInteractionType__WEBPACK_IMPORTED_MODULE_1__["default"]; },
/* harmony export */   AdManager: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.AdManager; },
/* harmony export */   LoggerManager: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.LoggerManager; },
/* harmony export */   RequestManager: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.RequestManager; },
/* harmony export */   SmartLib: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.SmartLib; },
/* harmony export */   StreamingSession: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.StreamingSession; },
/* harmony export */   StreamingSessionOptions: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.StreamingSessionOptions; },
/* harmony export */   StreamingSessionResult: function() { return /* reexport safe */ core__WEBPACK_IMPORTED_MODULE_0__.StreamingSessionResult; }
/* harmony export */ });
/* harmony import */ var core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core */ "./src_core/index.js");
/* harmony import */ var _ad_AdInteractionType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ad/AdInteractionType */ "./src/ad/AdInteractionType.js");
/* harmony import */ var _engine_CoreEngine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./engine/CoreEngine */ "./src/engine/CoreEngine.js");



_engine_CoreEngine__WEBPACK_IMPORTED_MODULE_2__["default"].getInstance().init();

}();
__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,